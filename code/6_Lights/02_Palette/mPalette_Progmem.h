/**
 * @file mPalette_Progmem.h
 * @author your name (you@domain.com)
 * @brief 
 * @version 0.1
 * @date 2022-12-11
 * 
 * @copyright Copyright (c) 2023
 * 
 */
#ifndef mPalette_ProgmemPALETTES_H
#define mPalette_ProgmemPALETTES_H

#include "stdint.h"
#include "2_CoreSystem/mGlobalMacros.h"

#include "internal/mPalette_Encoding_Options.h"


// Predefined RGB colors
typedef enum {
    Black=0x000000,
    AliceBlue=0xF0F8FF,
    Amethyst=0x9966CC,
    AntiqueWhite=0xFAEBD7,
    Aqua=0x00FFFF,
    Aquamarine=0x7FFFD4,
    Azure=0xF0FFFF,
    Beige=0xF5F5DC,
    Bisque=0xFFE4C4,
    BlanchedAlmond=0xFFEBCD,
    Blue=0x0000FF,
    BlueViolet=0x8A2BE2,
    Brown=0xA52A2A,
    BurlyWood=0xDEB887,
    CadetBlue=0x5F9EA0,
    Chartreuse=0x7FFF00,
    Chocolate=0xD2691E,
    Coral=0xFF7F50,
    CornflowerBlue=0x6495ED,
    Cornsilk=0xFFF8DC,
    Crimson=0xDC143C,
    Cyan=0x00FFFF,
    DarkBlue=0x00008B,
    DarkCyan=0x008B8B,
    DarkGoldenrod=0xB8860B,
    DarkGray=0xA9A9A9,
    DarkGrey=0xA9A9A9,
    DarkGreen=0x006400,
    DarkKhaki=0xBDB76B,
    DarkMagenta=0x8B008B,
    DarkOliveGreen=0x556B2F,
    DarkOrange=0xFF8C00,
    DarkOrchid=0x9932CC,
    DarkRed=0x8B0000,
    DarkSalmon=0xE9967A,
    DarkSeaGreen=0x8FBC8F,
    DarkSlateBlue=0x483D8B,
    DarkSlateGray=0x2F4F4F,
    DarkSlateGrey=0x2F4F4F,
    DarkTurquoise=0x00CED1,
    DarkViolet=0x9400D3,
    DeepPink=0xFF1493,
    DeepSkyBlue=0x00BFFF,
    DimGray=0x696969,
    DimGrey=0x696969,
    DodgerBlue=0x1E90FF,
    FireBrick=0xB22222,
    FloralWhite=0xFFFAF0,
    ForestGreen=0x228B22,
    Fuchsia=0xFF00FF,
    Gainsboro=0xDCDCDC,
    GhostWhite=0xF8F8FF,
    Gold=0xFFD700,
    Goldenrod=0xDAA520,
    Gray=0x808080,
    Grey=0x808080,
    Green=0x008000,
    GreenYellow=0xADFF2F,
    Honeydew=0xF0FFF0,
    HotPink=0xFF69B4,
    IndianRed=0xCD5C5C,
    Indigo=0x4B0082,
    Ivory=0xFFFFF0,
    Khaki=0xF0E68C,
    Lavender=0xE6E6FA,
    LavenderBlush=0xFFF0F5,
    LawnGreen=0x7CFC00,
    LemonChiffon=0xFFFACD,
    LightBlue=0xADD8E6,
    LightCoral=0xF08080,
    LightCyan=0xE0FFFF,
    LightGoldenrodYellow=0xFAFAD2,
    LightGreen=0x90EE90,
    LightGrey=0xD3D3D3,
    LightPink=0xFFB6C1,
    LightSalmon=0xFFA07A,
    LightSeaGreen=0x20B2AA,
    LightSkyBlue=0x87CEFA,
    LightSlateGray=0x778899,
    LightSlateGrey=0x778899,
    LightSteelBlue=0xB0C4DE,
    LightYellow=0xFFFFE0,
    Lime=0x00FF00,
    LimeGreen=0x32CD32,
    Linen=0xFAF0E6,
    Magenta=0xFF00FF,
    Maroon=0x800000,
    MediumAquamarine=0x66CDAA,
    MediumBlue=0x0000CD,
    MediumOrchid=0xBA55D3,
    MediumPurple=0x9370DB,
    MediumSeaGreen=0x3CB371,
    MediumSlateBlue=0x7B68EE,
    MediumSpringGreen=0x00FA9A,
    MediumTurquoise=0x48D1CC,
    MediumVioletRed=0xC71585,
    MidnightBlue=0x191970,
    MintCream=0xF5FFFA,
    MistyRose=0xFFE4E1,
    Moccasin=0xFFE4B5,
    NavajoWhite=0xFFDEAD,
    Navy=0x000080,
    OldLace=0xFDF5E6,
    Olive=0x808000,
    OliveDrab=0x6B8E23,
    Orange=0xFFA500,
    OrangeRed=0xFF4500,
    Orchid=0xDA70D6,
    PaleGoldenrod=0xEEE8AA,
    PaleGreen=0x98FB98,
    PaleTurquoise=0xAFEEEE,
    PaleVioletRed=0xDB7093,
    PapayaWhip=0xFFEFD5,
    PeachPuff=0xFFDAB9,
    Peru=0xCD853F,
    Pink=0xFFC0CB,
    Plaid=0xCC5533,
    Plum=0xDDA0DD,
    PowderBlue=0xB0E0E6,
    Purple=0x800080,
    Red=0xFF0000,
    RosyBrown=0xBC8F8F,
    RoyalBlue=0x4169E1,
    SaddleBrown=0x8B4513,
    Salmon=0xFA8072,
    SandyBrown=0xF4A460,
    SeaGreen=0x2E8B57,
    Seashell=0xFFF5EE,
    Sienna=0xA0522D,
    Silver=0xC0C0C0,
    SkyBlue=0x87CEEB,
    SlateBlue=0x6A5ACD,
    SlateGray=0x708090,
    SlateGrey=0x708090,
    Snow=0xFFFAFA,
    SpringGreen=0x00FF7F,
    SteelBlue=0x4682B4,
    Tan=0xD2B48C,
    Teal=0x008080,
    Thistle=0xD8BFD8,
    Tomato=0xFF6347,
    Turquoise=0x40E0D0,
    Violet=0xEE82EE,
    Wheat=0xF5DEB3,
    White=0xFFFFFF,
    WhiteSmoke=0xF5F5F5,
    Yellow=0xFFFF00,
    YellowGreen=0x9ACD32,
    // LED RGB color that roughly approximates
    // the color of incandescent fairy lights,
    // assuming that you're using FastLED
    // color correction on your LEDs (recommended).
    FairyLight=0xFFE42D,
    // If you are using no color correction, use this
    FairyLightNCC=0xFF9D2A
} HTMLColorCode;


#define RGB_RED                         255,0,0, // Hue=0
#define RGB_RED_SATURATION95            255,13,13,
#define RGB_RED_SATURATION90            255,25,25,
#define RGB_RED_SATURATION80            255,51,51,
#define RGB_RED_SATURATION70            255,77,77,
#define RGB_RED_SATURATION60            255,102,102,
#define RGB_RED_SATURATION50            255,128,128,
#define RGB_RED_SATURATION40            255,153,153,
#define RGB_RED_SATURATION30            255,179,179,
#define RGB_RED_SATURATION20            255,204,204,
#define RGB_RED_SATURATION10            255,230,230,
#define RGB_RED_SATURATION0             255,255,255,
#define RGB_ORANGE                      255,60,0, // Hue=14
#define RGB_ORANGE_SATURATION95         255,69,13,
#define RGB_ORANGE_SATURATION90         255,79,25,
#define RGB_ORANGE_SATURATION80         255,99,51,
#define RGB_ORANGE_SATURATION70         255,118,77,
#define RGB_ORANGE_SATURATION60         255,138,102,
#define RGB_ORANGE_SATURATION50         255,157,128,
#define RGB_ORANGE_SATURATION40         255,177,153,
#define RGB_ORANGE_SATURATION30         255,196,179,
#define RGB_ORANGE_SATURATION20         255,216,204,
#define RGB_ORANGE_SATURATION10         255,235,230,
#define RGB_ORANGE_SATURATION0          255,255,255,
#define RGB_LIGHTORANGE                 255,85,0, // Hue=20
#define RGB_LIGHTORANGE_SATURATION95    255,94,13,
#define RGB_LIGHTORANGE_SATURATION90    255,102,25,
#define RGB_LIGHTORANGE_SATURATION80    255,119,51,
#define RGB_LIGHTORANGE_SATURATION70    255,136,77,
#define RGB_LIGHTORANGE_SATURATION60    255,153,102,
#define RGB_LIGHTORANGE_SATURATION50    255,170,128,
#define RGB_LIGHTORANGE_SATURATION40    255,187,153,
#define RGB_LIGHTORANGE_SATURATION30    255,204,179,
#define RGB_LIGHTORANGE_SATURATION20    255,221,204,
#define RGB_LIGHTORANGE_SATURATION10    255,238,230,
#define RGB_LIGHTORANGE_SATURATION0     255,255,255,
#define RGB_YELLOW                      255,213,0,  // Hue=50
#define RGB_YELLOW_SATURATION95         255,215,13,
#define RGB_YELLOW_SATURATION90         255,217,25,
#define RGB_YELLOW_SATURATION80         255,221,51,
#define RGB_YELLOW_SATURATION70         255,225,77,
#define RGB_YELLOW_SATURATION60         255,230,102,
#define RGB_YELLOW_SATURATION50         255,234,128,
#define RGB_YELLOW_SATURATION40         255,238,153,
#define RGB_YELLOW_SATURATION30         255,242,179,
#define RGB_YELLOW_SATURATION20         255,247,204,
#define RGB_YELLOW_SATURATION10         255,251,230,
#define RGB_YELLOW_SATURATION0          255,255,255,
#define RGB_LIMEGREEN                   85,255,0,  // Hue=100
#define RGB_LIMEGREEN_SATURATION95      94,255,13,
#define RGB_LIMEGREEN_SATURATION90      102,255,25,
#define RGB_LIMEGREEN_SATURATION80      119,255,51,
#define RGB_LIMEGREEN_SATURATION70      136,255,77,
#define RGB_LIMEGREEN_SATURATION60      153,255,102,
#define RGB_LIMEGREEN_SATURATION50      170,255,128,
#define RGB_LIMEGREEN_SATURATION40      187,255,153,
#define RGB_LIMEGREEN_SATURATION30      204,255,179,
#define RGB_LIMEGREEN_SATURATION20      221,255,204,
#define RGB_LIMEGREEN_SATURATION10      238,255,230,
#define RGB_LIMEGREEN_SATURATION0       255,255,255,
#define RGB_GREEN                       0,255,0, //Hue=120
#define RGB_GREEN_SATURATION95          13,255,13,
#define RGB_GREEN_SATURATION90          25,255,25,
#define RGB_GREEN_SATURATION80          51,255,51,
#define RGB_GREEN_SATURATION70          77,255,77,
#define RGB_GREEN_SATURATION60          102,255,102,
#define RGB_GREEN_SATURATION50          128,255,128,
#define RGB_GREEN_SATURATION40          153,255,153,
#define RGB_GREEN_SATURATION30          179,255,179,
#define RGB_GREEN_SATURATION20          204,255,204,
#define RGB_GREEN_SATURATION10          230,255,230,
#define RGB_GREEN_SATURATION0           255,255,255,
#define RGB_CYAN                        0,255,255, // Hue=180
#define RGB_CYAN_SATURATION95           13,255,255,
#define RGB_CYAN_SATURATION90           25,255,255,
#define RGB_CYAN_SATURATION80           51,255,255,
#define RGB_CYAN_SATURATION70           77,255,255,
#define RGB_CYAN_SATURATION60           102,255,255,
#define RGB_CYAN_SATURATION50           128,255,255,
#define RGB_CYAN_SATURATION40           153,255,255,
#define RGB_CYAN_SATURATION30           179,255,255,
#define RGB_CYAN_SATURATION20           204,255,255,
#define RGB_CYAN_SATURATION10           230,255,255,
#define RGB_CYAN_SATURATION0            255,255,255,
#define RGB_BLUE                        0,0,255, // Hue=240
#define RGB_BLUE_SATURATION95           13,255,255,
#define RGB_BLUE_SATURATION90           25,25,255,
#define RGB_BLUE_SATURATION80           51,51,255,
#define RGB_BLUE_SATURATION70           77,77,255,
#define RGB_BLUE_SATURATION60           102,102,255,
#define RGB_BLUE_SATURATION50           128,128,255,
#define RGB_BLUE_SATURATION40           153,153,255,
#define RGB_BLUE_SATURATION30           179,179,255,
#define RGB_BLUE_SATURATION20           204,204,255,
#define RGB_BLUE_SATURATION10           230,230,255,
#define RGB_BLUE_SATURATION0            255,255,255,
#define RGB_BLUEPURPLE                  170,0,255, // Hue=280
#define RGB_BLUEPURPLE_SATURATION95     174,13,255,
#define RGB_BLUEPURPLE_SATURATION90     179,25,255,
#define RGB_BLUEPURPLE_SATURATION80     187,51,255,
#define RGB_BLUEPURPLE_SATURATION70     196,77,255,
#define RGB_BLUEPURPLE_SATURATION60     204,102,255,
#define RGB_BLUEPURPLE_SATURATION50     213,128,255,
#define RGB_BLUEPURPLE_SATURATION40     221,153,255,
#define RGB_BLUEPURPLE_SATURATION30     230,179,255,
#define RGB_BLUEPURPLE_SATURATION20     238,204,255,
#define RGB_BLUEPURPLE_SATURATION10     247,230,255,
#define RGB_BLUEPURPLE_SATURATION0      255,255,255,
#define RGB_PURPLE                      255,0,255, // Hue=300
#define RGB_PURPLE_SATURATION95         255,13,255,
#define RGB_PURPLE_SATURATION90         255,25,255,
#define RGB_PURPLE_SATURATION80         255,51,255,
#define RGB_PURPLE_SATURATION70         255,77,255,
#define RGB_PURPLE_SATURATION60         255,102,255,
#define RGB_PURPLE_SATURATION50         255,128,255,
#define RGB_PURPLE_SATURATION40         255,153,255,
#define RGB_PURPLE_SATURATION30         255,179,255,
#define RGB_PURPLE_SATURATION20         255,204,255,
#define RGB_PURPLE_SATURATION10         255,230,255,
#define RGB_PURPLE_SATURATION0          255,255,255,
#define RGB_PINK                        255,0,85, // Hue=340
#define RGB_PINK_SATURATION95           255,13,255,
#define RGB_PINK_SATURATION90           255,25,102,
#define RGB_PINK_SATURATION80           255,51,119,
#define RGB_PINK_SATURATION70           255,77,136,
#define RGB_PINK_SATURATION60           255,102,153,
#define RGB_PINK_SATURATION50           255,128,170,
#define RGB_PINK_SATURATION40           255,153,187,
#define RGB_PINK_SATURATION30           255,179,204,
#define RGB_PINK_SATURATION20           255,204,221,
#define RGB_PINK_SATURATION10           255,230,238,
#define RGB_PINK_SATURATION0            255,255,255,
#define RGB_HOTPINK                     255,0,43, // Hue=350
#define RGB_HOTPINK_SATURATION95        255,13,53,
#define RGB_HOTPINK_SATURATION90        255,25,64,
#define RGB_HOTPINK_SATURATION80        255,51,85,
#define RGB_HOTPINK_SATURATION70        255,77,106,
#define RGB_HOTPINK_SATURATION60        255,102,128,
#define RGB_HOTPINK_SATURATION50        255,128,149,
#define RGB_HOTPINK_SATURATION40        255,153,170,
#define RGB_HOTPINK_SATURATION30        255,179,191,
#define RGB_HOTPINK_SATURATION20        255,204,213,
#define RGB_HOTPINK_SATURATION10        255,230,234,
#define RGB_HOTPINK_SATURATION0         255,255,255,
#define RGB_WARMWHITE                     255,128,0, // Hue=30
#define RGB_WARMWHITE_SATURATION95        255,134,13,
#define RGB_WARMWHITE_SATURATION90        255,140,25,
#define RGB_WARMWHITE_SATURATION80        255,153,51,
#define RGB_WARMWHITE_SATURATION70        255,166,77,
#define RGB_WARMWHITE_SATURATION60        255,179,102,
#define RGB_WARMWHITE_SATURATION50        255,191,128,
#define RGB_WARMWHITE_SATURATION40        255,204,153,
#define RGB_WARMWHITE_SATURATION30        255,217,179,
#define RGB_WARMWHITE_SATURATION20        255,230,204,
#define RGB_WARMWHITE_SATURATION10        255,242,230,
#define RGB_WARMWHITE_SATURATION0         255,255,255,
#define RGB_WHITE                         255,255,255,
#define RGB_BLACK                         0,0,0,

/** List of generic colours to build rgb palettes
 * Key words
 * FULL is the maximum 255 value for that colour ie R=255,0,0 | G=0,255,0 | Cyan=0,255,255
 * FADED is colours at lower brightness levels
 * PASTEL is a lower saturation colour (more cold white)
 * WARM is colours with slightly reduce saturation, so they are not exact wavelength (more warm white)
 * DARKER is coloured options that appear much darker e.g. dimmer purple 
 * ALT is alternate colour, looking aged for slight variance in the colours
 * ###_2, ###_3 is increasing levels of the above effects, ie more faded, warmer
 */
#define D_RGB_BLACK      0,0,0,
// Reds
#define D_RGB_RED_FULL             255,0,0,
#define D_RGB_RED_PASTEL_1      236,19,19,
#define D_RGB_RED_PASTEL_2      255,6,6,
#define D_RGB_RED_ALT_1         255,5,5,
#define D_RGB_RED_DARKER_4      25, 2, 0
// Orange
#define D_RGB_ORANGE_FULL    255,60,0,  
#define D_RGB_ORANGE_WARM_3     255,30,0, 
#define D_RGB_ORANGE_WARM_1     252,44,3, 
#define D_RGB_ORANGE_WARM_2     255,67,10,
#define D_RGB_ORANGE_PASTEL_90SAT    255,79,26, 
// Yellow
#define D_RGB_YELLOW_WARM_1     255,213,0,  
#define D_RGB_YELLOW_WARM_2     252,157,3,  
#define D_RGB_YELLOW_WARM_3     252,167,10,  
// Green
#define D_RGB_GREEN_FULL           0,255,0,
#define D_RGB_GREEN_FADED_1  0,200,0,
#define D_RGB_GREEN_FADED_2     0,150,0,
#define D_RGB_GREEN_FADED_3    0,100,0,
#define D_RGB_GREEN_FADED_4    0,80,0,
#define D_RGB_GREEN_FADED_ALT_1 20, 155, 0,
#define D_RGB_GREEN_PASTEL    25,112,25,
#define D_RGB_GREEN_PASTEL_FADED_1    15,90,15,
// Cyan
#define D_RGB_CYAN_FULL               0,255,255,
#define D_RGB_CYAN_FADED_1            0,200,200,
#define D_RGB_CYAN_FADED_2            0,150,150,
#define D_RGB_CYAN_FADED_3      0,100,100,
#define D_RGB_CYAN_FADED_4      0,60,60,
#define D_RGB_CYAN_FADED_5      0,30,30,
#define D_RGB_CYAN_PASTEL_80SAT    51,255,255,
// Blue
#define D_RGB_BLUE_FULL            0,0,255,
#define D_RGB_BLUE_FADED_1     0,0,200,
#define D_RGB_BLUE_FADED_2     0,0,150,
#define D_RGB_BLUE_FADED_3     0,0,100,
#define D_RGB_BLUE_ALT_1     0,100,200,
// Purple
#define D_RGB_PURPLE_BLUE     120,16,144,
#define D_RGB_PURPLE_RED      255,16,44,
#define D_RGB_PURPLE_DARKER     21,0,26,
#define D_RGB_PURPLE_ALT_1     157,0,255,
// Pink
#define D_RGB_PINK            255,0,200,
#define D_RGB_PINK_ALT_1       255,26,64,
#define D_RGB_PINK_ALT_2        255,16,44,
#define D_RGB_PINK_ALT_3       255,0,128,
#define D_RGB_PINK_FADED_1       255,0,72,
#define D_RGB_PINK_FADED_2       255,0,43,
#define D_RGB_PINK_PASTEL_2      255,70,70,
// Warm white
#define D_RGB_WHITE_WARM_1     0xFF,0x52,0x18,
#define D_RGB_WHITE_WARM_2    255, 140, 26,
#define D_RGB_WHITE_WARM_3    255, 140, 26, // Tested on microleds (set of 50)
// Cool white
#define D_RGB_WHITE_COOL_FULL         255,255,255,
#define D_RGB_WHITE_COOL_FADED_1      200,200,200, 
#define D_RGB_WHITE_COOL_FADED_2      150,150,150,
#define D_RGB_WHITE_COOL_FADED_3      100,100,100,


#define D_PALETTE_CUSTOM_PALETTE_DEFAULT_01_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_CUSTOM_PALETTE_DEFAULT_01__DATA)
{ // R,G,B
  // RGB_RED
  // RGB_GREEN
  // RGB_PINK    
  // RGB_BLUE  
  // RGB_ORANGE
  
  #if defined(USE_CUSTOM_USER_PAULA)
  // R,G,B       
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL       
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_PINK_ALT_2
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2
  // Repeated with tweaks
  D_RGB_RED_ALT_1
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL   
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_PINK_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2
  #elif defined(USE_CUSTOM_USER_JACQUELINE)
  // R,G,B       
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL       
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_PINK_ALT_2
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2
  // Repeated with tweaks
  D_RGB_RED_ALT_1
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL   
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_PINK_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2
  #else 
  /**
   * @brief Personal Default
   **/
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL       
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_PINK_ALT_2
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2
  D_RGB_RED_ALT_1
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_PINK_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_PURPLE_DARKER
  D_RGB_PINK_FADED_2
  D_RGB_CYAN_FADED_4
  #endif
};


#define D_PALETTE_CUSTOM_PALETTE_DEFAULT_02_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_CUSTOM_PALETTE_DEFAULT_02__DATA)
{ // R,G,B
  RGB_YELLOW
  RGB_RED
  RGB_ORANGE
  RGB_GREEN
  RGB_PINK
  RGB_BLUE
};


#define D_PALETTE_CUSTOM_PALETTE_DEFAULT_03_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_CUSTOM_PALETTE_DEFAULT_03__DATA)
{ // R,G,B
  RGB_GREEN
  RGB_PINK
  RGB_ORANGE
  RGB_BLUE
  RGB_YELLOW
  RGB_PURPLE
  RGB_RED
};


#define D_PALETTE_CUSTOM_PALETTE_DEFAULT_04_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_CUSTOM_PALETTE_DEFAULT_04__DATA)
{ // R,G,B
  RGB_PURPLE_SATURATION95
  RGB_HOTPINK
  RGB_ORANGE_SATURATION90
  RGB_BLUE_SATURATION95
  RGB_LIMEGREEN_SATURATION95
  RGB_PURPLE
  RGB_HOTPINK_SATURATION95
  RGB_CYAN
  RGB_PURPLE
  RGB_BLUE_SATURATION80
  RGB_YELLOW_SATURATION95
};
  

#define D_PALETTE_CUSTOM_PALETTE_DEFAULT_05_ENCODING                (PALETTE_ENCODING_TYPE_RGB_WITHINDEX_GRADIENT)    
DEF_PGM_UINT8(PM_PALETTE_CUSTOM_PALETTE_DEFAULT_05__DATA)
{ // R,G,B
  0, RGB_YELLOW
  50, RGB_GREEN
  100, RGB_PINK
  220, RGB_BLUE
  255, RGB_RED
};


#define D_PALETTE_CUSTOM_PALETTE_DEFAULT_06_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_CUSTOM_PALETTE_DEFAULT_06__DATA)
{ // R,G,B
  RGB_WARMWHITE_SATURATION40
  RGB_GREEN
  RGB_PINK
  RGB_BLUE
  RGB_RED
  RGB_ORANGE
  

};


#define D_PALETTE_CUSTOM_PALETTE_DEFAULT_07_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_CUSTOM_PALETTE_DEFAULT_07__DATA)
{ // R,G,B
  RGB_GREEN
  RGB_PINK
  RGB_ORANGE
  RGB_BLUE
  RGB_YELLOW
  RGB_PURPLE
  RGB_RED
};


#define D_PALETTE_CUSTOM_PALETTE_DEFAULT_08_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_CUSTOM_PALETTE_DEFAULT_08__DATA)
{ // R,G,B
  RGB_WARMWHITE_SATURATION80
};


#define D_PALETTE_CUSTOM_PALETTE_DEFAULT_09_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_CUSTOM_PALETTE_DEFAULT_09__DATA)
{ // R,G,B
  RGB_WARMWHITE_SATURATION20
  RGB_WARMWHITE_SATURATION20
  RGB_CYAN_SATURATION60
  RGB_WARMWHITE_SATURATION20
  RGB_WARMWHITE_SATURATION70
  RGB_BLUE_SATURATION60
  RGB_WARMWHITE_SATURATION70
  RGB_CYAN_SATURATION40
  RGB_WARMWHITE_SATURATION60
  RGB_CYAN
};


#define D_PALETTE_CUSTOM_PALETTE_DEFAULT_10_ENCODING                (PALETTE_ENCODING_TYPE_RGB_WITHINDEX_GRADIENT)    
DEF_PGM_UINT8(PM_PALETTE_CUSTOM_PALETTE_DEFAULT_10__DATA)
{ // grad,R,G,B
  0,   RGB_HOTPINK
  100, RGB_PINK_SATURATION90
  175, RGB_PURPLE
  255, RGB_HOTPINK_SATURATION95
};


#ifndef D_PALETTE_OCEAN_01_NAME_CTR
#define D_PALETTE_OCEAN_01_NAME_CTR        "Ocean 01"   
#endif
DEF_PGM_CTR  (PM_PALETTE_OCEAN_01_NAME_CTR)        D_PALETTE_OCEAN_01_NAME_CTR;
#define D_PALETTE_OCEAN_01_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_OCEAN_01__DATA)
{
  RGB_GREEN
  RGB_CYAN
  RGB_BLUE
  RGB_WHITE
};

#ifndef D_PALETTE_RAINBOW_NAME_CTR
#define D_PALETTE_RAINBOW_NAME_CTR        "Rainbow"   
#endif          
DEF_PGM_CTR  (PM_PALETTE_RAINBOW_NAME_CTR)        D_PALETTE_RAINBOW_NAME_CTR;
#define D_PALETTE_RAINBOW_ENCODING                (PALETTE_ENCODING_TYPE_RGB_WITHINDEX_GRADIENT)    
DEF_PGM_UINT8(PM_PALETTE_RAINBOW__DATA)
{
  // to make it visually nicer, I will compress the blue region
  0,    D_RGB_RED_FULL //0
  14,   RGB_LIGHTORANGE //20
  35,   RGB_YELLOW //50
  85,   RGB_GREEN //120
  127,  RGB_CYAN //180
  170,  RGB_BLUE //240
  213,  RGB_PURPLE //300
  241,  RGB_PINK //340
  255,  D_RGB_RED_FULL //0       // When handled to "wrap" correctly, there will be no need to hold the first as last
};

#ifndef D_PALETTE_RAINBOW_INVERTED_NAME_CTR
#define D_PALETTE_RAINBOW_INVERTED_NAME_CTR        "Rainbow Inverted"   
#endif          
DEF_PGM_CTR  (PM_PALETTE_RAINBOW_INVERTED_NAME_CTR)        D_PALETTE_RAINBOW_INVERTED_NAME_CTR;
#define D_PALETTE_RAINBOW_INVERTED_ENCODING                (PALETTE_ENCODING_TYPE_RGB_WITHINDEX_GRADIENT)    
DEF_PGM_UINT8(PM_PALETTE_RAINBOW_INVERTED__DATA)
{
  0,   RGB_BLUE //0
  14,  RGB_PURPLE //20
  35,  RGB_PINK //50
  85,  RGB_RED //120
  127, RGB_LIGHTORANGE //180
  170, RGB_YELLOW //240
  213, RGB_GREEN //300
  241, RGB_CYAN //340
  255, RGB_BLUE //0
};

#ifndef D_PALETTE_AUTUMN_RED_NAME_CTR
#define D_PALETTE_AUTUMN_RED_NAME_CTR        "Autumn Red"   
#endif
DEF_PGM_CTR  (PM_PALETTE_AUTUMN_RED_NAME_CTR)        D_PALETTE_AUTUMN_RED_NAME_CTR;
#define D_PALETTE_AUTUMN_RED_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_AUTUMN_RED__DATA)
{
  RGB_RED_SATURATION95
  RGB_RED
  RGB_YELLOW
  RGB_RED_SATURATION90
  RGB_YELLOW_SATURATION90
  RGB_ORANGE
};

#ifndef D_PALETTE_AUTUMN_GREEN_NAME_CTR
#define D_PALETTE_AUTUMN_GREEN_NAME_CTR        "Autumn Green"   
#endif
DEF_PGM_CTR  (PM_PALETTE_AUTUMN_GREEN_NAME_CTR)        D_PALETTE_AUTUMN_GREEN_NAME_CTR;
#define D_PALETTE_AUTUMN_GREEN_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_AUTUMN_GREEN__DATA)
{
  RGB_RED
  RGB_GREEN_SATURATION90
  RGB_YELLOW
  RGB_YELLOW_SATURATION90
  RGB_ORANGE
  RGB_LIMEGREEN_SATURATION90
};

#ifndef D_PALETTE_COLOURFUL_DEFAULT_NAME_CTR
#define D_PALETTE_COLOURFUL_DEFAULT_NAME_CTR        "Colourful Default"   
#endif
DEF_PGM_CTR  (PM_PALETTE_COLOURFUL_DEFAULT_NAME_CTR)        D_PALETTE_COLOURFUL_DEFAULT_NAME_CTR;
#define D_PALETTE_COLOURFUL_DEFAULT_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_COLOURFUL_DEFAULT__DATA)
{ // R,G,B
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_2
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_1
  D_RGB_ORANGE_FULL   
  D_RGB_GREEN_PASTEL
  D_RGB_CYAN_FADED_3
  D_RGB_PINK_FADED_1
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2 
};

#ifndef D_PALETTE_HOLLOWEEN_OP_NAME_CTR
#define D_PALETTE_HOLLOWEEN_OP_NAME_CTR        "Holloween Orange-Purple"   
#endif
DEF_PGM_CTR  (PM_PALETTE_HOLLOWEEN_OP_NAME_CTR)        D_PALETTE_HOLLOWEEN_OP_NAME_CTR;
#define D_PALETTE_HOLLOWEEN_OP_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_HOLLOWEEN_OP__DATA)
{
  D_RGB_ORANGE_WARM_3
  D_RGB_PURPLE_BLUE
};

#ifndef D_PALETTE_HOLLOWEEN_OGP_NAME_CTR
#define D_PALETTE_HOLLOWEEN_OGP_NAME_CTR        "Holloween Orange-Green-Purple"   
#endif
DEF_PGM_CTR  (PM_PALETTE_HOLLOWEEN_OGP_NAME_CTR)        D_PALETTE_HOLLOWEEN_OGP_NAME_CTR;
#define D_PALETTE_HOLLOWEEN_OGP_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_HOLLOWEEN_OGP__DATA)
{
  D_RGB_ORANGE_WARM_3
  D_RGB_GREEN_FADED_ALT_1
  D_RGB_PURPLE_BLUE
};


#ifndef D_PALETTE_COMPRESSED_RAINBOW_NAME_CTR
#define D_PALETTE_COMPRESSED_RAINBOW_NAME_CTR        "Compressed Rainbow G01|Gradient Rainbow 01"   
#endif
DEF_PGM_CTR  (PM_PALETTE_COMPRESSED_RAINBOW_NAME_CTR)        D_PALETTE_COMPRESSED_RAINBOW_NAME_CTR;
#define        D_PALETTE_COMPRESSED_RAINBOW_ENCODING        (PALETTE_ENCODING_TYPE_RGB_WITHINDEX_GRADIENT)    
DEF_PGM_UINT8(PM_PALETTE_COMPRESSED_RAINBOW__DATA)
{
  0,   RGB_RED
  51,  RGB_ORANGE
  90,  RGB_GREEN
  127,  RGB_CYAN
  165,  RGB_BLUE
  204,  RGB_PINK
  255, RGB_HOTPINK
};


/**
 * Based on christmas light colours * REORDER and sort
 * Putting the likely non changing/popular ones up front, varied colour palettes can be added at the end of XMAS
 * 
 * If I go with proper names, not numbering, then I can easier reorganise the order of the palettes
 * 
 * 
 * C01 - Traditional 5 colour UK lights with orange
 * C02 - Traditional 5 colour UK lights with yellow
 * C03 - Traditional 6 colour UK lights with orange and yellow
 * C04 - White      (Cold White)
 * C05 - Soft White (Warm White)
 * 
 * C08 - Vintage Mini Bells -- Miniature bells with a dimpled surface.
 * C09 - Vintage Merry Lights CatNo. 2206 -- http://www.liivet.uk/christmas-lights/pifco/1990s.html
 * C10 - Vintage Aged Colours
 * 
 *  *
 * ***********************************************
 * Alternate types, with no greens etc should be removed from XMAS
 * In general, XMAS should be reduced and others moved into their own naming schemes
 * 
 * 
 * Cxx - Golden Star
 * 
 * C11 - Colour/WWhite Stripe
 * C12 - Colour/CWhite Stripe
 * C06 - Mixed Whites (3 Warm, 1 Cold)
 * C07 - Blue and White
 * 
 * 
 * 
 * Change to raw values to lock them in, so no defines changes would break
 * 
 * */

/**
 * @note: Traditional 5 colour UK lights with orange
 * */
#ifndef D_PALETTE__CHRISTMAS_TRADITIONAL_RGPBO__NAME_CTR
#define D_PALETTE__CHRISTMAS_TRADITIONAL_RGPBO__NAME_CTR                 "Christmas RGPBO|Christmas Traditional - RGPBO|Christmas 01"   
#endif    
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_TRADITIONAL_RGPBO__NAME_CTR)         D_PALETTE__CHRISTMAS_TRADITIONAL_RGPBO__NAME_CTR;
#define D_PALETTE__CHRISTMAS_TRADITIONAL_RGPBO__ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_TRADITIONAL_RGPBO__DATA)
{ // R,G,B
  255,0,0, // D_RGB_RED_FULL
  0,255,0, // D_RGB_GREEN_FULL
  D_RGB_PINK_ALT_2
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL
};

/**
 * @note: Traditional lights with yellow
 * */
#ifndef D_PALETTE__CHRISTMAS_TRADITIONAL_RGPBY__NAME_CTR
#define D_PALETTE__CHRISTMAS_TRADITIONAL_RGPBY__NAME_CTR                 "Christmas RGPBY|Christmas Traditional - RGPBY|Christmas 01"   
#endif    
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_TRADITIONAL_RGPBY__NAME_CTR)         D_PALETTE__CHRISTMAS_TRADITIONAL_RGPBY__NAME_CTR;
#define D_PALETTE__CHRISTMAS_TRADITIONAL_RGPBY__ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_TRADITIONAL_RGPBY__DATA)
{ // R,G,B
  D_RGB_RED_FULL
  D_RGB_GREEN_FULL
  D_RGB_PINK_ALT_2
  D_RGB_BLUE_FADED_3
  D_RGB_YELLOW_WARM_2
};


#ifndef D_PALETTE__CHRISTMAS_TRADITIONAL_ROGPBY__NAME_CTR
#define D_PALETTE__CHRISTMAS_TRADITIONAL_ROGPBY__NAME_CTR                 "Christmas ROGPBY|Christmas Traditional - ROGPBY|Christmas 01"   
#endif    
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_TRADITIONAL_ROGPBY__NAME_CTR)         D_PALETTE__CHRISTMAS_TRADITIONAL_ROGPBY__NAME_CTR;
#define D_PALETTE__CHRISTMAS_TRADITIONAL_ROGPBY__ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_TRADITIONAL_ROGPBY__DATA)
{ // R,G,B
  D_RGB_RED_FULL
  D_RGB_ORANGE_FULL
  D_RGB_GREEN_FULL
  D_RGB_PINK_ALT_2
  D_RGB_BLUE_FADED_3
  D_RGB_YELLOW_WARM_2
};


#ifndef D_PALETTE__CHRISTMAS_TRADITIONAL_RGBO__NAME_CTR
#define D_PALETTE__CHRISTMAS_TRADITIONAL_RGBO__NAME_CTR                 "Christmas RGBO|Christmas Traditional - RGBO|Christmas 01"   
#endif    
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_TRADITIONAL_RGBO__NAME_CTR)         D_PALETTE__CHRISTMAS_TRADITIONAL_RGPBO__NAME_CTR;
#define D_PALETTE__CHRISTMAS_TRADITIONAL_RGBO__ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_TRADITIONAL_RGBO__DATA)
{ // R,G,B
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_3
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL
};


#ifndef D_PALETTE__CHRISTMAS_TRADITIONAL_RGBY__NAME_CTR
#define D_PALETTE__CHRISTMAS_TRADITIONAL_RGBY__NAME_CTR                 "Christmas RGBY|Christmas Traditional - RGPBO|Christmas 01"   
#endif    
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_TRADITIONAL_RGBY__NAME_CTR)         D_PALETTE__CHRISTMAS_TRADITIONAL_RGBY__NAME_CTR;
#define D_PALETTE__CHRISTMAS_TRADITIONAL_RGBY__ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_TRADITIONAL_RGBY__DATA)
{ // R,G,B
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_3
  D_RGB_BLUE_FADED_3
  D_RGB_YELLOW_WARM_2
};


#ifndef D_PALETTE__CHRISTMAS_COLD_WHITE__NAME_CTR
#define D_PALETTE__CHRISTMAS_COLD_WHITE__NAME_CTR                 "Bright White|Christmas Traditional - RGPBO|Christmas 01"   
#endif    
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_COLD_WHITE__NAME_CTR)         D_PALETTE__CHRISTMAS_COLD_WHITE__NAME_CTR;
#define D_PALETTE__CHRISTMAS_COLD_WHITE__ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_COLD_WHITE__DATA)
{ // R,G,B
  255, 255, 255  
};

#ifndef D_PALETTE__CHRISTMAS_WARM_WHITE__NAME_CTR
#define D_PALETTE__CHRISTMAS_WARM_WHITE__NAME_CTR                 "Warm White|Christmas Traditional - RGPBO|Christmas 01"   
#endif    
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_WARM_WHITE__NAME_CTR)         D_PALETTE__CHRISTMAS_WARM_WHITE__NAME_CTR;
#define D_PALETTE__CHRISTMAS_WARM_WHITE__ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_WARM_WHITE__DATA)
{ // R,G,B
  255, 140, 26 // Warm White   
};

#ifndef D_PALETTE__CHRISTMAS_VINTAGE_MINIBELLS__NAME_CTR
#define D_PALETTE__CHRISTMAS_VINTAGE_MINIBELLS__NAME_CTR                 "MiniBells|Christmas Traditional - RGPBO|Christmas 01"   
#endif    
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_VINTAGE_MINIBELLS__NAME_CTR)         D_PALETTE__CHRISTMAS_VINTAGE_MINIBELLS__NAME_CTR;
#define D_PALETTE__CHRISTMAS_VINTAGE_MINIBELLS__ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_VINTAGE_MINIBELLS__DATA)
{ // R,G,B
  0,120,0,    // Green
  150,0,0,    // Red
  0,0,100,    // Blue Faded
  255,16,44,  // Pink
  252,157,3,  // Yellow
  157,0,255,  // Purple
};

#ifndef D_PALETTE__CHRISTMAS_VINTAGE_MERRYLITES__NAME_CTR
#define D_PALETTE__CHRISTMAS_VINTAGE_MERRYLITES__NAME_CTR                 "MerryLites|Christmas Traditional - RGPBO|Christmas 01"   
#endif    
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_VINTAGE_MERRYLITES__NAME_CTR)         D_PALETTE__CHRISTMAS_VINTAGE_MERRYLITES__NAME_CTR;
#define D_PALETTE__CHRISTMAS_VINTAGE_MERRYLITES__ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_VINTAGE_MERRYLITES__DATA)
{ // R,G,B
  0,120,0,    // Green
  150,0,0,    // Red
  0,0,100,    // Blue Faded
  255,16,44,  // Pink
  252,157,3,  // Yellow
  157,0,255,  // Purple
};

#ifndef D_PALETTE__CHRISTMAS_VINTAGE_AGED_BULBS__NAME_CTR
#define D_PALETTE__CHRISTMAS_VINTAGE_AGED_BULBS__NAME_CTR                 "Christmas Vintage|Christmas Traditional - RGPBO|Christmas 01"   
#endif    
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_VINTAGE_AGED_BULBS__NAME_CTR)         D_PALETTE__CHRISTMAS_VINTAGE_AGED_BULBS__NAME_CTR;
#define D_PALETTE__CHRISTMAS_VINTAGE_AGED_BULBS__ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_VINTAGE_AGED_BULBS__DATA)
{ // R,G,B
  0,120,0,    // Green
  150,0,0,    // Red
  0,0,100,    // Blue Faded
  255,16,44,  // Pink
  252,157,3,  // Yellow
  157,0,255,  // Purple
};


/**
 * @brief Keep 2023 - Snowy Tree 1
 * 
 */
#ifndef D_PALETTE__CHRISTMAS_SNOWY_COLOURS_01__NAME_CTR
#define D_PALETTE__CHRISTMAS_SNOWY_COLOURS_01__NAME_CTR        "Christmas Snowy 01|Christmas Snow Tree|Christmas 12"  
#endif
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_01__NAME_CTR)        D_PALETTE__CHRISTMAS_SNOWY_COLOURS_01__NAME_CTR;
#define        D_PALETTE__CHRISTMAS_SNOWY_COLOURS_01__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_01__DATA)
{ // R,G,B
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_2
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_1
  D_RGB_ORANGE_FULL   
  D_RGB_GREEN_PASTEL
  D_RGB_CYAN_FADED_3
  D_RGB_PINK_FADED_1
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2 
};


#ifdef DEVICE_CHRISTMAS__SNOW_TREE__16_CHANNELS //tmp modified to get yellow in star


#ifndef D_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__NAME_CTR // Showy Tree 2
#define D_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__NAME_CTR        "Christmas Snowy 02|Christmas 2021 - DiningRoom Tree|Christmas 21"   
#endif
// #define PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__NAME_CTR)        D_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__NAME_CTR;
#define        D_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__DATA)
{ // R,G,B      
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL       
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_PINK_ALT_2
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2
  D_RGB_RED_ALT_1
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_PINK_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_PURPLE_DARKER
  D_RGB_PINK_FADED_2
  D_RGB_CYAN_FADED_4
};

#else


#ifndef D_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__NAME_CTR // Showy Tree 2
#define D_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__NAME_CTR        "Christmas Snowy 02|Christmas 2021 - DiningRoom Tree|Christmas 21"   
#endif
// #define PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__NAME_CTR)        D_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__NAME_CTR;
#define        D_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__DATA)
{ // R,G,B      
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL       
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_PINK_ALT_2
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2
  D_RGB_RED_ALT_1
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_PINK_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_PURPLE_DARKER
  D_RGB_PINK_FADED_2
  D_RGB_CYAN_FADED_4
};

#endif

#ifndef D_PALETTE__CHRISTMAS_SNOWY_COLOURS_03__NAME_CTR // Showy Tree 2
#define D_PALETTE__CHRISTMAS_SNOWY_COLOURS_03__NAME_CTR        "Christmas Colours Warm|Christmas 2023 - Warmer Vintage"   
#endif
// #define PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_02__DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_03__NAME_CTR)        D_PALETTE__CHRISTMAS_SNOWY_COLOURS_03__NAME_CTR;
#define        D_PALETTE__CHRISTMAS_SNOWY_COLOURS_03__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_SNOWY_COLOURS_03__DATA)
{ // R,G,B      
  D_RGB_RED_FULL
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL       
  D_RGB_CYAN_FADED_4
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2
  D_RGB_RED_ALT_1
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_FADED_1
  D_RGB_BLUE_FADED_3
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1
  D_RGB_PURPLE_DARKER
  D_RGB_PINK_FADED_2
  D_RGB_CYAN_FADED_4
};



// #ifndef D_PALETTE_CHRISTMAS_25_NAME_CTR
// #define D_PALETTE_CHRISTMAS_25_NAME_CTR        "XMAS 25+|Christmas 2022 - Outside Tree|Christmas 25"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_25_NAME_CTR)        D_PALETTE_CHRISTMAS_25_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_25_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_25__DATA)
// { // R,G,B      
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4
// };


// /**
//  *  New 2022 smaller microled transparant wire, looks more blue than 2021 version
//  * Much less green/blue
//  * NO deep purple
//  * No currently used
//  * */
// #ifndef D_PALETTE_CHRISTMAS_27_NAME_CTR
// #define D_PALETTE_CHRISTMAS_27_NAME_CTR        "XMAS 27+|Christmas 2022 - Coloured with White|Christmas 27"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_27_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_27_NAME_CTR)        D_PALETTE_CHRISTMAS_27_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_27_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_27__DATA)
// { // R,G,B                
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_PURPLE_BLUE
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   180,180,180,    // White
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4   
// };



#ifndef D_PALETTE__CHRISTMAS_BERRY_YELLOW__NAME_CTR
#define D_PALETTE__CHRISTMAS_BERRY_YELLOW__NAME_CTR        "Berry Yellow|Christmas 15"
#endif
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_BERRY_YELLOW__NAME_CTR)        D_PALETTE__CHRISTMAS_BERRY_YELLOW__NAME_CTR;
#define        D_PALETTE__CHRISTMAS_BERRY_YELLOW__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_BERRY_YELLOW__DATA)
{ // R,G,B
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_FADED_1
  D_RGB_CYAN_FADED_3
  D_RGB_YELLOW_WARM_2
};


#ifndef D_PALETTE__CHRISTMAS_BERRY_ORANGE__NAME_CTR
#define D_PALETTE__CHRISTMAS_BERRY_ORANGE__NAME_CTR        "Berry Orange|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_BERRY_ORANGE__NAME_CTR)        D_PALETTE__CHRISTMAS_BERRY_ORANGE__NAME_CTR;
#define        D_PALETTE__CHRISTMAS_BERRY_ORANGE__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_BERRY_ORANGE__DATA)
{ // R,G,B    
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_FADED_1
  D_RGB_CYAN_FADED_3
  D_RGB_ORANGE_WARM_1
};

#ifndef D_PALETTE__CHRISTMAS_BERRY_GREEN__NAME_CTR
#define D_PALETTE__CHRISTMAS_BERRY_GREEN__NAME_CTR        "Berry Green|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__CHRISTMAS_BERRY_GREEN__NAME_CTR)        D_PALETTE__CHRISTMAS_BERRY_GREEN__NAME_CTR;
#define        D_PALETTE__CHRISTMAS_BERRY_GREEN__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__CHRISTMAS_BERRY_GREEN__DATA)
{ // R,G,B    
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_4
  D_RGB_GREEN_FADED_4
  D_RGB_GREEN_FADED_4
};




#ifndef D_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__NAME_CTR
#define D_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__NAME_CTR        "Colour/Bright White Stripe|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__NAME_CTR)        D_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__NAME_CTR;
#define        D_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__DATA)
{ // R,G,B    


  D_RGB_RED_FULL
  100,100,100, // Cool white (using less than full brightness so not wash colours out)
  D_RGB_GREEN_FADED_3
  100,100,100,
  D_RGB_PINK_ALT_1
  100,100,100,
  D_RGB_BLUE_FADED_3
  100,100,100,
  D_RGB_ORANGE_FULL    
  100,100,100,   

  D_RGB_YELLOW_WARM_2
  100,100,100,

  D_RGB_CYAN_FADED_4
  100,100,100,

  D_RGB_GREEN_PASTEL_FADED_1
  100,100,100,
  D_RGB_PINK_ALT_2
  100,100,100,
  D_RGB_RED_PASTEL_1
  100,100,100,
  D_RGB_ORANGE_WARM_1
  100,100,100,





  // D_RGB_RED_FULL
  // 100,100,100, // Cool white (using less than full brightness so not wash colours out)
  // D_RGB_GREEN_FADED_3
  // 100,100,100,
  // D_RGB_PINK_ALT_1
  // 100,100,100,
  // D_RGB_BLUE_FADED_3
  // 100,100,100,
  // D_RGB_ORANGE_FULL    
  // 100,100,100,   
  // D_RGB_GREEN_PASTEL_FADED_1
  // 100,100,100,
  // D_RGB_CYAN_FADED_4
  // 100,100,100,
  // D_RGB_PINK_ALT_2
  // 100,100,100,
  // D_RGB_RED_PASTEL_1
  // 100,100,100,
  // D_RGB_ORANGE_WARM_1
  // 100,100,100,
  // D_RGB_YELLOW_WARM_2
  // 100,100,100,
  
};

// Normal after xmas
// #ifndef D_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__NAME_CTR
// #define D_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__NAME_CTR        "Colour/Bright White Stripe|Christmas 16"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__NAME_CTR)        D_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__NAME_CTR;
// #define        D_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE__COLOURFUL_COLOUR_WHITE_STRIPE__DATA)
// { // R,G,B    
//   D_RGB_RED_FULL
//   D_RGB_WHITE_WARM_2
//   D_RGB_GREEN_FADED_3
//   D_RGB_WHITE_WARM_2
//   D_RGB_PINK_ALT_1
//   D_RGB_WHITE_WARM_2
//   D_RGB_BLUE_FADED_3
//   D_RGB_WHITE_WARM_2
//   D_RGB_ORANGE_FULL    
//   D_RGB_WHITE_WARM_2   
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_WHITE_WARM_2
//   D_RGB_CYAN_FADED_4
//   D_RGB_WHITE_WARM_2
//   D_RGB_PINK_ALT_2
//   D_RGB_WHITE_WARM_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_WHITE_WARM_2
//   D_RGB_ORANGE_WARM_1
//   D_RGB_WHITE_WARM_2
//   D_RGB_YELLOW_WARM_2
//   D_RGB_WHITE_WARM_2
// };


#ifndef D_PALETTE__COLOURFUL_COLOUR_WARMWHITE_STRIPE__NAME_CTR
#define D_PALETTE__COLOURFUL_COLOUR_WARMWHITE_STRIPE__NAME_CTR        "Colour/Warm White Stripe|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__COLOURFUL_COLOUR_WARMWHITE_STRIPE__NAME_CTR)        D_PALETTE__COLOURFUL_COLOUR_WARMWHITE_STRIPE__NAME_CTR;
#define        D_PALETTE__COLOURFUL_COLOUR_WARMWHITE_STRIPE__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__COLOURFUL_COLOUR_WARMWHITE_STRIPE__DATA)
{ // R,G,B   



  D_RGB_RED_FULL
  D_RGB_WHITE_WARM_2
  D_RGB_GREEN_FADED_3
  D_RGB_WHITE_WARM_2
  D_RGB_PINK_ALT_1
  D_RGB_WHITE_WARM_2
  D_RGB_BLUE_FADED_3
  D_RGB_WHITE_WARM_2
  D_RGB_ORANGE_FULL    
  D_RGB_WHITE_WARM_2   


  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_WHITE_WARM_2
  D_RGB_CYAN_FADED_4
  D_RGB_WHITE_WARM_2
  D_RGB_PINK_ALT_2
  D_RGB_WHITE_WARM_2
  D_RGB_RED_PASTEL_1
  D_RGB_WHITE_WARM_2
  D_RGB_ORANGE_WARM_1
  D_RGB_WHITE_WARM_2
  D_RGB_YELLOW_WARM_2
  D_RGB_WHITE_WARM_2


};


#ifndef D_PALETTE__COLOURFUL_BLUE_WHITE__NAME_CTR
#define D_PALETTE__COLOURFUL_BLUE_WHITE__NAME_CTR        "Blue and White|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__COLOURFUL_BLUE_WHITE__NAME_CTR)        D_PALETTE__COLOURFUL_BLUE_WHITE__NAME_CTR;
#define        D_PALETTE__COLOURFUL_BLUE_WHITE__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__COLOURFUL_BLUE_WHITE__DATA)
{ // R,G,B   
  D_RGB_BLUE_FULL
  D_RGB_WHITE_COOL_FADED_3
}; 


#ifndef D_PALETTE__COLOURFUL_WHITE_MIXED__NAME_CTR
#define D_PALETTE__COLOURFUL_WHITE_MIXED__NAME_CTR        "White Mixed|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__COLOURFUL_WHITE_MIXED__NAME_CTR)        D_PALETTE__COLOURFUL_WHITE_MIXED__NAME_CTR;
#define        D_PALETTE__COLOURFUL_WHITE_MIXED__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__COLOURFUL_WHITE_MIXED__DATA)
{ // R,G,B   
  D_RGB_WHITE_WARM_3
  D_RGB_WHITE_WARM_3
  D_RGB_WHITE_WARM_3
  D_RGB_WHITE_WARM_3
  D_RGB_WHITE_COOL_FADED_2
}; 


#ifndef D_PALETTE__COLOURFUL_PINK_RED_YELLOW__NAME_CTR
#define D_PALETTE__COLOURFUL_PINK_RED_YELLOW__NAME_CTR        "Pink Red Yellow|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__COLOURFUL_PINK_RED_YELLOW__NAME_CTR)        D_PALETTE__COLOURFUL_PINK_RED_YELLOW__NAME_CTR;
#define        D_PALETTE__COLOURFUL_PINK_RED_YELLOW__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__COLOURFUL_PINK_RED_YELLOW__DATA)
{ // R,G,B             
  D_RGB_RED_FULL  
  255,  0,255,
  255, 55, 45,
  255,255,  0
};


#ifndef D_PALETTE__COLOURFUL_PEACHY_ORANGE__NAME_CTR
#define D_PALETTE__COLOURFUL_PEACHY_ORANGE__NAME_CTR        "Peachy Orange|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__COLOURFUL_PEACHY_ORANGE__NAME_CTR)        D_PALETTE__COLOURFUL_PEACHY_ORANGE__NAME_CTR;
#define        D_PALETTE__COLOURFUL_PEACHY_ORANGE__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__COLOURFUL_PEACHY_ORANGE__DATA)
{ // R,G,B     
  255,28,8,
  255,53,18,
  255,63,20,
  255,75,20,
  255,92,10,        
};


#ifndef D_PALETTE__COLOURFUL_PEACHY_YELLOW__NAME_CTR
#define D_PALETTE__COLOURFUL_PEACHY_YELLOW__NAME_CTR        "Peachy Yellow|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__COLOURFUL_PEACHY_YELLOW__NAME_CTR)        D_PALETTE__COLOURFUL_PEACHY_YELLOW__NAME_CTR;
#define        D_PALETTE__COLOURFUL_PEACHY_YELLOW__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__COLOURFUL_PEACHY_YELLOW__DATA)
{ // R,G,B     
  255, 67, 10, // peach                USE THESE IN A PALETTE
  252,167,10,  //Yellow
};


#ifndef D_PALETTE__COLOURFUL_GREENLESS__NAME_CTR
#define D_PALETTE__COLOURFUL_GREENLESS__NAME_CTR        "Colourful Greenless|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__COLOURFUL_GREENLESS__NAME_CTR)        D_PALETTE__COLOURFUL_GREENLESS__NAME_CTR;
#define        D_PALETTE__COLOURFUL_GREENLESS__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__COLOURFUL_GREENLESS__DATA)
{ // R,G,B              
  D_RGB_RED_FULL
  D_RGB_YELLOW_WARM_3//D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL       
  D_RGB_PINK_PASTEL_2
  D_RGB_CYAN_FADED_4
  D_RGB_PINK_ALT_2
  D_RGB_RED_PASTEL_1
  D_RGB_PURPLE_BLUE
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2
};


/**
 * @brief Selecting nicest colours for stepping palette (pairs only)
 * Includes white!
 * Keep 2023
 **/
#ifndef D_PALETTE__COLOURFUL_PAIRS_01__NAME_CTR
#define D_PALETTE__COLOURFUL_PAIRS_01__NAME_CTR        "Colourful Pairs 01|Christmas 16"   
#endif
DEF_PGM_CTR  (PM_PALETTE__COLOURFUL_PAIRS_01__NAME_CTR)        D_PALETTE__COLOURFUL_PAIRS_01__NAME_CTR;
#define        D_PALETTE__COLOURFUL_PAIRS_01__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__COLOURFUL_PAIRS_01__DATA)
{ // R,G,B   
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_3
  D_RGB_PINK_ALT_1
  D_RGB_BLUE_FADED_3
  D_RGB_ORANGE_FULL       
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_CYAN_FADED_4
  D_RGB_PINK_ALT_2
  D_RGB_YELLOW_WARM_2
  D_RGB_PURPLE_BLUE
  D_RGB_ORANGE_WARM_1
  D_RGB_YELLOW_WARM_2
  D_RGB_RED_ALT_1
  D_RGB_GREEN_PASTEL_FADED_1
  D_RGB_PINK_FADED_1
  D_RGB_RED_PASTEL_1
  D_RGB_ORANGE_WARM_1      
  D_RGB_PINK_FADED_2
  D_RGB_CYAN_FADED_4
  D_RGB_RED_FULL
  D_RGB_GREEN_FADED_2
  D_RGB_PINK_ALT_1
  D_RGB_WHITE_COOL_FADED_1
  D_RGB_BLUE_FADED_1
  D_RGB_ORANGE_WARM_2  
  D_RGB_RED_ALT_1
  D_RGB_YELLOW_WARM_1
  D_RGB_BLUE_ALT_1
  D_RGB_PINK_ALT_3
  D_RGB_CYAN_FULL 
};



/**
 *  New for outside tree only, repeated colours so instead of grouping 100, I can do grouping 25
 * New rotation of 25 with fade instead of g=1, should give a nice rotation of blending colours
 * */
#ifndef D_PALETTE__GOLDEN__NAME_CTR
#define D_PALETTE__GOLDEN__NAME_CTR        "Golden|Christmas 30|Christmas Golden Yellow" // Yellow and slight gold (not orange)   
#endif
DEF_PGM_CTR  (PM_PALETTE__GOLDEN__NAME_CTR)        D_PALETTE__GOLDEN__NAME_CTR;
#define        D_PALETTE__GOLDEN__ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE__GOLDEN__DATA)
{ // R,G,B        
  255,215,0, //gold  
  252,94,3, //yellow-orange  
  255,215,10,       
  255,230,0, //gold   
  218,125,17, //goldenrod
  252,94,3, //yellow-orange
  252,157,3, //
  252,157,15, //
  255,223,0, //goldern yellow
  252,84,3, //yellow-orange
};





// /**
//  *  New 2022 smaller microled transparant wire, looks more blue than 2021 version
//  * Much less green/blue
//  * */
// #ifndef D_PALETTE_CHRISTMAS_22_NAME_CTR
// #define D_PALETTE_CHRISTMAS_22_NAME_CTR        "XMAS 22|Christmas 2022 - DiningRoom Tree|Christmas 22"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_22_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_22_NAME_CTR)        D_PALETTE_CHRISTMAS_22_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_22_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_22__DATA)
// { // R,G,B      
      
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4   
// };

// /**
//  *  New 2022 smaller microled transparant wire, looks more blue than 2021 version
//  * Much less green/blue
//  * NO deep purple
//  * */
// #ifndef D_PALETTE_CHRISTMAS_23_NAME_CTR
// #define D_PALETTE_CHRISTMAS_23_NAME_CTR        "XMAS 23?|Christmas 2022 - DiningRoom Tree|Christmas 23"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_23_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_23_NAME_CTR)        D_PALETTE_CHRISTMAS_23_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_23_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_23__DATA)
// { // R,G,B                
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_PURPLE_BLUE
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4   
// };

// /**
//  *  New for outside tree only, repeated colours so instead of grouping 100, I can do grouping 25
//  * New rotation of 25 with fade instead of g=1, should give a nice rotation of blending colours
//  * */
// #ifndef D_PALETTE_CHRISTMAS_29_NAME_CTR
// #define D_PALETTE_CHRISTMAS_29_NAME_CTR        "XMAS 29|Christmas 29|Christmas Grouped 4"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_29_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_29_NAME_CTR)        D_PALETTE_CHRISTMAS_29_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_29_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_29__DATA)
// { // R,G,B                
//   D_RGB_RED_FULL  
//   D_RGB_RED_FULL  
//   D_RGB_RED_FULL  
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_GREEN_FADED_3
//   D_RGB_GREEN_FADED_3
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_PINK_ALT_1
//   D_RGB_PINK_ALT_1
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_BLUE_FADED_3
//   D_RGB_BLUE_FADED_3
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL      
//   D_RGB_ORANGE_FULL      
//   D_RGB_ORANGE_FULL      
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_CYAN_FADED_4
//   D_RGB_CYAN_FADED_4
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_PINK_ALT_2
//   D_RGB_PINK_ALT_2
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_PURPLE_BLUE
//   D_RGB_PURPLE_BLUE
//   D_RGB_PURPLE_BLUE
//   D_RGB_PURPLE_BLUE
//   D_RGB_ORANGE_WARM_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   D_RGB_YELLOW_WARM_2
//   D_RGB_YELLOW_WARM_2
//   D_RGB_YELLOW_WARM_2
// };





// // Confirmed at 2021 Tree colours
// #ifndef D_PALETTE_CHRISTMAS_20_NAME_CTR
// #define D_PALETTE_CHRISTMAS_20_NAME_CTR        "XMAS C20|MultiColoured Snow Tree Dinning Room|Christmas 20"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_20_DESCRIPTION_CTR   "Dining room 2021 Palette" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_20_NAME_CTR)        D_PALETTE_CHRISTMAS_20_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_20_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_20__DATA)
// { // R,G,B      
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4
// };





// #ifndef D_PALETTE_CUSTOM_USER_01_NAME_CTR
// #define D_PALETTE_CUSTOM_USER_01_NAME_CTR        "Custom User 01"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CUSTOM_USER_01_NAME_CTR)        D_PALETTE_CUSTOM_USER_01_NAME_CTR;
// #define        D_PALETTE_CUSTOM_USER_01_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CUSTOM_USER_01__DATA)
// { // R,G,B   
  
//   #if defined(USE_CUSTOM_USER_PAULA)
//   // R,G,B       
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL   
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   #elif defined(USE_CUSTOM_USER_JACQUELINE)
//   // R,G,B       
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL   
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   #else 
//   /**
//    * @brief Personal Default
//    **/
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4
//   #endif


// };



/** GRADIENT_FIRE
 * Warmer sunrise, blue with yellows midway
 * DARKEST, basically night
 * */
#ifndef D_PALETTE_STATIC_GRADIENT_FIRE_01_NAME_CTR
#define D_PALETTE_STATIC_GRADIENT_FIRE_01_NAME_CTR        "Gradient Fire 01|Gradient Flame 01"   
#endif
DEF_PGM_CTR  (PM_PALETTE_GRADIENT_FIRE_01_NAME_CTR)        D_PALETTE_STATIC_GRADIENT_FIRE_01_NAME_CTR;
#define        D_PALETTE_GRADIENT_FIRE_01_ENCODING        (PALETTE_ENCODING_TYPE_RGB_WITHINDEX_GRADIENT)    
DEF_PGM_UINT8(PM_PALETTE_GRADIENT_FIRE_01__DATA)
{ //grad range 0-255, R,G,B  
  0, D_RGB_RED_FULL
  30, D_RGB_RED_ALT_1
  60, D_RGB_ORANGE_WARM_1  
  90, D_RGB_RED_FULL
  120, D_RGB_RED_FULL
  150, D_RGB_ORANGE_WARM_1  
  180, D_RGB_RED_FULL
  210, D_RGB_ORANGE_WARM_1  
  255, D_RGB_RED_DARKER_4
};        

  
#ifndef D_PALETTE_FLOWER_SWEATPEA_NAME_CTR
#define D_PALETTE_FLOWER_SWEATPEA_NAME_CTR        "Sweetpea"     
#endif
DEF_PGM_CTR  (PM_PALETTE_FLOWER_SWEATPEA_NAME_CTR)        D_PALETTE_FLOWER_SWEATPEA_NAME_CTR;
#define        D_PALETTE_FLOWER_SWEATPEA_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_FLOWER_SWEATPEA__DATA)
{
  D_RGB_PINK_ALT_2
  D_RGB_PINK
  D_RGB_CYAN_FADED_4
  D_RGB_PINK_FADED_1  
  D_RGB_PURPLE_BLUE
  D_RGB_PINK_ALT_1
  D_RGB_WHITE_COOL_FADED_2
  D_RGB_PURPLE_RED
  D_RGB_BLUE_FADED_3
};

#ifndef D_PALETTE_PINK_PURPLE_NAME_CTR
#define D_PALETTE_PINK_PURPLE_NAME_CTR        "Pink Purple"     
#endif
DEF_PGM_CTR  (PM_PALETTE_PINK_PURPLE_NAME_CTR)        D_PALETTE_PINK_PURPLE_NAME_CTR;
#define        D_PALETTE_PINK_PURPLE_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_PINK_PURPLE__DATA)
{
  D_RGB_PINK_ALT_2
  D_RGB_PINK
  D_RGB_PINK_FADED_1  
  D_RGB_PINK_ALT_1
  D_RGB_PURPLE_BLUE
  D_RGB_PURPLE_RED
};


#ifndef D_PALETTE_PURPLE_PINK_NAME_CTR
#define D_PALETTE_PURPLE_PINK_NAME_CTR        "Purple Pink"     
#endif
DEF_PGM_CTR  (PM_PALETTE_PURPLE_PINK_NAME_CTR)        D_PALETTE_PURPLE_PINK_NAME_CTR;
#define        D_PALETTE_PURPLE_PINK_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_PURPLE_PINK__DATA)
{
  D_RGB_PINK_ALT_2
  D_RGB_PURPLE_BLUE
  D_RGB_PURPLE_RED
  D_RGB_PINK
  D_RGB_PURPLE_BLUE
  D_RGB_PURPLE_RED
  D_RGB_PINK_FADED_1  
  D_RGB_PURPLE_BLUE
  D_RGB_PURPLE_RED
  D_RGB_PINK_ALT_1
  D_RGB_PURPLE_BLUE
  D_RGB_PURPLE_RED
};


#ifndef D_PALETTE_PASTEL_01_NAME_CTR
#define D_PALETTE_PASTEL_01_NAME_CTR        "Pastel Easter|Pastel Easter|Pastel|Easter"     
#endif
DEF_PGM_CTR  (PM_PALETTE_PASTEL_01_NAME_CTR)        D_PALETTE_PASTEL_01_NAME_CTR;
#define        D_PALETTE_PASTEL_01_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE_PASTEL_01__DATA)
{      
  255,86,8,  //249,216,198, // Crown Colour Code Z4730V Peach
  255,51,112, // Pink Crown V9502B
  84, 255, 61, // Green Crown F3602H
  48,255,255 // Blue chair
};



#ifndef D_PALETTE_PASTEL_02_NAME_CTR
#define D_PALETTE_PASTEL_02_NAME_CTR        "Pastel Dots|Pastel MicroLEDs"     
#endif
DEF_PGM_CTR  (PM_PALETTE_PASTEL_02_NAME_CTR)        D_PALETTE_PASTEL_02_NAME_CTR;
#define        D_PALETTE_PASTEL_02_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_PASTEL_02__DATA)
{      
  D_RGB_PINK_ALT_2
  D_RGB_GREEN_FULL
  D_RGB_BLUE_FULL  
  D_RGB_WHITE_COOL_FULL
  D_RGB_WHITE_WARM_1
};



#ifndef D_PALETTE_PASTEL_03_NAME_CTR
#define D_PALETTE_PASTEL_03_NAME_CTR        "IceCream Floats|Pastel 03"     
#endif
DEF_PGM_CTR  (PM_PALETTE_PASTEL_03_NAME_CTR)        D_PALETTE_PASTEL_03_NAME_CTR;
#define        D_PALETTE_PASTEL_03_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_PASTEL_03__DATA)
{      
  // USe pastels like this orange, that are "creamy" (orange ice mixed style)
  255, 67, 10, // peach   
  255,51,112, // Pink Crown V9502B
  252,167,10,  //Yellow
  84, 255, 61, // Green Crown F3602H
  48,255,255, // Blue chair
};



#ifndef D_PALETTE_PASTEL_04_NAME_CTR
#define D_PALETTE_PASTEL_04_NAME_CTR        "IceCream Floats+"     
#endif
DEF_PGM_CTR  (PM_PALETTE_PASTEL_04_NAME_CTR)        D_PALETTE_PASTEL_04_NAME_CTR;
#define        D_PALETTE_PASTEL_04_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_PASTEL_04__DATA)
{      
  // USe pastels like this orange, that are "creamy" (orange ice mixed style)
  255, 67, 10, // peach   
  255,51,112, // Pink Crown V9502B
  252,167,10,  //Yellow
  84, 255, 61, // Green Crown F3602H
  255, 18, 10, // Red
  48,255,255, // Blue chair
};



#ifndef D_PALETTE_PASTEL_05_NAME_CTR
#define D_PALETTE_PASTEL_05_NAME_CTR        "Pastel Pinks"     //for shelf 
#endif
DEF_PGM_CTR  (PM_PALETTE_PASTEL_05_NAME_CTR)        D_PALETTE_PASTEL_05_NAME_CTR;
#define        D_PALETTE_PASTEL_05_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_PASTEL_05__DATA)
{      
  D_RGB_WHITE_COOL_FULL
  255, 100, 224, //pink white
  243, 74, 204, // more pink
  247, 58, 203,
};

/**
 * https://www.schemecolor.com/pastel-color-tones.php
 * */
#ifndef D_PALETTE_GRADIENT_PASTEL_TONES_PURPLE_NAME_CTR
#define D_PALETTE_GRADIENT_PASTEL_TONES_PURPLE_NAME_CTR        "Pastel Purple"   
#endif
DEF_PGM_CTR  (PM_PALETTE_GRADIENT_PASTEL_TONES_PURPLE_NAME_CTR)        D_PALETTE_GRADIENT_PASTEL_TONES_PURPLE_NAME_CTR;
#define        D_PALETTE_GRADIENT_PASTEL_TONES_PURPLE_ENCODING        (PALETTE_ENCODING_TYPE_RGB_WITHINDEX_GRADIENT)    
DEF_PGM_UINT8(PM_PALETTE_GRADIENT_PASTEL_TONES_PURPLE__DATA)
{ //grad range 0-255, R,G,B
  0, 224, 187, 228, // est. Thistle RGB: (224, 187, 228)
  0, 224, 40, 228, // est. Thistle RGB: (224, 187, 228)
  64,100, 20, 100, // est. Lavender Purple RGB: (149, 125, 173)
  127,200, 20, 180, // est. Pastel Violet RGB: (210, 145, 188)
  190,250, 25, 194, // est. Cotton Candy RGB: (254, 200, 216)
  255,254, 118, 78  //est. Name: Lumber RGB: (255, 223, 211)     
};

#ifndef D_PALETTE_WINTER_01_NAME_CTR
#define D_PALETTE_WINTER_01_NAME_CTR        "Winter Blue W01"  // Only blues https://www.google.com/url?sa=i&url=https%3A%2F%2Fcreativemarket.com%2Fblog%2Fwinter-color-palettes&psig=AOvVaw1GiJufj17c7To3tgxRCaZS&ust=1689756901327000&source=images&cd=vfe&opi=89978449&ved=0CBAQjRxqFwoTCPDnv5Hxl4ADFQAAAAAdAAAAABAc
#endif
DEF_PGM_CTR  (PM_PALETTE_WINTER_01_NAME_CTR)        D_PALETTE_WINTER_01_NAME_CTR;
#define        D_PALETTE_WINTER_01_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_WINTER_01__DATA)
{      
  // USe pastels like this orange, that are "creamy" (orange ice mixed style)
  0x05, 0x44, 0xa1, //    
  0x05, 0x2c, 0x7e, // 
  0x04, 0x84, 0xe4, // 
  0x27, 0x4d, 0x83, // 
};

// Redo, "no dark", not useful as its just brightness
#ifndef D_PALETTE_WINTER_02_NAME_CTR
#define D_PALETTE_WINTER_02_NAME_CTR        "Winter --- W02"  // Should contain whites (e.g. a snow covered mountain scene with pale blue sky, the kind that has a hazy white to it near horizon)
#endif
DEF_PGM_CTR  (PM_PALETTE_WINTER_02_NAME_CTR)        D_PALETTE_WINTER_02_NAME_CTR;
#define        D_PALETTE_WINTER_02_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_WINTER_02__DATA)
{      
  0x1f, 0x29, 0x33, // Ebony Clay
  0x13, 0x1e, 0x32, // Blue

  // deep purple
  // deep blue
};

#ifndef D_PALETTE_WINTER_03_NAME_CTR
#define D_PALETTE_WINTER_03_NAME_CTR        "Winter Snow W03"  // Should contain whites (e.g. a snow covered mountain scene with pale blue sky, the kind that has a hazy white to it near horizon)
#endif //https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.pinterest.com%2Fpin%2Fcolor-palette-ideas-from-693-winter-images--764767580450031607%2F&psig=AOvVaw1ul7ntaVEtUpLQY-9MvR6S&ust=1689757340640000&source=images&cd=vfe&opi=89978449&ved=0CBAQjRxqFwoTCKDI7OLyl4ADFQAAAAAdAAAAABAJ
DEF_PGM_CTR  (PM_PALETTE_WINTER_03_NAME_CTR)        D_PALETTE_WINTER_03_NAME_CTR;
#define        D_PALETTE_WINTER_03_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_WINTER_03__DATA)
{      
  // USe pastels like this orange, that are "creamy" (orange ice mixed style)
  0x67, 0xb3, 0xe4, //    
  0xc4, 0xd4, 0xdd, // 
  0x64, 0xb2, 0xdb, // 
  0x94, 0xac, 0xbd, // 
  0x54, 0xb4, 0xe4, // 
};


#ifndef D_PALETTE_WINTER_04_NAME_CTR
#define D_PALETTE_WINTER_04_NAME_CTR        "Winter SunGlow W04"  // Snow mountain at sunset (alpineglow)
#endif 
DEF_PGM_CTR  (PM_PALETTE_WINTER_04_NAME_CTR)        D_PALETTE_WINTER_04_NAME_CTR;
#define        D_PALETTE_WINTER_04_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_WINTER_04__DATA)
{      
  // USe pastels like this orange, that are "creamy" (orange ice mixed style)
  0x67, 0xb3, 0xe4, //    
  0xc4, 0xd4, 0xdd, // 
  0x0c, 0x64, 0xcc,
  255, 67, 10, // peach   
  252,167,10,  //Yellow
  0xfb, 0xdf, 0x98,
  0x94, 0x5c, 0x54,
  0x64, 0xb2, 0xdb, //
  0x94, 0xac, 0xbd, // 
  0x54, 0xb4, 0xe4, // 
};


  /**
   * Deep purple to light blue then white
   * */
  #ifndef D_PALETTE_SUNRISE_01_NAME_CTR
  #define D_PALETTE_SUNRISE_01_NAME_CTR        "Sunrise Orange SR01|Sunrise 01"   
  #endif
  DEF_PGM_CTR  (PM_PALETTE_SUNRISE_01_NAME_CTR)        D_PALETTE_SUNRISE_01_NAME_CTR;
  #define        D_PALETTE_SUNRISE_01_ENCODING        (PALETTE_ENCODING_TYPE_RGBCCT_WITHINDEX_GRADIENT)     
  DEF_PGM_UINT8(PM_PALETTE_SUNRISE_01__DATA)
  { //grad,R,G,B,WW,CW
    0, 10, 17, 42, 0, 0,
    40, 84, 39, 27,  0, 0,
    70, 80, 12, 3,0,0,      
    90, 100, 20, 3,0,0,
    120,100, 20, 3,0,0,
    //CENTRE
    127, 255, 44, 10, 0, 0, 
    //CENTRE
    134,100, 20, 3,0,0,   
    164, 100, 20, 3,0,0,
    184, 80, 12, 3,0,0, 
    294, 84, 39, 27,  0, 0,  
    255, 10, 17, 42, 0, 0,  
  };

/**
 * Warmer sunrise, blue with yellows midway
 * */
#ifndef D_PALETTE_SUNRISE_02_NAME_CTR
#define D_PALETTE_SUNRISE_02_NAME_CTR        "Sunrise Blue SR02|Sunrise 02"   
#endif
DEF_PGM_CTR  (PM_PALETTE_SUNRISE_02_NAME_CTR)        D_PALETTE_SUNRISE_02_NAME_CTR;
#define        D_PALETTE_SUNRISE_02_ENCODING        (PALETTE_ENCODING_TYPE_RGBCCT_WITHINDEX_GRADIENT)     
DEF_PGM_UINT8(PM_PALETTE_SUNRISE_02__DATA)
{ //R,G,B,WW,CW
  // 0x06, 0x2B, 0x79, 0, 0, // Dark Blue
  // 0x16, 0x49, 0x8A, 0, 0,
  // 0x16, 0x49, 0x8A, 25, 25,
  // 0x16, 0x49, 0x8A, 50, 50,
  // 0x59, 0x95, 0xB7, 100, 100,
  // 0x59, 0x95, 0xB7, 175, 175,
  // 255, 255,   255, 255, 255,
  
  0,  50,   255,   255,  0, 0,

  // 30, 84, 39, 27, 0, 0,
  // 50, 84, 39, 27,  0, 0,
  // 60, 100, 20, 3,0,0,      
  // 80, 100, 20, 3,0,0,
  120,255, 44, 10, 0, 0, 
  //CENTRE
  127, 255, 100, 10, 0, 0, 
  //CENTRE
  134,255, 44, 10, 0, 0,  
  // 174, 100, 20, 3,0,0,
  // 194, 100, 20, 3,0,0, 
  // 204, 84, 39, 27,  0, 0,  
  // 225, 84, 39, 27, 0, 0,  
  
  255,   50,   255,   255,  0, 0,   


};


/**
 * Warmer sunrise, blue with yellows midway
 * */
#ifndef D_PALETTE_SUNRISE_03_NAME_CTR
#define D_PALETTE_SUNRISE_03_NAME_CTR        "Sunrise 03|Sunrise Gradient 01"   
#endif
DEF_PGM_CTR  (PM_PALETTE_SUNRISE_03_NAME_CTR)        D_PALETTE_SUNRISE_03_NAME_CTR;
#define        D_PALETTE_SUNRISE_03_ENCODING        (PALETTE_ENCODING_INCLUDES_RGBCCT_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE_SUNRISE_03__DATA)
{ //Index,R,G,B,WW,CW
  // 0, 0x06, 0x2B, 0x79, 0, 0, // Dark Blue
  // 10, 0x16, 0x49, 0x8A, 0, 0,
  // 40, 0x16, 0x49, 0x8A, 25, 25,
  // 100, 0x16, 0x49, 0x8A, 50, 50,
  // 120, 0x59, 0x95, 0xB7, 100, 100,
  // 140, 0x59, 0x95, 0xB7, 175, 175,
  // 255, 255, 255,   255, 255, 255,

  // Use gradient on "step_though_2" that creates colour via gradient using colours either side
  // This will allow smoother sunrise effects

  // 0,255, 0, 0, 0, 0,
  // 10,0, 255, 0, 0, 0,
  // 50,D_RGB_BLUE_FULL 0, 0,
  // 100,255, 0, 255, 0, 0,
  // 120,0, 255, 255, 0, 0,
  // 255,255, 255, 255, 0, 0,

  0,255, 245, 123, 0, 0,
  10,255, 228, 105, 0, 0,
  50,254, 204, 81, 0, 0,
  100,252, 176, 51, 0, 0,
  120,250, 150, 27, 0, 0,
  255,250, 134, 7, 0, 0,



  


};



// https://www.schemecolor.com/

/**
 * Warmer sunrise, blue with yellows midway
 * */
#ifndef D_PALETTE_SUNRISE_04_NAME_CTR
#define D_PALETTE_SUNRISE_04_NAME_CTR        "Sunrise 04|Sunrise Gradient 02"   
#endif
DEF_PGM_CTR  (PM_PALETTE_SUNRISE_04_NAME_CTR)        D_PALETTE_SUNRISE_04_NAME_CTR;
#define        D_PALETTE_SUNRISE_04_ENCODING        (PALETTE_ENCODING_TYPE_RGBCCT_WITHINDEX_GRADIENT)     
DEF_PGM_UINT8(PM_PALETTE_SUNRISE_04__DATA)
{ //Index,R,G,B,WW,CW
  0, 0x06, 0x2B, 0x79, 0, 0, // Dark Blue
  10, 0x16, 0x49, 0x8A, 0, 0,
  40, 0x16, 0x49, 0x8A, 25, 25,
  100, 0x16, 0x49, 0x8A, 50, 50,
  120, 0x59, 0x95, 0xB7, 100, 100,
  140, 0x59, 0x95, 0xB7, 175, 175,
  255, 255, 255,   255, 255, 255,
};

/**
 * Warmer sunrise, blue with yellows midway
 * */
#ifndef D_PALETTE_SUNSET_01_NAME_CTR
#define D_PALETTE_SUNSET_01_NAME_CTR        "Sunset 01|Sunset Step 01"   
#endif
DEF_PGM_CTR  (PM_PALETTE_SUNSET_01_NAME_CTR)        D_PALETTE_SUNSET_01_NAME_CTR;
#define        D_PALETTE_SUNSET_01_ENCODING        (PALETTE_ENCODING_TYPE_RGBCCT_WITHINDEX_GRADIENT)     
DEF_PGM_UINT8(PM_PALETTE_SUNSET_01__DATA)
{ //R,G,B,WW,CW
  0x06, 0x2B, 0x79, 0, 0, // Dark Blue
  0x16, 0x49, 0x8A, 0, 0,
  0x16, 0x49, 0x8A, 25, 25,
  0x16, 0x49, 0x8A, 50, 50,
  0x59, 0x95, 0xB7, 100, 100,
  0x59, 0x95, 0xB7, 175, 175,
  255, 255,   255, 255, 255,
};

/**
 * Warmer sunrise, blue with yellows midway
 * */
#ifndef D_PALETTE_SUNSET_02_NAME_CTR
#define D_PALETTE_SUNSET_02_NAME_CTR        "Sunset 02|Sunset Gradient 01"   
#endif
DEF_PGM_CTR  (PM_PALETTE_SUNSET_02_NAME_CTR)        D_PALETTE_SUNSET_02_NAME_CTR;
#define        D_PALETTE_SUNSET_02_ENCODING        (PALETTE_ENCODING_TYPE_RGBCCT_WITHINDEX_GRADIENT)     
DEF_PGM_UINT8(PM_PALETTE_SUNSET_02__DATA)
{ //Index,R,G,B,WW,CW
  0, 0x06, 0x2B, 0x79, 0, 0, // Dark Blue
  10, 0x16, 0x49, 0x8A, 0, 0,
  40, 0x16, 0x49, 0x8A, 25, 25,
  100, 0x16, 0x49, 0x8A, 50, 50,
  120, 0x59, 0x95, 0xB7, 100, 100,
  140, 0x59, 0x95, 0xB7, 175, 175,
  255, 255, 255,   255, 255, 255,
};

/**
 * Warmer sunrise, blue with yellows midway
 * */
#ifndef D_PALETTE_SUNSET_RED_NAME_CTR
#define D_PALETTE_SUNSET_RED_NAME_CTR        "Sunset Red|Sunset Gradient 01"   
#endif
DEF_PGM_CTR  (PM_PALETTE_SUNSET_RED_NAME_CTR)        D_PALETTE_SUNSET_RED_NAME_CTR;
#define        D_PALETTE_SUNSET_RED_ENCODING        (PALETTE_ENCODING_TYPE_RGB_WITHINDEX_GRADIENT)     
DEF_PGM_UINT8(PM_PALETTE_SUNSET_RED__DATA)
{ //Index,R,G,B,WW,CW
  0,  26,  1,  1,
  51,  67,  4,  1,
  84, 118, 14,  1,
  104, 137,152, 52,
  112, 113, 65,  1,
  122, 133,149, 59,
  124, 137,152, 52,
  135, 113, 65,  1,
  142, 139,154, 46,
  163, 113, 13,  1,
  204,  55,  3,  1,
  249,  17,  1,  1,
  255,  17,  1,  1
};

/**
 * Have the look from a beach at sunset, with water, sun, orange glow and pale blue (light)
 * */
#ifndef D_PALETTE_SUNSET_BEACH_NAME_CTR
#define D_PALETTE_SUNSET_BEACH_NAME_CTR        "Sunset Beach|Sunset Gradient 01"   
#endif
DEF_PGM_CTR  (PM_PALETTE_SUNSET_BEACH_NAME_CTR)        D_PALETTE_SUNSET_BEACH_NAME_CTR;
#define        D_PALETTE_SUNSET_BEACH_ENCODING        (PALETTE_ENCODING_TYPE_RGBCCT_WITHINDEX_GRADIENT)     
DEF_PGM_UINT8(PM_PALETTE_SUNSET_BEACH__DATA)
{ //Index,R,G,B,WW,CW
  0, 0x06, 0x2B, 0x79, 0, 0, // Dark Blue
  10, 0x16, 0x49, 0x8A, 0, 0,
  40, 0x16, 0x49, 0x8A, 25, 25,
  100, 0x16, 0x49, 0x8A, 50, 50,
  120, 0x59, 0x95, 0xB7, 100, 100,
  140, 0x59, 0x95, 0xB7, 175, 175,
  255, 255, 255,   255, 255, 255,
};


/**
 * Candle Flame for Candle Animation - Single RGB Colour
 * */
#ifndef D_PALETTE_CANDLE_FLAME_01_NAME_CTR
#define D_PALETTE_CANDLE_FLAME_01_NAME_CTR        "Candle Flame|Candle Flame 01"   
#endif
DEF_PGM_CTR  (PM_PALETTE_CANDLE_FLAME_01_NAME_CTR)        D_PALETTE_CANDLE_FLAME_01_NAME_CTR;
#define        D_PALETTE_CANDLE_FLAME_01_ENCODING        (PALETTE_ENCODING_INCLUDES_RGBCCT_NO_INDEX)     
DEF_PGM_UINT8(PM_PALETTE_CANDLE_FLAME_01__DATA)
{ //R,G,B,WW,CW
  255,98,13,255,0 //warm, white added
};

/**
 * from aliexpress photo
 * needs changed to indexed
 * */
#ifndef D_PALETTE_SKY_GLOW_01_NAME_CTR
#define D_PALETTE_SKY_GLOW_01_NAME_CTR        "Orange White Blue"   
#endif
DEF_PGM_CTR  (PM_PALETTE_SKY_GLOW_01_NAME_CTR)        D_PALETTE_SKY_GLOW_01_NAME_CTR;
#define        D_PALETTE_SKY_GLOW_01_ENCODING        (PALETTE_ENCODING_TYPE_RGBCCT_WITHINDEX_GRADIENT)     
DEF_PGM_UINT8(PM_PALETTE_SKY_GLOW_01__DATA)
{ //Index,R,G,B,WW,CW
  0,  255, 100, 0, 0, 0,
  55, 255, 130, 0, 0, 0,
  100, 255, 153, 0, 255, 255,
  127, 255, 255,  255, 255, 255,
  154, 0, 0,  255, 0, 0,
  200, 0, 0,  255, 0, 0,
  255, 0, 0,  255, 0, 0,
};

/**
 * https://www.schemecolor.com/hot-pink-neon-with-navy.php
 * */
#ifndef D_PALETTE_HOT_PINK_NEON_WITH_NAVY_NAME_CTR
#define D_PALETTE_HOT_PINK_NEON_WITH_NAVY_NAME_CTR        "Hot Pink/Blue"   
#endif
DEF_PGM_CTR  (PM_PALETTE_HOT_PINK_NEON_WITH_NAVY_NAME_CTR)        D_PALETTE_HOT_PINK_NEON_WITH_NAVY_NAME_CTR;
#define        D_PALETTE_HOT_PINK_NEON_WITH_NAVY_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
DEF_PGM_UINT8(PM_PALETTE_HOT_PINK_NEON_WITH_NAVY__DATA)
{
  255, 105, 179, // est. Hot Pink,      RGB: (255, 105, 179)
  236, 52, 153, // est.  Royal Pink,   RGB: (236, 52, 153)
  0, 0, 129, // est. Navy Blue RGB: (0, 0, 129)
  21, 70, 199, // est. New Car RGB: (21, 70, 199)
  25, 116, 209  //est. Bright Navy Blue RGB: (25, 116, 209)   
};




/**
 * Dynamic Palette Testing - CCT All day light
 *
 * 
 * */
#ifndef D_PALETTE__SOLAR__CCT_ELEVATION_01_CTR
#define D_PALETTE__SOLAR__CCT_ELEVATION_01_NAME_CTR        "Solar CCT 01"   
#endif
DEF_PGM_CTR  (PM_PALETTE__SOLAR__CCT_ELEVATION_01_NAME_CTR)        D_PALETTE__SOLAR__CCT_ELEVATION_01_NAME_CTR;
#define        D_PALETTE__SOLAR__CCT_ELEVATION_01_ENCODING        (PALETTE_ENCODING_TYPE_RGBCCT_WITHINDEX_GRADIENT)     
DEF_PGM_UINT8(PM_PALETTE__SOLAR__CCT_ELEVATION_01__DATA)
{ //Index,R,G,B,WW,CW
  0,   0, 0, 0, 255,   0,
  255, 0, 0, 0,   0, 255,
};



// /**
//  * The indexes are packed with the elevation in degrees that equate to the colour
//  * 
//  * 1) Full colour, cyan in daylight
//  * 2) only colours of red/orange during sunset
//  * 3) CCT only, full brightness
//  * */
// #ifndef D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_01__NAME_CTR
// #define D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_01__NAME_CTR   "Solid RGBCCT Sun Elevation 01"
// #endif
// DEF_PGM_CTR  (PM__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_01__CTR)        D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_01__NAME_CTR;
// #define        D__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_01__ENCODING    (PALETTE_ENCODING_TYPE_RGBCCT_WITH_INDEX_AS_VALUE_EXACT)     
// DEF_PGM_UINT8(PM__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_01__DATA)
// { //Index,R,G,B,WW,CW
// //Index values are stored relative to -90, so -90 to 180 is 0 to 180

//   // Night time          ww, cw
//   90 -90, 0, 0, 1,        0, 0, // Peak dusk
//   90 -45, 0, 0, 1,        0, 0,
//   90 -15, 0, 0, 30,       0, 0,
//   90 -10, 0, 0, 100,      0, 0,
//   90 -5, 0, 0, 20,       20, 0,
//   90 -2, 0, 0, 15,      10, 0,
//   90 -1, 50, 10, 10,     5, 0,
//   90 +0, 255, 3, 0,       2, 0,  // Transition
//   90 +1, D_RGB_ORANGE_WARM_1       1, 20,
//   90 +2, D_RGB_YELLOW_WARM_2     0, 100,
//   90 +5, 8, 10, 0,    0, 150,
//   90 +10, 0, 20, 0,  0, 200,
//   90 +15, 0, 30, 0,  0, 255,
//   90 +45, 200, 40, 0,   0, 255,
//   90 +90, 255, 50, 0,   0, 255  // Noon

//   // 90 -7, 0, 1,  0, 0, 0, // Peak dusk
//   // 90 -6, 1, 1, 0, 0, 0,
//   // 90 -5, 2, 1, 0, 0, 0,
//   // 90 -4, 3, 1, 0, 0, 0,
//   // 90 -3, 4, 1, 0, 0, 0,
//   // 90 -2, 5, 1, 0, 0, 0,
//   // 90 -1, 5, 1, 0, 0, 0,
//   // 90 +0, 6, 0, 1, 0, 0,  // Transition
//   // 90 +1, 7, 0, 1, 0, 0,
//   // 90 +2, 7, 0, 1, 0, 0,
//   // 90 +3, 8, 0, 1, 0, 0,
//   // 90 +4, 9, 0, 1, 0, 0,
//   // 90 +5, 10, 0, 1, 0, 0,
//   // 90+ 6, 11, 0, 1, 0, 0,
//   // 90 +7, 12, 0, 1, 0, 0  // Noon



//   // 90 -90, D_RGB_RED_FULL 0,0,//7, 0, // Peak dusk
//   // 90 -45, D_RGB_ORANGE_FULL 0,0,//6, 0,
//   // 90 -15, D_RGB_ORANGE_WARM_1 0,0,//5, 0,
//   // 90 -10, D_RGB_YELLOW_WARM_2 0,0,//4, 0,
//   // 90 -5, D_RGB_GREEN_FULL 0,0,//3, 0,
//   // 90 -2, D_RGB_CYAN_FULL 0,0,//2, 0,
//   // 90 -1, D_RGB_BLUE_FULL 0,0,//1, 0,
//   // 90 +0, D_RGB_RED_FULL 0,0,//0, 0,  // Transition
//   // 90 +1, D_RGB_PURPLE_BLUE 0,0,//0, 1,
//   // 90 +2, D_RGB_PINK_ALT_2 0,0,//0, 2,
//   // 90 +5, D_RGB_RED_FULL 0,0,//0, 3,
//   // 90 +10, D_RGB_ORANGE_FULL 0,0,//0, 4,
//   // 90 +15, D_RGB_YELLOW_WARM_2 0,0,//0, 5,
//   // 90+ 45, D_RGB_GREEN_FULL 0,0,//0, 6,
//   // 90 +90, D_RGB_CYAN_FULL 0,0,//0, 7  // Noon

//   /**
//    * Sun effect modes
//    * 1) full colour, with cyan at midday
//    * 1b) colour sunset transition, day white in day time, warm white at night... but yellow to red during sunset
//    * 2) CCT only, aligned with sun directly, day to warm white but full brightness
//    * 
//    * CCT only should be another animation mode, direct mapping of cct_temp
//    * 
//    * 
//    * */

// };





// /**
//  * The indexes are packed with the elevation in degrees that equate to the colour
//  * 
//  * 1) Full colour, cyan in daylight
//  * 2) only colours of red/orange during sunset
//  * 3) CCT only, full brightness
//  * */


// /**
//  * RGBCCT
//  * Day:     Cyan
//  * Sunset:  yellow, orange, red
//  * Night:   dark blue (level 1)
//  * */
// #ifndef D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_02__NAME_CTR
// #define D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_02__NAME_CTR   "Solid RGBCCT Sun Elevation 02: Dark Blue" // CCT ONLY
// #endif
// DEF_PGM_CTR  (PM__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_02__CTR)        D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_02__NAME_CTR;
// #define        D__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_02__ENCODING    (PALETTE_ENCODING_TYPE_RGBCCT_WITH_INDEX_AS_VALUE_EXACT)     
// DEF_PGM_UINT8(PM__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_02__DATA)
// { //Index,R,G,B,WW,CW

//   //Index values are stored relative to -90, so -90 to 180 is 0 to 180

//   // Night time          ww, cw
//   90 -90, 0, 0, 0,        255, 0, // Peak dusk
//   90 -45, 0, 0, 1,        0, 0,
//   90 -15, 0, 0, 30,       0, 0,
//   90 -10, 0, 0, 100,      0, 0,
//   90 -5, 0, 0, 20,       20, 0,
//   90 -2, 0, 0, 15,      10, 0,
//   90 -1, 50, 10, 10,     5, 0,
//   90 +0, 255, 3, 0,       2, 0,  // Transition
//   90 +1, D_RGB_ORANGE_WARM_1       1, 20,
//   90 +2, D_RGB_YELLOW_WARM_2     0, 100,
//   90 +5, 8, 10, 0,    0, 150,
//   90 +10, 0, 20, 0,  0, 200,
//   90 +15, 0, 30, 0,  0, 255,
//   90 +45, 200, 40, 0,   0, 255,
//   90 +90, 255, 50, 0,   0, 255  // Noon
  
// };

// /**
//  * RGBCCT
//  * Day:     Cyan
//  * Sunset:  yellow, orange, red
//  * Night:   deep red (level 1)
//  * */
// #ifndef D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_03__NAME_CTR
// #define D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_03__NAME_CTR   "Solid RGBCCT Sun Elevation 03: Dark Red" // CCT ONLY
// #endif
// DEF_PGM_CTR  (PM__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_03__CTR)        D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_03__NAME_CTR;
// #define        D__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_03__ENCODING    (PALETTE_ENCODING_TYPE_RGBCCT_WITH_INDEX_AS_VALUE_EXACT)     
// DEF_PGM_UINT8(PM__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_03__DATA)
// { //Index,R,G,B,WW,CW
//   //Index values are stored relative to -90, so -90 to 180 is 0 to 180

//   // Night time          ww, cw
//   90 -90, 1, 0, 0,        0, 0, // Peak dusk
//   90 -45, 1, 0, 0,        0, 0,
//   90 -15, 1, 0, 0,       0, 0,
//   90 -10, 1, 0, 0,      0, 0,
//   90 -5, 2, 0, 0,       20, 0,
//   90 -2, 3, 0, 0,      10, 0,
//   90 -1, 100, 0, 0,     5, 0,
//   90 +0, 255, 3, 0,       2, 0,  // Transition
//   90 +1, D_RGB_ORANGE_WARM_1       1, 20,
//   90 +2, D_RGB_YELLOW_WARM_2     0, 100,
//   90 +5, 8, 10, 0,    0, 150,
//   90 +10, 0, 20, 0,  0, 200,
//   90 +15, 0, 30, 0,  0, 255,
//   90 +45, 200, 40, 0,   0, 255,
//   90 +90, 255, 50, 0,   0, 255  // Noon
  
// };


// /**
//  * RGBCCT: Kitchen light tester
//  * Day:     Pink
//  * Sunset:  Pink and white (pale pink)
//  * Night:   Warm white
//  * */
// #ifndef D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_04__NAME_CTR
// #define D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_04__NAME_CTR   "Solid RGBCCT Sun Elevation 04: Kitchen Pink, CW, WW" // CCT ONLY
// #endif
// DEF_PGM_CTR  (PM__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_04__CTR)        D_PALETTE__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_04__NAME_CTR;
// #define        D__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_04__ENCODING    (PALETTE_ENCODING_TYPE_RGBCCT_WITH_INDEX_AS_VALUE_EXACT)     
// DEF_PGM_UINT8(PM__SOLID_RGBCCT_SUN_ELEVATION_WITH_DEGREES_IN_INDEX_04__DATA)
// { //Index,R,G,B,WW,CW
//   //Index values are stored relative to -90, so -90 to 180 is 0 to 180

//   // Night time          ww, cw
//   90 -90, 0, 0, 0,      255, 0, // Peak dusk
//   90 -45, 0, 0, 0,      255, 0,
//   90 -15, 0, 0, 0,      255, 0,
//   90 -10, 0, 0, 0,      255, 150,
//   90 -5,  0, 0, 0,      100, 255,
//   90 -2,  0, 0, 0,      20,  200,
//   90 -1, 100, 0, 25,     0,  150,
//   90 +0, 150, 0, 50,     0,  50,  // Transition
//   90 +1, 200, 0, 100,     0, 20,
//   90 +2,  D_RGB_PINK_FADED_2   0, 10,
//   90 +5,  D_RGB_PINK_FADED_2   0, 0,
//   90 +10, D_RGB_PINK_FADED_2   0, 0,
//   90 +15, D_RGB_PINK_FADED_2   0, 0,
//   90 +45, D_RGB_PINK_FADED_2   0, 0,
//   90 +90, D_RGB_PINK_FADED_2   0, 0  // Noon
  
// };


// // Figure out how to roll this into its own 
// /**
//  * RGBCCT Pairs
//  * Day:     Cyan
//  * Sunset:  yellow, orange, red
//  * Night:   deep red (level 1)
//  * */
// #ifndef D_PALETTE__DUAL_RGBCCT_SUN_ELEVATION_WITH_DEGREES_INDEX_01__NAME_CTR
// #define D_PALETTE__DUAL_RGBCCT_SUN_ELEVATION_WITH_DEGREES_INDEX_01__NAME_CTR   "DarkRed|Solid RGBCCT Sun Elevation 01 Dual Colours: Dark Red" // CCT ONLY
// #endif
// DEF_PGM_CTR  (PM__DUAL_RGBCCT_SUN_ELEVATION_WITH_DEGREES_INDEX_01__CTR)        D_PALETTE__DUAL_RGBCCT_SUN_ELEVATION_WITH_DEGREES_INDEX_01__NAME_CTR;
// #define        D__DUAL_RGBCCT_SUN_ELEVATION_WITH_DEGREES_INDEX_01__ENCODING    (PALETTE_ENCODING_TYPE_RGBCCT_WITH_INDEX_AS_VALUE_EXACT)     
// DEF_PGM_UINT8(PM__DUAL_RGBCCT_SUN_ELEVATION_WITH_DEGREES_INDEX_01__DATA)
// { //Index,R,G,B,WW,CW
//   // Index values are stored relative to -90, so -90 to 180 is 0 to 180
//   // Indexes must be replicated to give pairs (maybe 3 and 4 in groups later?)

//   // Night time          ww, cw
//   90 -90, 1, 0, 0,        0, 0, // Peak dusk
//   90 -90, 1, 0, 0,        0, 0, // Peak dusk
//   90 -45, 1, 0, 0,        0, 0,
//   90 -45, 1, 0, 0,        0, 0,
//   90 -15, 1, 0, 0,       0, 0,
//   90 -15, 1, 0, 0,       0, 0,
//   90 -10, 1, 0, 0,      0, 0,
//   90 -10, 1, 0, 0,      0, 0,
//   90 -5, 2, 0, 0,       20, 0,
//   90 -5, 2, 0, 0,       20, 0,
//   90 -2, 3, 0, 0,      10, 0,
//   90 -2, 3, 0, 0,      10, 0,
//   90 -1, 100, 0, 0,     5, 0,
//   90 -1, 100, 0, 0,     5, 0,
//   90 +0, 255, 3, 0,       2, 0,  // Transition
//   90 +0, 255, 3, 0,       2, 0,  // Transition
//   90 +1, D_RGB_ORANGE_WARM_1       1, 20,
//   90 +1, D_RGB_ORANGE_WARM_1       1, 20,
//   90 +2, D_RGB_YELLOW_WARM_2     0, 100,
//   90 +2, D_RGB_YELLOW_WARM_2     0, 100,
//   90 +5, 8, 10, 0,    0, 150,
//   90 +5, 8, 10, 0,    0, 150,
//   90 +10, 0, 20, 0,  0, 200,
//   90 +10, 0, 20, 0,  0, 200,
//   90 +15, 0, 30, 0,  0, 255,
//   90 +15, 0, 30, 0,  0, 255,
//   90 +45, 200, 40, 0,   0, 255,
//   90 +45, 200, 40, 0,   0, 255,
//   90 +90, 255, 50, 0,   0, 255,  // Noon
//   90 +90, 255, 50, 0,   0, 255  // Noon
  
// };



/**
 * @brief Store all colours into an array
 * 
 */
DEFINE_PGM_CTR(PM_STATIC_SINGLE_COLOUR_NAMES_CTR)
{
  "Red|Orange|Peach|Yellow|Limegreen|Green|Cyan|Blue|BluePurple|Purple|Pink|Hotpink|Warm White|Cold White|Black" // Name are not unique here!
};   
DEF_PGM_UINT8(PM_STATIC_SINGLE_COLOURS__DATA)
{
  RGB_RED
  RGB_ORANGE
  RGB_LIGHTORANGE
  RGB_YELLOW
  RGB_LIMEGREEN
  RGB_GREEN
  RGB_CYAN
  RGB_BLUE
  RGB_BLUEPURPLE
  RGB_PURPLE
  RGB_PINK
  RGB_HOTPINK
  RGB_WARMWHITE
  RGB_WHITE
  RGB_BLACK
};











// #ifdef ENABLE_CRGBPALETTES_IN_PROGMEM



      
#define GRADIENT_PALETTE_COUNT 39

const byte ib_jul01_gp[] PROGMEM = {
    0, 194,  1,  1,
   94,   1, 29, 18,
  132,  57,131, 28,
  255, 113,  1,  1};

// Gradient palette "es_vintage_57_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/es/vintage/tn/es_vintage_57.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 20 bytes of program space.

const byte es_vintage_57_gp[] PROGMEM = {
    0,   2,  1,  1,
   53,  18,  1,  0,
  104,  69, 29,  1,
  153, 167,135, 10,
  255,  46, 56,  4};


// Gradient palette "es_vintage_01_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/es/vintage/tn/es_vintage_01.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 32 bytes of program space.

const byte es_vintage_01_gp[] PROGMEM = {
    0,   4,  1,  1,
   51,  16,  0,  1,
   76,  97,104,  3,
  101, 255,131, 19,
  127,  67,  9,  4,
  153,  16,  0,  1,
  229,   4,  1,  1,
  255,   4,  1,  1};


// Gradient palette "es_rivendell_15_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/es/rivendell/tn/es_rivendell_15.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 20 bytes of program space.

const byte es_rivendell_15_gp[] PROGMEM = {
    0,   1, 14,  5,
  101,  16, 36, 14,
  165,  56, 68, 30,
  242, 150,156, 99,
  255, 150,156, 99};


// Gradient palette "rgi_15_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/ds/rgi/tn/rgi_15.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 36 bytes of program space.
// Edited to be brighter

const byte rgi_15_gp[] PROGMEM = {
    0,   4,  1, 70,
   31,  55,  1, 30,
   63, 255,  4,  7,
   95,  59,  2, 29,
  127,  11,  3, 50,
  159,  39,  8, 60,
  191, 112, 19, 40,
  223,  78, 11, 39,
  255,  29,  8, 59};


// Gradient palette "retro2_16_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/ma/retro2/tn/retro2_16.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 8 bytes of program space.

const byte retro2_16_gp[] PROGMEM = {
    0, 188,135,  1,
  255,  46,  7,  1};


// Gradient palette "Analogous_1_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/red/tn/Analogous_1.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 20 bytes of program space.

const byte Analogous_1_gp[] PROGMEM = {
    0,   3,  0,255,
   63,  23,  0,255,
  127,  67,  0,255,
  191, 142,  0, 45,
  255, 255,  0,  0};


// Gradient palette "es_pinksplash_08_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/es/pink_splash/tn/es_pinksplash_08.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 20 bytes of program space.

const byte es_pinksplash_08_gp[] PROGMEM = {
    0, 126, 11,255,
  127, 197,  1, 22,
  175, 210,157,172,
  221, 157,  3,112,
  255, 157,  3,112};


// Gradient palette "es_ocean_breeze_036_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/es/ocean_breeze/tn/es_ocean_breeze_036.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 16 bytes of program space.

const byte es_ocean_breeze_036_gp[] PROGMEM = {
    0,   1,  6,  7,
   89,   1, 99,111,
  153, 144,209,255,
  255,   0, 73, 82};


// Gradient palette "departure_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/mjf/tn/departure.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 88 bytes of program space.

const byte departure_gp[] PROGMEM = {
    0,   8,  3,  0,
   42,  23,  7,  0,
   63,  75, 38,  6,
   84, 169, 99, 38,
  106, 213,169,119,
  116, 255,255,255,
  138, 135,255,138,
  148,  22,255, 24,
  170,   0,255,  0,
  191,   0,136,  0,
  212,   0, 55,  0,
  255,   0, 55,  0};


// Gradient palette "es_landscape_64_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/es/landscape/tn/es_landscape_64.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 36 bytes of program space.

const byte es_landscape_64_gp[] PROGMEM = {
    0,   0,  0,  0,
   37,   2, 25,  1,
   76,  15,115,  5,
  127,  79,213,  1,
  128, 126,211, 47,
  130, 188,209,247,
  153, 144,182,205,
  204,  59,117,250,
  255,   1, 37,192};


// Gradient palette "es_landscape_33_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/es/landscape/tn/es_landscape_33.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 24 bytes of program space.

const byte es_landscape_33_gp[] PROGMEM = {
    0,   1,  5,  0,
   19,  32, 23,  1,
   38, 161, 55,  1,
   63, 229,144,  1,
   66,  39,142, 74,
  255,   1,  4,  1};


// Gradient palette "rainbowsherbet_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/ma/icecream/tn/rainbowsherbet.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 28 bytes of program space.

const byte rainbowsherbet_gp[] PROGMEM = {
    0, 255, 33,  4,
   43, 255, 68, 25,
   86, 255,  7, 25,
  127, 255, 82,103,
  170, 255,255,242,
  209,  42,255, 22,
  255,  87,255, 65};


// Gradient palette "gr65_hult_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/hult/tn/gr65_hult.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 24 bytes of program space.

const byte gr65_hult_gp[] PROGMEM = {
    0, 247,176,247,
   48, 255,136,255,
   89, 220, 29,226,
  160,   7, 82,178,
  216,   1,124,109,
  255,   1,124,109};


// Gradient palette "gr64_hult_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/hult/tn/gr64_hult.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 32 bytes of program space.

const byte gr64_hult_gp[] PROGMEM = {
    0,   1,124,109,
   66,   1, 93, 79,
  104,  52, 65,  1,
  130, 115,127,  1,
  150,  52, 65,  1,
  201,   1, 86, 72,
  239,   0, 55, 45,
  255,   0, 55, 45};


// Gradient palette "GMT_drywet_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/gmt/tn/GMT_drywet.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 28 bytes of program space.

const byte GMT_drywet_gp[] PROGMEM = {
    0,  47, 30,  2,
   42, 213,147, 24,
   84, 103,219, 52,
  127,   3,219,207,
  170,   1, 48,214,
  212,   1,  1,111,
  255,   1,  7, 33};


// Gradient palette "ib15_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/ing/general/tn/ib15.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 24 bytes of program space.

const byte ib15_gp[] PROGMEM = {
    0, 113, 91,147,
   72, 157, 88, 78,
   89, 208, 85, 33,
  107, 255, 29, 11,
  141, 137, 31, 39,
  255,  59, 33, 89};


// Gradient palette "Tertiary_01_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/vermillion/tn/Tertiary_01.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 20 bytes of program space.

const byte Tertiary_01_gp[] PROGMEM = {
    0,   0,  1,255,
   63,   3, 68, 45,
  127,  23,255,  0,
  191, 100, 68,  1,
  255, 255,  1,  4};


// Gradient palette "lava_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/neota/elem/tn/lava.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 52 bytes of program space.

const byte lava_gp[] PROGMEM = {
    0,   0,  0,  0,
   46,  18,  0,  0,
   96, 113,  0,  0,
  108, 142,  3,  1,
  119, 175, 17,  1,
  146, 213, 44,  2,
  174, 255, 82,  4,
  188, 255,115,  4,
  202, 255,156,  4,
  218, 255,203,  4,
  234, 255,255,  4,
  244, 255,255, 71,
  255, 255,255,255};


// Gradient palette "fierce_ice_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/neota/elem/tn/fierce-ice.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 28 bytes of program space.

const byte fierce_ice_gp[] PROGMEM = {
    0,   0,  0,  0,
   59,   0,  9, 45,
  119,   0, 38,255,
  149,   3,100,255,
  180,  23,199,255,
  217, 100,235,255,
  255, 255,255,255};


// Gradient palette "Colorfull_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/atmospheric/tn/Colorfull.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 44 bytes of program space.

const byte Colorfull_gp[] PROGMEM = {
    0,  10, 85,  5,
   25,  29,109, 18,
   60,  59,138, 42,
   93,  83, 99, 52,
  106, 110, 66, 64,
  109, 123, 49, 65,
  113, 139, 35, 66,
  116, 192,117, 98,
  124, 255,255,137,
  168, 100,180,155,
  255,  22,121,174};


// Gradient palette "Pink_Purple_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/atmospheric/tn/Pink_Purple.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 44 bytes of program space.

const byte Pink_Purple_gp[] PROGMEM = {
    0,  19,  2, 39,
   25,  26,  4, 45,
   51,  33,  6, 52,
   76,  68, 62,125,
  102, 118,187,240,
  109, 163,215,247,
  114, 217,244,255,
  122, 159,149,221,
  149, 113, 78,188,
  183, 128, 57,155,
  255, 146, 40,123};


// Gradient palette "Sunset_Real_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/atmospheric/tn/Sunset_Real.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 28 bytes of program space.

const byte Sunset_Real_gp[] PROGMEM = {
    0, 120,  0,  0,
   22, 179, 22,  0,
   51, 255,104,  0,
   85, 167, 22, 18,
  135, 100,  0,103,
  198,  16,  0,130,
  255,   0,  0,160};


// Gradient palette "Sunset_Yellow_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/atmospheric/tn/Sunset_Yellow.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 44 bytes of program space.

const byte Sunset_Yellow_gp[] PROGMEM = {
    0,  10, 62,123,
   36,  56,130,103,
   87, 153,225, 85,
  100, 199,217, 68,
  107, 255,207, 54,
  115, 247,152, 57,
  120, 239,107, 61,
  128, 247,152, 57,
  180, 255,207, 54,
  223, 255,227, 48,
  255, 255,248, 42};


// Gradient palette "Beech_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/atmospheric/tn/Beech.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 60 bytes of program space.

const byte Beech_gp[] PROGMEM = {
    0, 255,252,214,
   12, 255,252,214,
   22, 255,252,214,
   26, 190,191,115,
   28, 137,141, 52,
   28, 112,255,205,
   50,  51,246,214,
   71,  17,235,226,
   93,   2,193,199,
  120,   0,156,174,
  133,   1,101,115,
  136,   1, 59, 71,
  136,   7,131,170,
  208,   1, 90,151,
  255,   0, 56,133};


// Gradient palette "Another_Sunset_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/atmospheric/tn/Another_Sunset.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 32 bytes of program space.

const byte Another_Sunset_gp[] PROGMEM = {
    0, 110, 49, 11,
   29,  55, 34, 10,
   68,  22, 22,  9,
   68, 239,124,  8,
   97, 220,156, 27,
  124, 203,193, 61,
  178,  33, 53, 56,
  255,   0,  1, 52};





// Gradient palette "es_autumn_19_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/es/autumn/tn/es_autumn_19.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 52 bytes of program space.

const byte es_autumn_19_gp[] PROGMEM = {
    0,  26,  1,  1,
   51,  67,  4,  1,
   84, 118, 14,  1,
  104, 137,152, 52,
  112, 113, 65,  1,
  122, 133,149, 59,
  124, 137,152, 52,
  135, 113, 65,  1,
  142, 139,154, 46,
  163, 113, 13,  1,
  204,  55,  3,  1,
  249,  17,  1,  1,
  255,  17,  1,  1};


// Gradient palette "BlacK_Blue_Magenta_White_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/basic/tn/BlacK_Blue_Magenta_White.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 28 bytes of program space.

const byte BlacK_Blue_Magenta_White_gp[] PROGMEM = {
    0,   0,  0,  0,
   42,   0,  0, 45,
   84,   0,  0,255,
  127,  42,  0,255,
  170, 255,  0,255,
  212, 255, 55,255,
  255, 255,255,255};


// Gradient palette "BlacK_Magenta_Red_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/basic/tn/BlacK_Magenta_Red.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 20 bytes of program space.

const byte BlacK_Magenta_Red_gp[] PROGMEM = {
    0,   0,  0,  0,
   63,  42,  0, 45,
  127, 255,  0,255,
  191, 255,  0, 45,
  255, 255,  0,  0};


// Gradient palette "BlacK_Red_Magenta_Yellow_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/basic/tn/BlacK_Red_Magenta_Yellow.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 28 bytes of program space.

const byte BlacK_Red_Magenta_Yellow_gp[] PROGMEM = {
    0,   0,  0,  0,
   42,  42,  0,  0,
   84, 255,  0,  0,
  127, 255,  0, 45,
  170, 255,  0,255,
  212, 255, 55, 45,
  255, 255,255,  0};


// Gradient palette "Blue_Cyan_Yellow_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/nd/basic/tn/Blue_Cyan_Yellow.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 20 bytes of program space.

const byte Blue_Cyan_Yellow_gp[] PROGMEM = {
    0,   0,  0,255,
   63,   0, 55,255,
  127,   0,255,255,
  191,  42,255, 45,
  255, 255,255,  0};

const byte Orange_Teal_gp[] PROGMEM = {
    0,   0,150, 92,
   55,   0,150, 92,
  200, 255, 72,  0,
  255, 255, 72,  0};


const byte Tiamat_gp[] PROGMEM = {
    0,   1,  2, 14, //gc
   33,   2,  5, 35, //gc from 47, 61,126
  100,  13,135, 92, //gc from 88,242,247
  120,  43,255,193, //gc from 135,255,253
  140, 247,  7,249, //gc from 252, 69,253
  160, 193, 17,208, //gc from 231, 96,237
  180,  39,255,154, //gc from 130, 77,213
  200,   4,213,236, //gc from 57,122,248
  220,  39,252,135, //gc from 177,254,255
  240, 193,213,253, //gc from 203,239,253
  255, 255,249,255};
  

const byte April_Night_gp[] PROGMEM = {
    0,   1,  5, 45, 
   10,   1,  5, 45,
   25,   5,169,175, //light blue
   40,   1,  5, 45,
   61,   1,  5, 45,
   76,  45,175, 31, //green
   91,   1,  5, 45,
  112,   1,  5, 45,
  127, 249,150,  5, //yellow
  143,   1,  5, 45,
  162,   1,  5, 45,
  178, 255, 92,  0, //pastel orange
  193,   1,  5, 45,
  214,   1,  5, 45,
  229, 223, 45, 72, //pink
  244,   1,  5, 45,
  255,   1,  5, 45};

const byte Orangery_gp[] PROGMEM = {
    0, 255, 95, 23,
   30, 255, 82,  0,
   60, 223, 13,  8,
   90, 144, 44,  2,
  120, 255,110, 17,
  150, 255, 69,  0,
  180, 158, 13, 11,
  210, 241, 82, 17,
  255, 213, 37,  4};

const byte Sakura_gp[] PROGMEM = {
    0, 196, 19, 10,
   65, 255, 69, 45,
  130, 223, 45, 72,
  195, 255, 82,103,
  255, 223, 13, 17};

const byte Aurora_gp[] PROGMEM = {
    0,   1,  5, 45, //deep blue
   64,   0,200, 23,
  128,   0,255,  0, //green
  170,   0,243, 45,
  200,   0,135,  7,
  255,   1,  5, 45};//deep blue

const byte Atlantica_gp[] PROGMEM = {
    0,   0, 28,112, //#001C70
   50,  32, 96,255, //#2060FF
  100,   0,243, 45,
  150,  12, 95, 82, //#0C5F52
  200,  25,190, 95, //#19BE5F
  255,  40,170, 80};//#28AA50
  
// Gradient palette "temperature_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/arendal/tn/temperature.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 144 bytes of program space.

const byte temperature_gp[] PROGMEM = {
    0,   1, 27,105,
   14,   1, 40,127,
   28,   1, 70,168,
   42,   1, 92,197,
   56,   1,119,221,
   70,   3,130,151,
   84,  23,156,149,
   99,  67,182,112,
  113, 121,201, 52,
  127, 142,203, 11,
  141, 224,223,  1,
  155, 252,187,  2,
  170, 247,147,  1,
  184, 237, 87,  1,
  198, 229, 43,  1,
  226, 171,  2,  2,
  240,  80,  3,  3,
  255,  80,  3,  3};

  const byte Aurora2_gp[] PROGMEM = {
      0,  17, 177,  13,    //Greenish
     64, 121, 242,   5,    //Greenish
    128,  25, 173, 121,    //Turquoise
    192, 250,  77, 127,    //Pink
    255, 171, 101, 221     //Purple
  };

  // Gradient palette "bhw1_01_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw1/tn/bhw1_01.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 12 bytes of program space.

const byte retro_clown_gp[] PROGMEM = {
    0, 227,101,  3,
  117, 194, 18, 19,
  255,  92,  8,192};

// Gradient palette "bhw1_04_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw1/tn/bhw1_04.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 20 bytes of program space.

const byte candy_gp[] PROGMEM = {
    0, 229,227,  1,
   15, 227,101,  3,
  142,  40,  1, 80,
  198,  17,  1, 79,
  255,   0,  0, 45};

// Gradient palette "bhw1_05_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw1/tn/bhw1_05.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 8 bytes of program space.

const byte toxy_reaf_gp[] PROGMEM = {
    0,   1,221, 53,
  255,  73,  3,178};

// Gradient palette "bhw1_06_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw1/tn/bhw1_06.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 16 bytes of program space.

const byte  fairy_reaf_gp[] PROGMEM = {
    0, 184,  1,128,
  160,   1,193,182,
  219, 153,227,190,
  255, 255,255,255};

// Gradient palette "bhw1_14_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw1/tn/bhw1_14.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 36 bytes of program space.

const byte semi_blue_gp[] PROGMEM = {
    0,   0,  0,  0,
   12,   1,  1,  3,
   53,   8,  1, 22,
   80,   4,  6, 89,
  119,   2, 25,216,
  145,   7, 10, 99,
  186,  15,  2, 31,
  233,   2,  1,  5,
  255,   0,  0,  0};

// Gradient palette "bhw1_three_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw1/tn/bhw1_three.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 32 bytes of program space.

const byte pink_candy_gp[] PROGMEM = {
    0, 255,255,255,
   45,   7, 12,255,
  112, 227,  1,127,
  112, 227,  1,127,
  140, 255,255,255,
  155, 227,  1,127,
  196,  45,  1, 99,
  255, 255,255,255};

// Gradient palette "bhw1_w00t_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw1/tn/bhw1_w00t.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 16 bytes of program space.

const byte red_reaf_gp[] PROGMEM = {
    0,   3, 13, 43,
  104,  78,141,240,
  188, 255,  0,  0,
  255,  28,  1,  1};


// Gradient palette "bhw2_23_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw2/tn/bhw2_23.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Red & Flash in SR
// Size: 28 bytes of program space.

const byte aqua_flash_gp[] PROGMEM = {
    0,   0,  0,  0,
   66,  57,227,233,
   96, 255,255,  8,
  124, 255,255,255,
  153, 255,255,  8,
  188,  57,227,233,
  255,   0,  0,  0};

// Gradient palette "bhw2_xc_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw2/tn/bhw2_xc.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// YBlue in SR
// Size: 28 bytes of program space.

const byte yelblu_hot_gp[] PROGMEM = {
    0,   4,  2,  9,
   58,  16,  0, 47,
  122,  24,  0, 16,
  158, 144,  9,  1,
  183, 179, 45,  1,
  219, 220,114,  2,
  255, 234,237,  1};

 // Gradient palette "bhw2_45_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw2/tn/bhw2_45.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 24 bytes of program space.

const byte lite_light_gp[] PROGMEM = {
    0,   0,  0,  0,
    9,   1,  1,  1,
   40,   5,  5,  6,
   66,   5,  5,  6,
  101,  10,  1, 12,
  255,   0,  0,  0};

// Gradient palette "bhw2_22_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw2/tn/bhw2_22.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Pink Plasma in SR
// Size: 20 bytes of program space.

const byte red_flash_gp[] PROGMEM = {
    0,   0,  0,  0,
   99, 227,  1,  1,
  130, 249,199, 95,
  155, 227,  1,  1,
  255,   0,  0,  0};

// Gradient palette "bhw3_40_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw3/tn/bhw3_40.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 32 bytes of program space.

const byte blink_red_gp[] PROGMEM = {
    0,   1,  1,  1,
   43,   4,  1, 11,
   76,  10,  1,  3,
  109, 161,  4, 29,
  127, 255, 86,123,
  165, 125, 16,160,
  204,  35, 13,223,
  255,  18,  2, 18};

// Gradient palette "bhw3_52_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw3/tn/bhw3_52.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Yellow2Blue in SR
// Size: 28 bytes of program space.

const byte red_shift_gp[] PROGMEM = {
    0,  31,  1, 27,
   45,  34,  1, 16,
   99, 137,  5,  9,
  132, 213,128, 10,
  175, 199, 22,  1,
  201, 199,  9,  6,
  255,   1,  0,  1};


// Gradient palette "bhw4_017_gp", originally from
// http://soliton.vm.bytemark.co.uk/pub/cpt-city/bhw/bhw4/tn/bhw4_017.png.index.html
// converted for FastLED with gammas (2.6, 2.2, 2.5)
// Size: 40 bytes of program space.

const byte candy2_gp[] PROGMEM = {
    0,  39, 33, 34,
   25,   4,  6, 15,
   48,  49, 29, 22,
   73, 224,173,  1,
   89, 177, 35,  5,
  130,   4,  6, 15,
  163, 255,114,  6,
  186, 224,173,  1,
  211,  39, 33, 34,
  255,   1,  1,  1};


// Single array of defined cpt-city color palettes.
// This will let us programmatically choose one based on
// a number, rather than having to activate each explicitly
// by name every time.
const byte* const gGradientPalettes[] PROGMEM = {
  Sunset_Real_gp,               //13-00 Sunset
  es_rivendell_15_gp,           //14-01 Rivendell
  es_ocean_breeze_036_gp,       //15-02 Breeze
  rgi_15_gp,                    //16-03 Red & Blue
  retro2_16_gp,                 //17-04 Yellowout
  Analogous_1_gp,               //18-05 Analogous
  es_pinksplash_08_gp,          //19-06 Splash
  Sunset_Yellow_gp,             //20-07 Pastel
  Another_Sunset_gp,            //21-08 Sunset2
  Beech_gp,                     //22-09 Beech
  es_vintage_01_gp,             //23-10 Vintage
  departure_gp,                 //24-11 Departure
  es_landscape_64_gp,           //25-12 Landscape
  es_landscape_33_gp,           //26-13 Beach
  rainbowsherbet_gp,            //27-14 Sherbet
  gr65_hult_gp,                 //28-15 Hult
  gr64_hult_gp,                 //29-16 Hult64
  GMT_drywet_gp,                //30-17 Drywet
  ib_jul01_gp,                  //31-18 Jul
  es_vintage_57_gp,             //32-19 Grintage

  // 20-29
  ib15_gp,                      //33-20 Rewhi
  Tertiary_01_gp,               //34-21 Tertiary
  lava_gp,                      //35-22 Fire
  fierce_ice_gp,                //36-23 Icefire
  Colorfull_gp,                 //37-24 Cyane

  Pink_Purple_gp,               //38-25 Light Pink
  es_autumn_19_gp,              //39-26 Autumn
  BlacK_Blue_Magenta_White_gp,  //40-27 Magenta
  BlacK_Magenta_Red_gp,         //41-28 Magred
  BlacK_Red_Magenta_Yellow_gp,  //42-29 Yelmag
  

  // 30-39
  Blue_Cyan_Yellow_gp,          //43-30 Yelblu
  Orange_Teal_gp,               //44-31 Orange & Teal
  Tiamat_gp,                    //45-32 Tiamat
  April_Night_gp,               //46-33 April Night
  Orangery_gp,                  //47-34 Orangery
  Sakura_gp,                    //49-36 Sakura
  Aurora_gp,                    //50-37 Aurora
  Atlantica_gp,                 //51-38 Atlantica
  
  temperature_gp,               //54-41 Temperature
  Aurora2_gp,                   //55-42 Aurora 2
  retro_clown_gp,               //56-43 Retro Clown
  candy_gp,                     //57-44 Candy
  toxy_reaf_gp,                 //58-45 Toxy Reaf
  fairy_reaf_gp,                //59-46 Fairy Reaf
  semi_blue_gp,                 //60-47 Semi Blue
  pink_candy_gp,                //61-48 Pink Candy
  red_reaf_gp,                  //62-49 Red Reaf
  
  aqua_flash_gp,                //63-50 Aqua Flash
  yelblu_hot_gp,                //64-51 Yelblu Hot
  lite_light_gp,                //65-52 Lite Light
  red_flash_gp,                 //66-53 Red Flash
  blink_red_gp,                 //67-54 Blink Red
  red_shift_gp,                 //68-55 Red Shift
  candy2_gp                     //70-57 Candy2
};

// #endif // ENABLE_CRGBPALETTES_IN_PROGMEM


DEFINE_PGM_CTR(PM_DYNAMIC_CRGBPALETTE16_RANDOMISED_NAMES_CTR)
{
  // "Var Pre|Var PreSec|Var PreSecTer|Var PreSecTer Repeated" // Name are not unique here!

  "*Two Colours|*Three Colours|*Four Colours|*Five Colours|"
  "*Five Colours Repeated|"
  "Randomise 01|Randomise 02|Randomise 03|Randomise 04|Randomise 05|"


};


DEFINE_PGM_CTR(PM_DYNAMIC_RGBCCT_NAMES_CTR)
{
  "Dynamic SunAZ CCT|Dynamic SunEL CCT|Dynamic SunEL PreSec|Dynamic Time Secs PreSec"
};


DEFINE_PGM_CTR(PM_STATIC_CRGBPALETTE16_NAMES_CTR)
{
  "Rainbow 16|Cloud 16|Lava 16|Ocean 16|Forest 16|Rainbow Stripe 16|Party 16|Heat 16|Parula 16|Turbo 16|Hot 16|Cool 16|Spring 16|Autumn 16|Jet 16" // Name are not unique here!
};

DEFINE_PGM_CTR(PM_STATIC_CRGBPALETTE16_GRADIENT_NAMES_CTR)
{
  "Sunset|Rivendell|Ocean Breeze|Red & Blue|Yellowout|Analogous|Pink Splash|Sunset Yellow|Sunset 2|Beech|"
  "Vintage|Departure|Landscape|Beach|Sherbet|Hult|Hult 64|Drywet|Jul|"
  "Grintage|Rewhi|Tertiary|Lava Fire|Icefire|Cyane|Light Pink|Autumn 16|Magenta|Magred|Yelmag|"
  "Yelblu|Orange & Teal|Tiamat|April Night|Orangery|Sakura|Aurora|Atlantica|"
  "Temperature|Aurora 2|Retro Clown|Candy|Toxy Reaf|Fairy Reaf|Semi Blue|Pink Candy|Red Reaf|"
  "Aqua Flash|Yelblu Hot|Lite Light|Red Flash|Blink Red|Red Shift|Candy2"
};



#endif

// // From ColorWavesWithPalettes by Mark Kriegsman: https://gist.github.com/kriegsman/8281905786e8b2632aeb
// // Unfortunaltely, these are stored in RAM!

// // Gradient palette "ib_jul01_gp", originally from
// // http://soliton.vm.bytemark.co.uk/pub/cpt-city/ing/xmas/tn/ib_jul01.png.index.html
// // converted for FastLED with gammas (2.6, 2.2, 2.5)
// // Size: 16 bytes of program space.

//https://www.espressif.com/sites/default/files/documentation/save_esp8266ex_ram_with_progmem_en.pdf





/******************************************************************************************************************************************************
 * ****************************************************************************************************************************************************
 * ****************************************************************************************************************************************************
 * **** backup ************************************************************************************************************************************************
 * ****************************************************************************************************************************************************
 * ****************************************************************************************************************************************************
*/


// /**
//  * @note: Traditional 5 colour UK lights with orange
//  * */
// #ifndef D_PALETTE_CHRISTMAS_01_NAME_CTR
// #define D_PALETTE_CHRISTMAS_01_NAME_CTR                 "XMAS01 RGPBO C01|Christmas Traditional - RGPBO|Christmas 01"   
// #endif    
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_01_NAME_CTR)         D_PALETTE_CHRISTMAS_01_NAME_CTR;
// #define D_PALETTE_CHRISTMAS_01_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_01__DATA)
// { // R,G,B
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FULL
//   D_RGB_PINK_ALT_2
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL
// };

// /**
//  * @note: Traditional lights with yellow
//  * */
// #ifndef D_PALETTE_CHRISTMAS_02_NAME_CTR
// #define D_PALETTE_CHRISTMAS_02_NAME_CTR        "XMAS02 RGPBY C02|Christmas Traditional - RGPBY|Christmas 02"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_02_NAME_CTR)        D_PALETTE_CHRISTMAS_02_NAME_CTR;
// #define D_PALETTE_CHRISTMAS_02_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_02__DATA)
// { // R,G,B
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FULL
//   D_RGB_PINK_ALT_2
//   D_RGB_BLUE_FADED_3
//   D_RGB_YELLOW_WARM_2
// };

// /**
//  * @note: Traditional lights
//  * */
// #ifndef D_PALETTE_CHRISTMAS_03_NAME_CTR
// #define D_PALETTE_CHRISTMAS_03_NAME_CTR        "XMAS ROGPBY C03|Christmas Traditional - ROGPBY|Christmas 03"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_03_NAME_CTR)        D_PALETTE_CHRISTMAS_03_NAME_CTR;
// #define D_PALETTE_CHRISTMAS_03_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_03__DATA)
// { // R,G,B
//   D_RGB_RED_FULL
//   D_RGB_ORANGE_FULL
//   D_RGB_GREEN_FULL
//   D_RGB_PINK_ALT_2
//   D_RGB_BLUE_FADED_3
//   D_RGB_YELLOW_WARM_2
// };



// #ifndef D_PALETTE_CHRISTMAS_04_NAME_CTR
// #define D_PALETTE_CHRISTMAS_04_NAME_CTR        "XMAS Pifco MiniBells C04|Christmas Pifco MiniBells|Christmas 04" // GPYpBPp"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_04_NAME_CTR)        D_PALETTE_CHRISTMAS_04_NAME_CTR;
// #define D_PALETTE_CHRISTMAS_04_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_04__DATA)
// { // R,G,B
//   0,120,0,    // Green
//   150,0,0,    // Red
//   0,0,100,    // Blue Faded
//   255,16,44,  // Pink
//   252,157,3,  // Yellow
//   157,0,255,  // Purple
// };


// #ifndef D_PALETTE_CHRISTMAS_05_NAME_CTR
// #define D_PALETTE_CHRISTMAS_05_NAME_CTR        "XMAS RGBO C05|Christmas Basic Orange|Christmas 05"  
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_05_NAME_CTR)        D_PALETTE_CHRISTMAS_05_NAME_CTR;
// #define D_PALETTE_CHRISTMAS_05_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_05__DATA)
// { // R,G,B
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL
// };

// #ifndef D_PALETTE_CHRISTMAS_06_NAME_CTR
// #define D_PALETTE_CHRISTMAS_06_NAME_CTR        "XMAS RGBY C06|Christmas Basic Yellow|Christmas 06" 
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_06_NAME_CTR)        D_PALETTE_CHRISTMAS_06_NAME_CTR;
// #define D_PALETTE_CHRISTMAS_06_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_06__DATA)
// { // R,G,B
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_BLUE_FADED_3
//   D_RGB_YELLOW_WARM_2
// };


// #ifndef D_PALETTE_CHRISTMAS_07_NAME_CTR
// #define D_PALETTE_CHRISTMAS_07_NAME_CTR                "XMAS Multi C07|Coloured MultiColoured Warmer|Christmas MultiColoured Warmer|Christmas 06"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_07_NAME_CTR)         D_PALETTE_CHRISTMAS_07_NAME_CTR;
// #define D_PALETTE_CHRISTMAS_07_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)     
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_07__DATA)
// { // R,G,B       
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL   
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
// };


// #ifndef D_PALETTE_CHRISTMAS_08_NAME_CTR
// #define D_PALETTE_CHRISTMAS_08_NAME_CTR        "Warm White C08|Christmas Warm White|Christmas 08"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_08_NAME_CTR)        D_PALETTE_CHRISTMAS_08_NAME_CTR;
// #define D_PALETTE_CHRISTMAS_08_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_08__DATA)
// { // R,G,B
//   255, 140, 26 // Warm White         
// };


// #ifndef D_PALETTE_CHRISTMAS_09_NAME_CTR
// #define D_PALETTE_CHRISTMAS_09_NAME_CTR        "Cold White C09|Christmas Cold White|Christmas 09"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_09_NAME_CTR)        D_PALETTE_CHRISTMAS_09_NAME_CTR;
// #define D_PALETTE_CHRISTMAS_09_ENCODING                (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_09__DATA)
// { // R,G,B
//   255, 255, 255
// };



// /**
//  * @brief Selecting nicest colours for steppin palette (pairs only)
//  * Includes white!
//  */
// #ifndef D_PALETTE_CHRISTMAS_10_NAME_CTR
// #define D_PALETTE_CHRISTMAS_10_NAME_CTR        "Multi Pairs (+W) C10|Christmas Stepping Palette Pairs 01|Christmas 10"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_10_NAME_CTR)        D_PALETTE_CHRISTMAS_10_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_10_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_10__DATA)
// {     
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_YELLOW_WARM_2
//   D_RGB_PURPLE_BLUE
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1      
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_2
//   D_RGB_PINK_ALT_1
//   D_RGB_WHITE_COOL_FADED_1
//   D_RGB_BLUE_FADED_1
//   D_RGB_ORANGE_WARM_2  
//   D_RGB_RED_ALT_1
//   D_RGB_YELLOW_WARM_1
//   D_RGB_BLUE_ALT_1
//   D_RGB_PINK_ALT_3
//   D_RGB_CYAN_FULL 
// };

// /**
//  * @brief from yelmag, make nice palette around these colours
//  * 
//  */
// #ifndef D_PALETTE_CHRISTMAS_11_NAME_CTR
// #define D_PALETTE_CHRISTMAS_11_NAME_CTR        "XMAS C11|Christmas Outside 11|Christmas 11"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_11_NAME_CTR)        D_PALETTE_CHRISTMAS_11_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_11_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_11__DATA)
// { // R,G,B               
//   D_RGB_RED_FULL  
//   255,  0,255,
//   255, 55, 45,
//   255,255,  0
// };


// /**
//  * @brief Keep 2022
//  * 
//  */
// #ifndef D_PALETTE_CHRISTMAS_12_NAME_CTR
// #define D_PALETTE_CHRISTMAS_12_NAME_CTR        "XMAS Multi Snow01 C12|Christmas Snow Tree|Christmas 12"  
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_12_NAME_CTR)        D_PALETTE_CHRISTMAS_12_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_12_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_12__DATA)
// { // R,G,B
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_2
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_1
//   D_RGB_ORANGE_FULL   
//   D_RGB_GREEN_PASTEL
//   D_RGB_CYAN_FADED_3
//   D_RGB_PINK_FADED_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2 
// };


// // Use 2022
// #ifndef D_PALETTE_CHRISTMAS_13_NAME_CTR
// #define D_PALETTE_CHRISTMAS_13_NAME_CTR        "XMAS C13|Christmas Outside Tree Stepping Palette 01|Christmas 13"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_13_NAME_CTR)        D_PALETTE_CHRISTMAS_13_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_13_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_13__DATA)
// { // R,G,B
//   D_RGB_RED_FULL
//   // Redo
// };




// #ifndef D_PALETTE_CHRISTMAS_14_NAME_CTR
// #define D_PALETTE_CHRISTMAS_14_NAME_CTR        "XMAS C14"//"Christmas Multi with Warm White"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_14_NAME_CTR)        D_PALETTE_CHRISTMAS_14_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_14_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_14__DATA)
// { // R,G,B
//   // redo
//   255, 67, 10, // peach   
//   252,167,10,  //Yellow
// };



// #ifndef D_PALETTE_CHRISTMAS_15_NAME_CTR
// #define D_PALETTE_CHRISTMAS_15_NAME_CTR        "XMAS C15|Cherry Yellow|Christmas 15"
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_15_NAME_CTR)        D_PALETTE_CHRISTMAS_15_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_15_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_15__DATA)
// { // R,G,B
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_3
//   D_RGB_YELLOW_WARM_2
// };



// #ifndef D_PALETTE_CHRISTMAS_16_NAME_CTR
// #define D_PALETTE_CHRISTMAS_16_NAME_CTR        "XMAS C16|Cherry Orange|Christmas 16"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_16_NAME_CTR)        D_PALETTE_CHRISTMAS_16_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_16_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_16__DATA)
// { // R,G,B    
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_3
//   D_RGB_ORANGE_WARM_1
// };


// #ifndef D_PALETTE_CHRISTMAS_17_NAME_CTR
// #define D_PALETTE_CHRISTMAS_17_NAME_CTR        "Colour/Warm White Stripe C17|Coloured and Warm White|Christmas 17"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_17_NAME_CTR)        D_PALETTE_CHRISTMAS_17_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_17_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_17__DATA)
// { // R,G,B      
//   D_RGB_RED_FULL
//   D_RGB_WHITE_WARM_2
//   D_RGB_GREEN_FADED_3
//   D_RGB_WHITE_WARM_2
//   D_RGB_PINK_ALT_1
//   D_RGB_WHITE_WARM_2
//   D_RGB_BLUE_FADED_3
//   D_RGB_WHITE_WARM_2
//   D_RGB_ORANGE_FULL    
//   D_RGB_WHITE_WARM_2   
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_WHITE_WARM_2
//   D_RGB_CYAN_FADED_4
//   D_RGB_WHITE_WARM_2
//   D_RGB_PINK_ALT_2
//   D_RGB_WHITE_WARM_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_WHITE_WARM_2
//   D_RGB_ORANGE_WARM_1
//   D_RGB_WHITE_WARM_2
//   D_RGB_YELLOW_WARM_2
//   D_RGB_WHITE_WARM_2
// };

// #ifndef D_PALETTE_CHRISTMAS_18_NAME_CTR
// #define D_PALETTE_CHRISTMAS_18_NAME_CTR        "Colour/Cold White Stripe C18|Coloured and Cold White|Christmas 18"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_18_NAME_CTR)        D_PALETTE_CHRISTMAS_18_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_18_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_18__DATA)
// { // R,G,B      
//   D_RGB_RED_FULL
//   100,100,100, // Cool white (using less than full brightness so not wash colours out)
//   D_RGB_GREEN_FADED_3
//   100,100,100,
//   D_RGB_PINK_ALT_1
//   100,100,100,
//   D_RGB_BLUE_FADED_3
//   100,100,100,
//   D_RGB_ORANGE_FULL    
//   100,100,100,   
//   D_RGB_GREEN_PASTEL_FADED_1
//   100,100,100,
//   D_RGB_CYAN_FADED_4
//   100,100,100,
//   D_RGB_PINK_ALT_2
//   100,100,100,
//   D_RGB_RED_PASTEL_1
//   100,100,100,
//   D_RGB_ORANGE_WARM_1
//   100,100,100,
//   D_RGB_YELLOW_WARM_2
//   100,100,100,
// };


// #ifndef D_PALETTE_CHRISTMAS_19_NAME_CTR
// #define D_PALETTE_CHRISTMAS_19_NAME_CTR        "XMAS C19|tbd|Christmas 19"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_19_NAME_CTR)        D_PALETTE_CHRISTMAS_19_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_19_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_19__DATA)
// { // R,G,B      
//   D_RGB_RED_FULL
//   //redo
// };

// /**************************************************************************************************************************
//  ***************************************************************************************************************************
//   @brief Group of palettes designed for snow covered tree
//  * ********************************************************************************************************************************
//  **************************************************************************************************** */

// // Confirmed at 2021 Tree colours
// #ifndef D_PALETTE_CHRISTMAS_20_NAME_CTR
// #define D_PALETTE_CHRISTMAS_20_NAME_CTR        "XMAS C20|MultiColoured Snow Tree Dinning Room|Christmas 20"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_20_DESCRIPTION_CTR   "Dining room 2021 Palette" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_20_NAME_CTR)        D_PALETTE_CHRISTMAS_20_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_20_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_20__DATA)
// { // R,G,B      
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4
// };


// #ifndef D_PALETTE_CHRISTMAS_21_NAME_CTR
// #define D_PALETTE_CHRISTMAS_21_NAME_CTR        "XMAS 21|Christmas 2021 - DiningRoom Tree|Christmas 21"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_21_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_21_NAME_CTR)        D_PALETTE_CHRISTMAS_21_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_21_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_21__DATA)
// { // R,G,B      
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4
// };



// /**
//  *  New 2022 smaller microled transparant wire, looks more blue than 2021 version
//  * Much less green/blue
//  * */
// #ifndef D_PALETTE_CHRISTMAS_22_NAME_CTR
// #define D_PALETTE_CHRISTMAS_22_NAME_CTR        "XMAS 22|Christmas 2022 - DiningRoom Tree|Christmas 22"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_22_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_22_NAME_CTR)        D_PALETTE_CHRISTMAS_22_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_22_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_22__DATA)
// { // R,G,B      
      
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4   
// };

// /**
//  *  New 2022 smaller microled transparant wire, looks more blue than 2021 version
//  * Much less green/blue
//  * NO deep purple
//  * */
// #ifndef D_PALETTE_CHRISTMAS_23_NAME_CTR
// #define D_PALETTE_CHRISTMAS_23_NAME_CTR        "XMAS 23?|Christmas 2022 - DiningRoom Tree|Christmas 23"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_23_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_23_NAME_CTR)        D_PALETTE_CHRISTMAS_23_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_23_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_23__DATA)
// { // R,G,B                
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_PURPLE_BLUE
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4   
// };



// #ifndef D_PALETTE_CHRISTMAS_24_NAME_CTR
// #define D_PALETTE_CHRISTMAS_24_NAME_CTR        "XMAS 24+|Chrismtas White Warm80Cold20|Christmas 24"
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_24_NAME_CTR)        D_PALETTE_CHRISTMAS_24_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_24_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_24__DATA)
// { // R,G,B      

// // I think "cold white" should actually be much dimmer than warm white, this will "even" the brightness

//   D_RGB_WHITE_WARM_3
//   D_RGB_WHITE_WARM_3
//   D_RGB_WHITE_WARM_3
//   D_RGB_WHITE_WARM_3
//   D_RGB_WHITE_COOL_FADED_2

// };


// #ifndef D_PALETTE_CHRISTMAS_25_NAME_CTR
// #define D_PALETTE_CHRISTMAS_25_NAME_CTR        "XMAS 25+|Christmas 2022 - Outside Tree|Christmas 25"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_25_NAME_CTR)        D_PALETTE_CHRISTMAS_25_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_25_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_25__DATA)
// { // R,G,B      
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_PURPLE_DARKER
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4
// };

// #ifndef D_PALETTE_CHRISTMAS_26_NAME_CTR
// #define D_PALETTE_CHRISTMAS_26_NAME_CTR        "XMAS 26+|Blue and White|Christmas 26"   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_26_NAME_CTR)        D_PALETTE_CHRISTMAS_26_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_26_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_26__DATA)
// { 
//   D_RGB_BLUE_FULL
//   D_RGB_WHITE_COOL_FADED_3
// }; 
// #ifdef USE_EXTENDED_PALETTE_DESCRIPTIONS // I would then need an extra pointer set up in memory to progmem versions of these
// #define D_PALETTE_CHRISTMAS_26_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// #endif


// /**
//  *  New 2022 smaller microled transparant wire, looks more blue than 2021 version
//  * Much less green/blue
//  * NO deep purple
//  * No currently used
//  * */
// #ifndef D_PALETTE_CHRISTMAS_27_NAME_CTR
// #define D_PALETTE_CHRISTMAS_27_NAME_CTR        "XMAS 27+|Christmas 2022 - Coloured with White|Christmas 27"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_27_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_27_NAME_CTR)        D_PALETTE_CHRISTMAS_27_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_27_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_27__DATA)
// { // R,G,B                
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_PURPLE_BLUE
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   // Repeated with tweaks
//   D_RGB_RED_ALT_1
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_PINK_FADED_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_ORANGE_WARM_1
//   180,180,180,    // White
//   D_RGB_PINK_FADED_2
//   D_RGB_CYAN_FADED_4   
// };

// /**
//  * Keep 2023
//  * Introduction when I noticed a string without any green (during transition) looks great on outside tree
//  * */
// #ifndef D_PALETTE_CHRISTMAS_28_NAME_CTR
// #define D_PALETTE_CHRISTMAS_28_NAME_CTR        "XMAS No Green|Christmas 2022 - DiningRoom Tree|Christmas 28"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_25_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_28_NAME_CTR)        D_PALETTE_CHRISTMAS_28_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_28_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_28__DATA)
// { // R,G,B                
//   D_RGB_RED_FULL
//   D_RGB_YELLOW_WARM_3//D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL       
//   D_RGB_PINK_PASTEL_2 //D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_PURPLE_BLUE
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
// };

// /**
//  *  New for outside tree only, repeated colours so instead of grouping 100, I can do grouping 25
//  * New rotation of 25 with fade instead of g=1, should give a nice rotation of blending colours
//  * */
// #ifndef D_PALETTE_CHRISTMAS_29_NAME_CTR
// #define D_PALETTE_CHRISTMAS_29_NAME_CTR        "XMAS 29|Christmas 29|Christmas Grouped 4"   
// #endif
// // #define PM_PALETTE_CHRISTMAS_29_DESCRIPTION_CTR   "Mostly white white with some cold white" // new optional (for memory) descriptions
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_29_NAME_CTR)        D_PALETTE_CHRISTMAS_29_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_29_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_29__DATA)
// { // R,G,B                
//   D_RGB_RED_FULL  
//   D_RGB_RED_FULL  
//   D_RGB_RED_FULL  
//   D_RGB_RED_FULL
//   D_RGB_GREEN_FADED_3
//   D_RGB_GREEN_FADED_3
//   D_RGB_GREEN_FADED_3
//   D_RGB_GREEN_FADED_3
//   D_RGB_PINK_ALT_1
//   D_RGB_PINK_ALT_1
//   D_RGB_PINK_ALT_1
//   D_RGB_PINK_ALT_1
//   D_RGB_BLUE_FADED_3
//   D_RGB_BLUE_FADED_3
//   D_RGB_BLUE_FADED_3
//   D_RGB_BLUE_FADED_3
//   D_RGB_ORANGE_FULL      
//   D_RGB_ORANGE_FULL      
//   D_RGB_ORANGE_FULL      
//   D_RGB_ORANGE_FULL       
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_GREEN_PASTEL_FADED_1
//   D_RGB_CYAN_FADED_4
//   D_RGB_CYAN_FADED_4
//   D_RGB_CYAN_FADED_4
//   D_RGB_CYAN_FADED_4
//   D_RGB_PINK_ALT_2
//   D_RGB_PINK_ALT_2
//   D_RGB_PINK_ALT_2
//   D_RGB_PINK_ALT_2
//   D_RGB_RED_PASTEL_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_RED_PASTEL_1
//   D_RGB_PURPLE_BLUE
//   D_RGB_PURPLE_BLUE
//   D_RGB_PURPLE_BLUE
//   D_RGB_PURPLE_BLUE
//   D_RGB_ORANGE_WARM_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_ORANGE_WARM_1
//   D_RGB_YELLOW_WARM_2
//   D_RGB_YELLOW_WARM_2
//   D_RGB_YELLOW_WARM_2
//   D_RGB_YELLOW_WARM_2
// };


// /**
//  *  New for outside tree only, repeated colours so instead of grouping 100, I can do grouping 25
//  * New rotation of 25 with fade instead of g=1, should give a nice rotation of blending colours
//  * */
// #ifndef D_PALETTE_CHRISTMAS_30_NAME_CTR
// #define D_PALETTE_CHRISTMAS_30_NAME_CTR        "XMAS Golden|Christmas 30|Christmas Golden Yellow" // Yellow and slight gold (not orange)   
// #endif
// DEF_PGM_CTR  (PM_PALETTE_CHRISTMAS_30_NAME_CTR)        D_PALETTE_CHRISTMAS_30_NAME_CTR;
// #define        D_PALETTE_CHRISTMAS_30_ENCODING        (PALETTE_ENCODING_TYPE_RGB_NO_INDEX)    
// DEF_PGM_UINT8(PM_PALETTE_CHRISTMAS_30__DATA)
// { // R,G,B        
//   255,215,0, //gold  
//   252,94,3, //yellow-orange  
//   255,215,10,       
//   255,230,0, //gold   
//   218,125,17, //goldenrod
//   252,94,3, //yellow-orange
//   252,157,3, //
//   252,157,15, //
//   255,223,0, //goldern yellow
//   252,84,3, //yellow-orange
// };