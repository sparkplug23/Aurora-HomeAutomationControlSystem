
; ;;; HOME INSTALLED temporarily only for me ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
;     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
;     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 



[env:wht_br_but]
extends = env:whitehall_82
build_flags = ${common.build_flags} -D DEVICE_BEDROOM_CONTROLLER_BUTTONS_01 -w
                    -D USE_USER_MICHAEL
; upload_protocol = espota
; extra_scripts             =   gzip_fw.py
; upload_port = 192.168.0.46
; monitor_filters = esp8266_exception_decoder
; build_type = debug
upload_port = COM8

[env:wht_black_stand]
extends = env:whitehall_32
build_unflags               = ${esp32_defaults.build_unflags}
build_flags                 = ${esp32_defaults.build_flags}
                                    -D DEVICE_BLACK_STAND_LIGHT
                                    -w                                     
lib_extra_dirs          = ${common32.lib_extra_dirs}              
                          lib/libesp32
                          lib/lib_basic
                          lib/lib_network
                          lib/lib_display
                          lib/lib_onewire2023 
                          lib/lib_sensor
                          lib/libg_neopixel
upload_protocol = espota
upload_port = 192.168.0.50
; upload_port = testbed_animation_segment_01
; upload_port = COM30
; monitor_filters = esp8266_exception_decoder
; build_type = debug


[env:wht_rgbdesk]
extends = env:whitehall_82
build_flags = ${common.build_flags} -D DEVICE_RGBDESK -w
                    -D USE_USER_MICHAEL
upload_protocol = espota
extra_scripts             =   gzip_fw.py
upload_port = 192.168.0.151
; monitor_filters = esp8266_exception_decoder
; build_type = debug
; upload_port = COM9


[env:wht_bedroom_bedlight]
extends = env:whitehall_82
build_flags = ${common.build_flags} -D DEVICE_BEDROOM_BEDLIGHT -w
                    -D USE_USER_MICHAEL
upload_protocol = espota
extra_scripts             =   gzip_fw.py
upload_port = 192.168.0.57
; monitor_filters = esp8266_exception_decoder
; build_type = debug
; upload_port = COM9


[env:wht_computer_u25]
extends = env:whitehall_82
build_flags = ${common.build_flags} -D DEVICE_RGB_COMPUTER_SCREEN_DELL_U2515H -w
                    -D USE_USER_MICHAEL
upload_protocol = espota
extra_scripts             =   gzip_fw.py
upload_port = 192.168.0.202
; monitor_filters = esp8266_exception_decoder
; build_type = debug
; upload_port = COM9


[env:wht_computer_p32]
extends = env:whitehall_32
build_flags = ${common.build_flags} -D DEVICE_RGB_COMPUTER_SCREEN_DELL_P3222QE -w
                    -D USE_USER_MICHAEL    
lib_extra_dirs  = ${library.lib_extra_dirs}
                lib/libesp32
                lib/lib_basic
                lib/lib_wled32
                lib/lib_custom
                lib/libg_neopixel
upload_protocol = espota
; upload_port = 192.168.0.161
upload_port = rgb_computer_display_p32.local
; monitor_filters = esp8266_exception_decoder
; build_type = debug
; upload_port = COM19



[env:wht_bedr_wardrobe]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                -D DEVICE_H801_INSIDE_BEDROOM_WARDROBE -w
                                -D D_USER_MICHAEL
lib_extra_dirs              = ${library.lib_extra_dirs}
                              lib/libg_neopixel
upload_protocol = espota
extra_scripts             = gzip_fw.py
upload_port = h801_bedroom_wardrobe.local
; upload_port = 192.168.0.52
; upload_port=COM18
; monitor_filters = esp8266_exception_decoder
; build_type = debug


[env:wh_mbedroom_wardrobe]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                -D DEVICE_H801__MASTERBEDROOM_UPLIGHT -w
                                -D D_USER_MICHAEL
lib_extra_dirs              = ${library.lib_extra_dirs}
                              lib/libg_neopixel
upload_protocol = espota
extra_scripts             = gzip_fw.py
; upload_port = h801_sunlight_2
upload_port = 192.168.0.163
; upload_port=COM27
; monitor_filters = esp8266_exception_decoder
; build_type = debug




[env:wht_bedroom_desk]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                -D DEVICE_H801_BEDROOM_UNDERDESK -w
                                -D D_USER_MICHAEL
                                
lib_extra_dirs              = ${library.lib_extra_dirs}
                              lib/libO23_neopixel
                              lib/lib_custom
upload_protocol = espota
extra_scripts             = gzip_fw.py
upload_port = h801_bedroom_underdesk.local
; upload_port = 192.168.0.12
; upload_port=COM18
; monitor_filters = esp8266_exception_decoder
; build_type = debug

[env:dev_desksensor]
extends = env:whitehall_32
build_flags = ${common.build_flags} -D DEVICE_DESKSENSOR -w
                    -D USE_USER_MICHAEL            
                    -DUSE_LIGHTING_TEMPLATE__PALETTE_TESTING_METAL
                    ; -DCORE_DEBUG_LEVEL=5         
lib_extra_dirs  = ${library.lib_extra_dirs}
                
                lib/libesp32
                lib/lib_basic
                lib/lib_wled32
                lib/lib_custom
                lib/libg_neopixel
                
                lib/lib_basic
                lib/lib_network
                lib/lib_display
                lib/lib_onewire2023 
                lib/lib_sensor
                lib/lib_nextion_esp32_web
                lib/lib_async32
                lib/libesp32/network
                lib/lib_network_web
                lib/lib_i2c
                lib/lib_default
                lib/lib_energy
                lib/libO23_neopixel
                lib/lib_tinygsm

; upload_protocol = espota
; upload_port = 192.168.0.92
; upload_port = desksensor.local
; monitor_filters = esp32_exception_decoder
; build_type = debug
upload_port = COM27
;${common32.lib_extra_dirs}    



[env:tb_camera_sensor]
extends = env:whitehall_32
build_flags = ${common.build_flags} -D DEVICE_TESTBED_CAMERA_SENSOR_MODULE -w
                    -D USE_USER_MICHAEL            
                    ; -DCORE_DEBUG_LEVEL=5         
lib_extra_dirs  = lib/libesp32
                lib/lib_basic
                lib/lib_network
                lib/lib_display
                lib/lib_onewire2023 
                lib/lib_sensor
                lib/libg_neopixel
                lib/lib_nextion_esp32_web
upload_protocol = espota
upload_port = 192.168.0.165
; upload_port = desksensor.local
; monitor_filters = esp32_exception_decoder
; build_type = debug
; upload_port = COM22
;${common32.lib_extra_dirs}    



[env:wh_hvac_oil_heater]
extends = env:whitehall_32
build_unflags               = ${esp32_defaults.build_unflags}
build_flags                 = ${esp32_defaults.build_flags}
                                    -D DEVICE_HVAC_OIL_RADIATOR
                                    -w                                     
lib_extra_dirs          = ${common32.lib_extra_dirs}           
                          lib/libesp32
                          lib/lib_basic
                          lib/lib_network
                          lib/lib_display
                          lib/lib_onewire2023 
                          lib/lib_sensor
                          lib/libg_neopixel
                          lib/lib_energy
; upload_port = 192.168.0.109
upload_port = hvac_oil_radiator.local
upload_protocol = espota
; upload_port = COM17
; monitor_filters = esp32_exception_decoder
; build_type = debug



[env:wh_dr0]
extends = env:whitehall_32
build_flags = ${common.build_flags} -D DEVICE_DESKSENSOR_SLAVE_01 -w
                    -D USE_USER_MICHAEL            
                    ; -DCORE_DEBUG_LEVEL=5         
lib_extra_dirs  = lib/libesp32
                lib/lib_basic
                lib/lib_network
                lib/lib_display
                lib/lib_onewire2023 
                lib/lib_sensor
                lib/libg_neopixel
                ; lib/libg_neopixel
; upload_protocol = espota
; upload_port = 192.168.0.79
; upload_port = desksensor.local
monitor_filters = esp32_exception_decoder
build_type = debug
upload_port = COM5
;${common32.lib_extra_dirs}    
