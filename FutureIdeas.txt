D=done,N=Not done,P=partially working,NF near future, FF far future
Fix multiple repos "git push -f origin master"

#Idea 001 (v1+)
    ESP32 wifi support fully, with the same saving/SPIFFS etc 

#Idea 002 (v1+)
    ESP32 POE/ethernet

#Idea 003 (v<1)
    Night Mode = For lights with dimmers, optional lower settings during night hours

#Idea 004
    - New SModuleStatus for setting a module/class dynamically during run time

#Idea 005 (DONE)
    - Remove HeatingSensors and use the standard sensor drivers
    - Enable 2 pin DB18S20 inputs
    - Enable 4 DHTxx inputs

#Idea 006
    - Split animation/strip_size to allow the same 50 leds stored to be output 50*strings_connected times
        -- ie 50 animation size is required, and transmitted out N times (N being number of strings)

#Idea 007
    - Add new "WLED Animations" as led mode, or incorporate into "flasher" (do this, so mixer can be used)

#Idea 008
    - https://github.com/me-no-dev/ESPAsyncWebServer
    - Move network to use ESPAsyncWebServer (significant rewrite)

#Idea 009
    - https://github.com/Aircoookie/WLED/wiki/E1.31-DMX#e131

#Idea 010
    - Use relay module for heating
    - Use climate sensor modules for heating

#Idea 011
    - Convert presetlist in rgbanimator to use templates, to allow different colour map sizes for editable/static lists

#Idea 012
    - Add "reset user pallette" with optional selecting of copying a static palette
    
#Idea 013
    - Use flag to set that palette should random generate in pairs ie

        uint8_t colour_ids[] = {  
            pair_id1_lower, pair_id1_upper, 
            pair_id2_lower, pair_id2_upper,     
        }; 

        gives random(pair_id1_lower,pair_id1_upper) and therefore I can make random values of hue within a range, without including colour_ids
        eg greens and reds, 120:130, 0:10, ignoring 11:119

        equally, use the range of saturation AND brightness as guides for them as randoms

#Idea 014
    - make number generator, random, with skewness

#Idea 015
    - add saturation option on menu page that overrides output, as brightness does, and add optional flag to enable it/tick box

#Idea 016
    - add single pixel "flasher" animations, eg:
        - "flare" random single pixels go from current to max brightness with a short ramp up/down (<90% longer speed, >90% half speed ie iradium flare)
        - "twinkle" on off
        - "lighting" flashes of varying brightness that last a few seconds

#Idea 017
    - Create template based addlog to print any array out in a nice format, with (defaulted) option of vertical or horizontal
        AddLog_P_Arr(...., array_ptr,array_length,output_format = default_without_index, output_dir = default_horizontal)

#Idea 018
    - Specific Module Type (Car Sensor)
        - monitor 12v (7v-15v range)
        - canbus monitor
        - gps listening
        - sd card logging (logs gps values, uploading when network returns)
        - gsm network for remote checking

#Idea 019
    - webpage mixer controls will include a table/grouped mixer values that can be configured
        - flasher type (christmas animation)
        - palette 
        - duration
        - speed/rate
        - Global controls for on/off time for all mixer settings
        - add tick box options on rows (enabled, time controlled, random saturation)
        - or drop down menus (saturation as saved, random)

#Idea 020
    - Gradient rotate with "overscan" ie rainbow partial, rotate (or slider?) with inflated range (only show X% of gradient at any one time)
        - New slider animation, that moves the pixels back and forth without wraparound (this requires overscan first). ie 25-75% becomes new length, then move from 0-50 and 50-100.

#Idea 021
    - Dump as much crash data into rtcmemory before device restarts, after safe boot (10 seconds) send it via mqtt for logging. Eventually,
        send via http/ftp to a file server for logging

    sparkplugToday at 9:54 AM
    okay will try decode later, I have the hex values but I need a decoder formatted thing first with the right headers, remind me to make this automatic
    and to print via my http method now
    Can I can probe and get the exact crash log ready as a copy and paste http response, that would be awesome
    
#Idea 022
    - ADD FUNC_SENSOR_SEARCH that will search for new sensors and re-enable module if found

#Ides 023
    - Add lighting demonstration that cycles across every pattern/animation, for <user_defined> seconds each, with options to simply "end" (returning to previous resting mode) or
        stopping and using the current previewed animation as the new animation.

#Idea 024
    - Optional RGB_type as array to allow strings with different mappings to be used togehter
        [1,1,1,1,1,2,2,2] 1=RGB and 2=GRB etc 
        - probably {blocks,linear,follow_palette_style} for liveview type
        - track which pixels change user bit packed number, so I can limit webpage sending to just those

#Idea 025
    - Module tasker could have a nested tasker, grouping all mqtt, settings together. 
        - Tasker() ..... SubTasker(settings_function) ... wont work, functions inside switchcase

#Idea 026
    webserver pages need
        - scripts
            - minimal + modules
            drawing does tables and anything else, it must draw it all
        -css
            -minimal + modules
        onload, instead of fetch, use urls?

    load basic with added links
    ask for layout
    send data (layout and this are one, if I can send json with a value)

#Idea 027
    Make one group call that will append multiple responses, but also, a single call that builds using it
        - ie send palette, or, liveview, or, table, OR ALL TOGETHER

#Idea 028
    Make a class that is used to hold sensors, with ifdefs inside to give different sensor attributes (temp,pressure) ie my own "mAdafruit_Sensor.h"

#Idea 029
    https://www.kogan.com/au/buy/kogan-2l-cordless-smart-glass-kettle-2200w/?utm_source=google&utm_medium=product_listing_ads&gclid=Cj0KCQjwmdzzBRC7ARIsANdqRRnQCGESdjw8dfNiPzMVz2mIHPABqtB7gusV1gc8xrZEElhKzfPcbg0aAsWbEALw_wcB

#Idea 030
    Draw root "table" that includes unique names for rows and the number variable (ie send Temp/sensor name during draw and send data to that exact cell during data)

#Idea 31
    Energy Root Table will actually have its own table, drawn as rows as wide as sensors connected
                                                                                                ^^Energy^^
    Name/Phase      Voltage(V) Current(A) Apparent\Power(W) Reactive\Power(VA)  ^^Instantaneous    Hourly Average(kWh)     Daily Average(kWh)      Total^^
    Mains 
    Cooker
    Immersion

    actually do vertical and format like my thesis

                            ^^^^^^^ Channels/Phases ^^^^^^^^^^
    Name    Units        Mains  Cooker  Immersion   Dryer       Average Window
    Voltage (V)            0                                    Instantaneous
    Current (A)            0                                    Instantaneous
    ___
    ENERGY
    ___
    Hourly Average (kWh)   0                                    24 hours
    Daily Average          0                                    7 days

#Idea 32
    Add array that holds regions of temp ranges, eg
    {a,b,c,d}
    a<b = low colour
    b<c = med range
    c<d = high range
    if(climate.ptr->temperature<=25){

#Idea 33
    Inclusion of white component, test library
    https://github.com/jackjansen/NPBColorLib/blob/master/src/internal/RgbwFColor.h

#Idea 34
    Add function in support that autocapitalises the first letter of any words, at the start of the string or after a space eg "this message" => "This Message"

#Idea 35
    Yes, you can do this; and for a few its fine.
    DIB = Device Independent Bitmap = RgbColor encoded data strip. One for the Start stat, One for the end state, 
    one animation channel to apply the transition. They replace the animation state that is used in the example you 
    mention. The difference is that an animation channel requires tracking information for the time/progress, if all 
    the channels are running at the same progress, then you should merge them, if you need different progress then you 
    do need separate channels.

#Idea 36
    Add/create randomness to the progress of transitioning between pixels for a glimmer effect (probably only ideal for brightness changes)
    For maybe brightness case, a fast changing (instant) randomness to brightness is better? (with a larger map applied to all other pixels)
    ie 10 pixels total, flicker 2, have the effect on overall brightness applied to the other 8

#Idea 37
    Add range where scenes can be applied, ie only use last 4 pixels

#Idea 38
    Fade option added to notifications that ramps up and down for soft ON/OFF transitions

#Idea 39
    Add "EndOfLoop" function that allows for resseting of all module flags after they should have been handled aka "Finally"

#Idea 40    
    RGB = I need to create ONE auto-off mode/variables, that all share and the type of/mode off is records (not scene/preset... notif per pixel is okay)

#Idea 41
    Tweak scenes that use time_on, or mode_one_time_on? (maybe not)
    Enable bi-scene modes, including the mqtt for it
    This will be used first for landing light, brighter then dims to standby colour (ie dim)
    Same method can be used where scene 2 option is pixel brt off

#Idea 42
    Add additional time_on option that allows for automatic rgb leds off to be more gradual, default 1sec, optional parameter
    - Note: Make it so reseting time_on (of already set and RX new command) then do not force refresh on the leds

#Idea 43
    Add/fully support using relay driver with timed on periods that the heating can set directly eg On for X second, minutes, OR On until X time of day
    Auto Shutoff needs 
        - timelimit option (direct for lights than for heating relays)
        - set by seconds_on, minutes_on etc
        - pass DateTime (timeonly) for when it will shut off, 24 limit

#Idea 44
    Move Rate of change measurements for sensors into their own modules, but have ROC methods are extra build option for memory

#Idea 45
    Add that topbar turns red if connection of webpage has been lost, so its a js timeout

#Idea 46
    Add sizeof class to telemetry

#Idea 47
    Add version type "D0.67.0.1" as string to telemetry

#Idea 48
    additional tasker functions that allow "run once" timed events eg uptime==10s,1minute,10m,1hour 
    use to have logging greater at start, then decrease, also sleep turn on, reduce debug health/minimal rates etc

#Idea 49
    Optional extra for relay web buttons, a duplicate row for "boost" times +60,+60m, not =60, but +60, pressing
    the toggle will reset times to 0

#Idea 50
    Add flag to mqtt handler that allows overwrite and call for every mqtt to refresh once eg overwrite sendnow flag

#Idea 51
    Add a default "ifchanged" and "telemetry" for sensors and store in memory

#Idea 52
    Add a fucntion in support class that converts gpio number to c_str to allow exact names when needed eg 1="GPIO1" or "D5" for wemos etc (system/debug/pins mqtt)

#Idea 53
    Make the LWT offline dynamic, and update what it should be every 10 minutes on the broker (uptime, last reset reason)

#Idea 54
    Add row of mode toggles to main screen for rgb animations (presets|scenes|flasher)

#Idea 55
    rgbanimator "Presets" that change slow blends to be part of "flasher" as a mode, "slow glow" is the new name

#Idea 56
    Stop reseting scenes to not active, use flag instead

#Idea 57
    Function that returns a number from different profiles along a progress (maybe use Ease from rgb)

#Idea 58 
    Add center text for titles of buttons/sliders (p=left, q=right, c=center)

#Idea 59
    If a controller (eg heating) takes over control of a sensor, then disable the sensors own mqtt reporting as it is done via the controller

#Idea 60
    Add palette split number, to use certain hsbcolour patterns as part of scenes and another number how they should be displayed
    eg Sunrise palette = [red orange blue] can be seen as 3 colours, or 3 transitional states.. as a scene, from red, then orange, then blue 
            So pallete is sunrise with variable 3, to show it should be taken as 3 stages. 
            [red orange blue green] with 2 stages, means red/orange then blue/green should be used (whether its random, linear gradient)

#Idea 61
    Similar to 60, able to apply palettes/gradients to regions. I will need to remember pixel ranges, then apply palette differently.
    This will probably take a large rewrite/special function. Maybe to be done.

#Idea 62
    Ability to override and shift across a pallete, perhaps some special animation that squeezes a palette gradient. 
        eg. Sunrise that has deep reds/orange with deep blue, then over time expand the reds to be more of the overall palette ("sunrise effect as sun light takes over gradient")

#Idea 63
    Add mode called "flare" akin to solar flare that instead of twinkling, causes a slow ramp in brightness of random pixels with a quick burst in brightness to dim again

#Idea 64
    Add that all devices also listen to their macaddress with mqtt commands, so no matter the naming the device can still be targeted using their mac
    Also, have the device report online with IP address to this macadress topic   eg   "mac807D3A35D60D/status/LWT" -m "{LWT":"online","IP":..,"uptime":...}"

#Idea 65
    Fix how the three wifi networks are handled, currently not cycling them all

#Idea 66
    Add function that searcehs klist's arrays for delimeter count to see how many items are in the array

#Idea 67
    Completely remove arduinojson as part of the serializing method to reduce memory.
    Instead, write all sections into buffer directly, using multiple AddBuffer segment for json_level (ie split the newest mqtt way)

#Idea 68
    Move heating time scale into seconds, rather than minutes

#Idea 69
    Create new function caller like mqtt method, thats inside support class.
    So I can assign functions that can be called and executed. They will be self contained inside
    their respective classes, only allowing a handler to call by time, now, etc, Just calls the function lamda

#Idea 70
    Add console on root page as option, to left/right of main div, enable/disabled with tick option to show/hide in topbar
    Use same console div name, so the same code can send it

#Idea 71
    Add timeout in async lib to cancel and free memory if timeout is exceeded

#Idea 72
    Add overriding response from async send function if memory is too low, instead of trying to build webpages

#Idea 73
    Create buffer that will remember the last X(30?) reasons for boot using IDs and store in memory

#Idea 74
    Create mtime functions that take in weektime and datetime and return cstring
    - use IDs to get short/long time back (datatime, TIME_SHORT_ID)
    - also common names aka MM = months, ss = seconds etc hhmmssms==hour,minute,seconds,millis

#Idea 75
    Create operators that allow me to assign datetime/weektime etc to each other and convert them

#Idea 76
    Add lockout flag of large buffer, ie if async is using it, reject the use of it. After use, the flag MUST be cleared

#Idea 77
    Create an 8 bit map for each GPIO pin/module which shows what a pin can/cannot do, boot limitations, change on boot etc (maybe just a documentation intead for memory reasons?)

#Idea 78
    Create command list method, the ability to pass around a command as a number_id instead of a string
    Split the parsejson_Command to actually work out the command, then call another function which handles it. This will need the ability to pass complex commands (ctr or numbers etc)
    parsejson_Command(){
        if(json.thisarg)
            Execute_Command(uint16_t command_id, T value) where T is multiple datatypes with template, using auto eg set HUE
        if(json.anotherarg)
            Execute_Command(uint16_t command_id, T value) eg set SAT            
    }
    This allows me to then call mrgb->ExecuteCommand(command_id, value) OR Execute_Command(class_id, command_id, value)

    command_id and string key for it will need pairing

#Idea 79
    Follow on from #78
    webui commands will be "hue=360" which will assume scene_hue
    equally, "rgbanimator/set/scene"   "hue:360" forgo the "hue" and "{}" to make it easier to type in, also use :/=
    hue=360,sat=100,brightness=5
    hue{p}360{d}sat=100,brightness=5
    {p} is pairing delimeter, where ":", " " and "=" are valid
    {d} is multiple instructions delimeter, ","

#Idea 80
    Follow on from #78
    NOTE: It might be easier going the other way, creating the proper json instruction string (write to buffer) using webui command builder
    Use switch case to take webui small phrase and build proper instruction

    parseWeb_Command(){
        first directly pass topic/payload to be parsed across all modules (parsejson_Command), 
        if failed
            parse into WebCommand_Conversion which takes simple phrases, and builds the jsoncommand intended
    }

#Idea 81
    Splash telemetry on boot over serial

#Idea 82
    add array to webserver that holds get states (0=do nothing, 1= fetch once, 2=fetch repeated with timer)

#Idea 83
    linked list for url fetchers? {"new_url":"erase"} 
        erase deletes
        if not found, add it with ms timer, +ve repeated, -ve once

#Idea 84
    Make the slider background linear blend, or only two colours, either its own function js or albiliyt to use blbc

#Idea 85
    Enable auto switching between time of day scenes (day,evening and night)

#Idea 86
    Store uptime in memory and show in telemetry, show the LAST uptime before a reset happened ()

#Idea 87
    Create 1 shared memory array, for "device" names, where all relays, custom sensor names etc are stored into settings. 
    I can have local versions in each module, but ultimately pointer map to the shared large buffer of klist
    This array might be 400 is size, but must hold everything. Another array will hold a unique number for that sensor, also 
    held in saved settings. Probably use uint16_t eg high byte = module number, and low byte = sensor id for referencing the klist
    Use an array to hold if address index is used, and stored the id within it
    
#Idea 88
    Add flag that enables/requires parsesub_scene commands to switch mode automatically, or, instead only updates values but remains in current mode
    Ie, if I set a scene colour but flasher is enabled, it can stay or automatically switch

#Idea 89
    Add checking if class pointer is not null BEFORE calling within tasker as
    prep for leaving multiple classes at built time but only create during runtime if needed
    eg ws2812 class will be on device, but only enabled (class instance) if needed

#Idea 90
    Add notification check, if the mode was on another mode, AFTER notification flash is complete then return to previous mode (eg scenes)

#Idea 91
    Send packet to LWT with uptime and useful info PRIOR to OTA start in case it fails as useful debug

#Idea 92
    Create a short global buffer that is used when none is provided to streamline code
        if(buffer == nullptr) { global_buffer and return it for use inline}

#Idea 93
    Add another "Upsecs" aka "StableUpSeconds" which counts, but is stored in memory and is only reset on boot when reason was crash
    
#Idea 94
    Add that commands are non case senstitive, and also checked without spacing ie 
    #define D_JSON_TIMEZONE "TimeZone" possible values are:
        - "time zone"
        - "timezone" ie automatically remove all spacing

#Idea 95
    The alternative way, which I may do myself now I think about it long term, is add a argument to addlog that passes the log type "WIF" etc as an enum list, thats only a single byte usage. Could probably save 4000 bytes of progmem memory, but at this point progmem is so big its just not needed.

#Idea 96
    Fix to allow progmem URLS with webserver->on(url)

#Idea 97
    Enable light groups from tasmota

#Idea 98
    Create function that allows immediate call and execution of any mqtt struct handler at the exact position (ie not waiting for fSend now)

#99-101?? lost??

#102
    Security lights will either be controlled remotely (the motion to light controls via mqtt) or/and, have a fall back, if no wifi/mqtt, then use internal time of day to decide when light should be on. If no time, then always turn on.

#103
    Enable IP address flash over builtin led. After succesfull wifi connection flash..
    2 fast, 2 slow, 2 fast, 2 slow.... wait 5, then pulse out the IP. 
    192.168.1.123 = 1 second on then off, wait 2...    1 second flashed 2 times, wait 2
    1 second flash (2 second period = a number) and 2 second pause between numbers
    Repeat this sequence twice

#Idea 104
    Make a class wrap that allows checks on a sensor value, setting limits and variable/static tolerances that can be checked for validity. 

//Idea 105
    Add into system settings page, and use the settings struct for each module and include tick boxes or number boxes to configure

//#106
    Add percentage of water tank full, ie 100% full is average of all water sensors is 45 or above. 
    Shower with immersion, would look like probably 25%... while bath would be near 100%+ (map with no constrain)

#Idea 107
    Increase transition timebase to allow for up to hour long transition (ie sunset slow turn on)

#Idea 108
    "and to have them transition from a cooler white to warmer white later in the evening" - av

#Idea 109
    Adding a "LinearBlend" animation that uses X pixels repeated on a string, but then blends them (e.g., 10 red, 10 green, 10 blue.... but red/green linearblend together, green/blue linearblend together)

    I might do this later as a standalone animation like the other ones
    When you think about it, red/green/blue at equal distances on the string
    linearblended completely, is... a rainbow lol
    but I mean, using the palettes to generate those colours, but then not blending completely, so it has chunks of solid colours with then blended colour too
    will look best on larger strings
    the amount of blend between pixels, I can make as a percentage ratio (100% equal full linear blend, 50% with 10 red and 10 green, only the 5 green/red nearest blend)
    by making that ratio change, as an animation, it could be a cool pulsing effect
    and then.... I could linear blend the colour as saturated.... or brightness changed too

#Idea 110
    Add devicename on boot message