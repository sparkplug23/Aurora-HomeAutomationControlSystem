
[build_envs]
; *** Uncomment one of the lines below to build/upload only one environment
default_envs = 
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Direct Groups
    ; tasmota32-minimal
    ; esp_8266_com3_debug
    ; esp_8266_com_manual
    ; esp_8266_com3
    ; esp_8266_com5
;    esp_8266_com6
    ;esp_8266_com7
    ; esp_8266_com8
    ; esp_8266_com10
    ; esp_8266_com14
    ;esp_8266_com18
    ;esp_8266_com19
    ; esp_8266_com20
    ;esp_8266_manual_OTA_IP
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Lighting Group

    ; BETA testers
    ;esp_8266_rgbroof
    ; esp_8266_rgbdell
    ;esp_8266_rgbdesk
    ; esp_8266_rgbbedlight
    ;esp_8266_rgbbedlight_test
    esp_8266_rgbmicro2
    ; esp_8266_rgbmicro4
    ; esp_8266_rgboutsidetree
    ; esp_32_rgboutsidetree
    ; esp_8266_rgbbackdoorwreath
    ; esp_8266_rgbhallwaytree
    ; esp_8266_rgbbedroomfloor
    ; esp_8266_h801_tester


    ; esp_8266_rgbcrystal1
    ; esp_8266_rgbcrystal2
    ; esp_8266_rgbshelf
    ; esp_8266_rgbmicro1
    ; esp_8266_rgbmicro3
    ; esp_8266_desklight
    ; esp_8266_rgbcooker
    ; esp_8266_rgbfridge
    ; esp_8266_rgbutility
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Sensor Group
    ; esp_8266_masterbedroomsensor
    ; esp_8266_atticsensor
    ; esp_8266_kitchensensor
    ; esp_8266_utilitysensor
    ;esp_8266_ensuitesensor
    ; esp_8266_livingroomsensor
    ; esp_8266_bedroomsensor
    ; esp_8266_immersionsensor
    ; esp_8266_nodemcu_tester

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Energy Group
;   esp_8266_consumerunit
;   esp_8266_pzem_tester
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Display Group
    ;esp_8266_kitchenpanel
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Custom Group
    ; esp_8266_doorbellwallchime
    ; esp_8266_landingpanel
    ; esp_8266_heating
    ;  esp_8266_oilfurnace
    ; esp_8266_garagelight
    ; esp_8266_garagelight2
    ; esp_8266_sidedoorlight
    ; esp_8266_shelly1_tester
    ; esp_8266_radiatorfan
    ; esp_8266_bedroomblinds
    ; esp_8266_blackdoorbell
    ; esp_8266_floorfan1
    ; esp_8266_gazebcon
    ; esp_8266_deskfan
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Sonoff Testing Group
    ;esp_8266_sonoffbasictester
    ; esp_8266_whitefan1
    ; esp_8266_dresserlight
    ; esp_8266_bedside_lamp1
    ; esp_8266_extractorfan
    ;  esp_8266_extention1
    ;esp_8266_candlewarmer
    ; esp_8266_hallwaymirror
    ; esp_8266_silverlamp1
    ; esp_8266_silverlamp2
    ; esp_8266_kitchenlight1
    ; esp_8266_kitchenlight2
    ; esp_8266_kitchenlight3
    ; esp_8266_kitchenlight4
    ; esp_8266_ceilingfan

[platformio]
description = My Provide ESP8266 / ESP32 based devices with Web, MQTT and OTA firmware
src_dir = HomeControlSystem
build_dir = .pioenvs
build_cache_dir = .cache
extra_configs = platformio_env_8266.ini
                platformio_tasmota32.ini
                platformio_tasmota_env32.ini
default_envs =  ${build_envs.default_envs}


[common]
framework                 = arduino
board                     = esp12e
board_build.flash_mode    = dout
board_build.ldscript      = eagle.flash.1m.ld

; platform                  = ${core_active.platform}
; build_flags               = ${core_active.build_flags}

platform                  = ${core_active.platform}
; platform_packages         = ${core.platform_packages}
build_unflags             = ${core_active.build_unflags}
build_flags               = ${core_active.build_flags}

board_build.f_cpu         = 80000000L
board_build.f_flash       = 40000000L
monitor_speed             = 115200
upload_speed              = 115200
; *** Upload Serial reset method for Wemos and NodeMCU
upload_resetmethod        = nodemcu
upload_port               = COM3
; upload_port               = 192.168.1.67
extra_scripts             = ${scripts_defaults.extra_scripts}
lib_ldf_mode              = chain+  
shared_libdeps_dir        = lib
lib_extra_dirs            = 
                            lib/libesp8266/network 
                            lib/lib_lighting         
                            ; lib/lib_basic           
                            ; lib/lib_phaseout           
;                             lib/lib_i2c
;                             lib/lib_display
;                             lib/lib_ssl
;                             lib/lib_audio
;                             lib/lib_rf
;                             lib/lib_div

[scripts_defaults]
extra_scripts             = pio/strip-floats.py
                            gzip_fw.py
                            ;pio/name-firmware.py
                            ;pio/gzip-firmware.py
                            ;pio/override_copy.py

[esp_defaults]
; *** remove undesired all warnings
build_unflags             = -Wall
                            -Wdeprecated-declarations
build_flags               = -Wno-deprecated-declarations
                            ; -D_IR_ENABLE_DEFAULT_=false
                            ; -DDECODE_HASH=true -DDECODE_NEC=true -DSEND_NEC=true
                            ; -DDECODE_RC5=true -DSEND_RC5=true -DDECODE_RC6=true -DSEND_RC6=true
; new mechanism to set the IRremoteESP8266 supported protocols: none except HASH, NEC, RC5, RC6
; *********************************************************************
; *** Use custom settings from file user_config_override.h
                            ;-DUSE_CONFIG_OVERRIDE
; *********************************************************************


[esp82xx_defaults]
build_flags               = -Wl,-Map,firmware.map
                            -D NDEBUG
                            -mtarget-align
                            -DFP_IN_IROM
                            -DBEARSSL_SSL_BASIC
                            ; NONOSDK22x_190703 = 2.2.2-dev(38a443e)
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
                            ; lwIP 2 - Higher Bandwidth no Features
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
                            ; VTABLES in Flash
                            -DVTABLES_IN_FLASH                         
                            ; remove the 4-bytes alignment for PSTR()
                            ; -DPSTR_ALIGN=1
                            ; restrict to minimal mime-types
                            -DMIMETYPE_MINIMAL
                            ;-std=c++17
                           
; [irremoteesp_full]
; build_flags               = -DUSE_IR_REMOTE_FULL
;                             -U_IR_ENABLE_DEFAULT_
;                             -DDECODE_PRONTO=false -DSEND_PRONTO=false


[core]
; *** Esp8266 Tasmota modified Arduino core based on core 2.7.4
platform                  = espressif8266@2.6.1
; platform                  = espressif8266@2.6.2
; platform_packages         = framework-arduinoespressif8266@https://github.com/tasmota/Arduino/releases/download/2.7.4.5/esp8266-2.7.4.5.zip
;                             platformio/tool-esptool @ 1.413.0
build_unflags             = ${esp_defaults.build_unflags}
build_flags               = ${esp82xx_defaults.build_flags}




; [common]
; framework                 = arduino
; ;board                     = esp01_1m
; ; board                     = esp12e
; board_build.flash_mode    = dout

; ; *********************************************************************
; ; *** Uncomment, by deleting ";" in line below, to use custom settings from file user_config_override.h 
; ;                            -DUSE_CONFIG_OVERRIDE
; ;
; ; *** alternatively can be done in: platformio_override.ini
; ; *** See example: platformio_override_sample.ini
; ; *********************************************************************

; ; *** Fix espressif8266@1.7.0 induced undesired all warnings
; build_unflags             = -Wall
;                             -Wdeprecated-declarations

; board_build.f_cpu         = 80000000L
; monitor_speed             = 115200
; upload_speed              = 115200
; ; *** Upload Serial reset method for Wemos and NodeMCU
; upload_resetmethod        = nodemcu
; upload_port               = COM7
; extra_scripts             = ${scripts_defaults.extra_scripts}
; ; lib_extra_dirs            = C:\Users\micha\OneDrive\Desktop\ESP Async WebServer_ID306

; ; [scripts_defaults]
; ; extra_scripts             = pio/strip-floats.py
;                             ;pio/name-firmware.py

; [esp82xx_defaults]
; build_flags               = -Wl,-Map,firmware.map
;                             -Wno-deprecated-declarations
;                             -D NDEBUG
;                             -mtarget-align
;                             -DFP_IN_IROM
;                             -DBEARSSL_SSL_BASIC
;                             ; NONOSDK22x_190703 = 2.2.2-dev(38a443e)
;                             -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
;                             ; lwIP 2 - Higher Bandwidth no Features
;                             -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
;                             ; VTABLES in Flash
;                             -DVTABLES_IN_FLASH                         
;                             ; remove the 4-bytes alignment for PSTR()
;                             ;-DPSTR_ALIGN=1
;                             ; restrict to minimal mime-types
;                             -DMIMETYPE_MINIMAL
;                             ;-std=c++17
; ;build_unflags =
;  ;   -std=gnu++11
                            
; ;-mtarget-align
;                             ; -Wl,-Map,firmware.map
;                             ; ;-Wenum-compare
;                             ; -Wall

[core_active]
; platform                  = ${core_2_6_1.platform}
; build_flags               = ${core_2_6_1.build_flags}
platform                  = ${core_2_6_1_4m.platform}
build_flags               = ${core_2_6_1_4m.build_flags}
build_unflags             = ${esp_defaults.build_unflags}


[core_2_6_1]
; *** Esp8266 core for Arduino version 2.6.1
; platform                  = espressif8266
; platform_packages =
;     framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git
platform                  = espressif8266@2.6.1
;https://github.com/platformio/platform-espressif8266.git
;espressif8266@2.5.1
;https://github.com/platformio/platform-espressif8266.git
;espressif8266@2.5.1
;espressif8266@2.3.0
;espressif8266@2.5.1
;espressif8266@2.3.0
board_build.ldscript      = eagle.flash.1m.ld
build_flags               = ${esp82xx_defaults.build_flags}
                            ; -Wl,-Teagle.flash.1m.ld
                            ;-DBEARSSL_SSL_BASIC ;removed
                            ;-Wl,-Teagle.flash.1m.ld
; NONOSDK22x_190703 = 2.2.2-dev(38a443e)
                            ;-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703;removed
; lwIP 2 - Higher Bandwidth no Features
                            ;-DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; VTABLES in Flash
                            ;-DVTABLES_IN_FLASH
                            ; -DPGM_READ_UNALIGNED=0
; No exception code in firmware
                            -fno-exceptions
                            -lstdc++
                            ; remove the 4-bytes alignment for PSTR()
                            ;-DPSTR_ALIGN=1
                            ; restrict to minimal mime-types
                            -DMIMETYPE_MINIMAL
                            

[core_2_6_1_4m]
; *** Esp8266 core for Arduino version 2.6.1
; platform                  = espressif8266
; platform_packages =
;     framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git
platform                  = espressif8266@2.6.1
;https://github.com/platformio/platform-espressif8266.git
;espressif8266@2.5.1
;https://github.com/platformio/platform-espressif8266.git
;espressif8266@2.5.1
;espressif8266@2.3.0
;espressif8266@2.5.1
;espressif8266@2.3.0
extra_scripts = gzip_fw.py
board_build.ldscript      = eagle.flash.4m.ld
build_flags               = ${esp82xx_defaults.build_flags}
                            ; -Wl,-Teagle.flash.4m.ld
                            ;-DBEARSSL_SSL_BASIC ;removed
                            ;-Wl,-Teagle.flash.1m.ld
; NONOSDK22x_190703 = 2.2.2-dev(38a443e)
                            ;-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703;removed
; lwIP 2 - Higher Bandwidth no Features
                            ;-DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; VTABLES in Flash
                            ;-DVTABLES_IN_FLASH
                            ; -DPGM_READ_UNALIGNED=0
; No exception code in firmware
                            -fno-exceptions
                            -lstdc++
                            ; remove the 4-bytes alignment for PSTR()
                            ;-DPSTR_ALIGN=1
                            ; restrict to minimal mime-types
                            -DMIMETYPE_MINIMAL
                            

[core_2_6_1_1m]
; *** Esp8266 core for Arduino version 2.6.1
platform                  = espressif8266@2.6.1
board_build.ldscript      = eagle.flash.1m.ld
build_flags               = ${esp82xx_defaults.build_flags}
                            ;-Wl,-Teagle.flash.1m.ld
                            ; -DBEARSSL_SSL_BASIC
                            ; -Wl,-Teagle.flash.1m.ld
; NONOSDK22x_190703 = 2.2.2-dev(38a443e)
                            ; -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
; lwIP 2 - Higher Bandwidth no Features
                            ; -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; VTABLES in Flash
                            ; -DVTABLES_IN_FLASH
; No exception code in firmware
                            -fno-exceptions
                            -lstdc++

; ; // PSTR() macro modified to start on a 32-bit boundary.  This adds on average
; ; // 1.5 bytes/string, but in return memcpy_P and strcpy_P will work 4~8x faster
; ; #ifndef PSTR
; ; #ifndef PSTR_ALIGN
; ;   // PSTR() macro starts by default on a 32-bit boundary.  This adds on average
; ;   // 1.5 bytes/string, but in return memcpy_P and strcpy_P will work 4~8x faster
; ;   // Allow users to override the alignment with PSTR_ALIGN
; ;   #define PSTR_ALIGN 4
; ; #endif
; ; #ifndef PSTRN
; ;     // Multi-alignment variant of PSTR, n controls the alignment and should typically be 1 or 4
; ;     // Adapted from AVR-specific code at https://forum.arduino.cc/index.php?topic=194603.0
; ;     // Uses C attribute section instead of ASM block to allow for C language string concatenation ("x" "y" === "xy")
; ;     #define PSTR(s) (__extension__({static const char __c[] __attribute__((__aligned__(4))) __attribute__((section( "\".irom0.pstr." __FILE__ "." __STRINGIZE(__LINE__) "."  __STRINGIZE(__COUNTER__) "\", \"aSM\", @progbits, 1 #"))) = (s); &__c[0];}))
; ;     #define PSTRN(s,n) (__extension__({static const char __c[] __attribute__((__aligned__(n))) __attribute__((section( "\".irom0.pstr." __FILE__ "." __STRINGIZE(__LINE__) "."  __STRINGIZE(__COUNTER__) "\", \"aSM\", @progbits, 1 #"))) = (s); &__c[0];}))
; ; #endif
; ; #ifndef PSTR
; ;   // PSTR() uses the default alignment defined by PSTR_ALIGN
; ;   #define PSTR(s) PSTRN(s,PSTR_ALIGN)
; ; #endif
; ; #ifndef PSTR4
; ;   // PSTR4() enforces 4-bytes alignment whatever the value of PSTR_ALIGN
; ;   // as required by functions like ets_strlen() or ets_memcpy()
; ;   #define PSTR4(s) PSTRN(s,4)
; ; #endif
