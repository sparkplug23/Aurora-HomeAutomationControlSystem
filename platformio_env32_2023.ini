; ***              ESP32 Tasmota version                 ***

[scripts_defaults_2023]
extra_scripts               = 
; pre:pio-tools/pre_source_dir.py
;                               pre:pio-tools/set_partition_table.py
;                               pre:pio-tools/override_copy.py
;                               post:pio-tools/strip-floats.py
[esp_defaults_2023]
extra_scripts               = 
; post:pio-tools/name-firmware.py
                            ;   post:pio-tools/gzip-firmware.py
                            ;   post:pio-tools/custom_target.py
;                              post:pio-tools/obj-dump.py
                              ${scripts_defaults_2023.extra_scripts}
build_flags               =
build_unflags               =

[common_2023]
platform                    = ${core.platform}
platform_packages           = ${core.platform_packages}
framework                   = arduino
board                       = esp8266_1M
board_build.filesystem      = littlefs
custom_unpack_dir           = unpacked_littlefs
build_unflags               = ${core.build_unflags}
build_flags                 = ${core.build_flags}
monitor_speed               = 115200
; *** Upload Serial reset method for Wemos and NodeMCU
upload_resetmethod          = nodemcu
extra_scripts               = ${esp_defaults_2023.extra_scripts}
lib_archive                 = no
lib_ldf_mode                = chain
lib_compat_mode             = strict
shared_libdeps_dir          = lib
lib_extra_dirs              =
                              lib/lib_basic
                              lib/lib_i2c
                              lib/lib_display
                              lib/lib_ssl
                              lib/lib_audio
                              lib/lib_rf
                              lib/lib_div


[esp32_defaults_2023]
build_unflags               = ${esp_defaults_2023.build_unflags}
                              -Wswitch-unreachable
                              -Wstringop-overflow
                              -Wincompatible-pointer-types
                              -Wnonnull-compare
                              -fexceptions
                              -fno-lto
                              -Wpointer-arith
build_flags                 = ${esp_defaults_2023.build_flags}
                              ; comment next line to disable IPv6 support
                              -DUSE_IPV6
                              -Wno-switch-unreachable
                              -Wno-stringop-overflow
                              -fno-exceptions
                              -flto
                              -DBUFFER_LENGTH=128
                              -DHTTP_UPLOAD_BUFLEN=2048
                              -DMQTT_MAX_PACKET_SIZE=1200
                              -Duint32=uint32_t
                              -Duint16=uint16_t
                              -Duint8=uint8_t
                              -Dsint8_t=int8_t
                              -Dsint32_t=int32_t
                              -Dsint16_t=int16_t
                              -Dmemcpy_P=memcpy
                              -Dmemcmp_P=memcmp
                              ;for TLS we can afford compiling for 4K RSA keys
                              -DUSE_4K_RSA
                              -I$PROJECT_DIR/include
                              -include "sdkconfig.h"
                              -include "esp32x_fixes.h"
                              ; wrappers for the crash-recorder
                              -Wl,--wrap=panicHandler -Wl,--wrap=xt_unhandled_exception
                              -Wl,--wrap=_Z11analogWritehi  ; `analogWrite(unsigned char, int)` use the Tasmota version of analogWrite for deeper integration and phase control
                              -Wl,--wrap=ledcReadFreq  ; `uint32_t ledcReadFreq(uint8_t chan)`
extra_scripts               = pre:pio-tools/add_c_flags.py
                              pre:pio-tools/gen-berry-structures.py
                              post:pio-tools/post_esp32.py
                              ${esp_defaults_2023.extra_scripts}

[core32_2023]
platform                    = https://github.com/tasmota/platform-espressif32/releases/download/2023.02.00/platform-espressif32.zip
platform_packages           =
build_unflags               = ${esp32_defaults_2023.build_unflags}
build_flags                 = ${esp32_defaults_2023.build_flags}

[env:tasmota32_base_2023]
framework               = ${common_2023.framework}
platform                = ${core32_2023.platform}
platform_packages       = ${core32_2023.platform_packages}
board_build.filesystem  = ${common_2023.board_build.filesystem}
custom_unpack_dir       = ${common_2023.custom_unpack_dir}
board                   = esp32dev
monitor_speed           = 115200
upload_resetmethod      = ${common_2023.upload_resetmethod}
extra_scripts           = ${esp32_defaults_2023.extra_scripts}
build_unflags           = ${core32_2023.build_unflags}
build_flags             = ${core32_2023.build_flags}
lib_ldf_mode            = ${common_2023.lib_ldf_mode}
lib_compat_mode         = ${common_2023.lib_compat_mode}
lib_extra_dirs          = ${common_2023.lib_extra_dirs}
                          lib/libesp32
                          lib/libesp32_lvgl
                          lib/libesp32_div
                          lib/libesp32_eink
                          lib/libesp32_audio
lib_ignore              =
                          HTTPUpdateServer
                          ESP RainMaker
                          WiFiProv
                          USB
                          SPIFFS
                          ESP32 Azure IoT Arduino
                          ESP32 Async UDP
                          ESP32 BLE Arduino
;                          SimpleBLE
                          NetBIOS
                          ESP32
                          Preferences
                          BluetoothSerial
; Disable next if you want to use ArduinoOTA in Tasmota32 (default disabled)
                          ArduinoOTA
; Add files to Filesystem for all env (global). Remove no files entry and add add a line with the file to include
; Example for adding the Partition Manager
; custom_files_upload =
; tasmota/berry/modules/Partition_Manager.tapp
custom_files_upload     = no_files



[env:tasmota32_2023]
extends                 = env:tasmota32_base_2023
build_flags             = ${env:tasmota32_base_2023.build_flags}


