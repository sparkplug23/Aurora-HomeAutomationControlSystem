#pragma once

#include "2_CoreSystem/mGlobalMacros.h"
#include "2_CoreSystem/Languages/mLanguageDefault.h"

//move functions into taskermanager
enum XsnsFunctions {
  // Init stuff (in importance of boot)
  
  // FUNC_CHECK_POINTERS, //phased out
  FUNC_TEMPLATE_MODULE_LOAD,  // Read progmem configs if needed, read settings configuration
  FUNC_SETTINGS_DEFAULT,   // Use defaults in code
  FUNC_SETTINGS_OVERWRITE_SAVED_TO_DEFAULT,   // Use defaults in code
  FUNC_POINTER_INIT, // Any pointers to buffers, anything not set in this (unset nullptr) must be protected 
  
  
//   FUNC_MODULE_INIT,  // Read progmem configs if needed, read settings configuration
// "FUNC_MODULE_INIT" is phasing out, as its going to be included within PRE_INIT, which is furthermore going to be INIT_PINS

// "PRE_INIT" should be changed to PIN_INIT, and "MODULE_POINTER" should be possibly removed as its either PIN_INIT or INIT
  FUNC_PRE_INIT,     // Configure sub modules and classes as needed
  
  
  FUNC_INIT,         // Actually complete init, read sensors, enable modules fully etc
  FUNC_POST_INIT,    // similar to FUNC_CONFIGURE_MODULES_FOR_DEVICE, will run immediately after init
  FUNC_FUNCTION_LAMBDA_INIT,
  FUNC_SETTINGS_PRELOAD_DEFAULT_IN_MODULES,   // Use defaults in code
  FUNC_SETTINGS_LOAD_VALUES_INTO_MODULE, // Load values from settings struct and overwrite module values
  FUNC_CONFIGURE_MODULES_FOR_DEVICE, // Configure any sensors that are needed for controllers, to the required settings
  FUNC_MQTT_HANDLERS_INIT,
  // FUNC_MQTT_INIT,
  
  FUNC_TEMPLATE_DEVICE_LOAD,  // Read progmem configs if needed, read settings configuration
  FUNC_TEMPLATE_DEVICE_EXECUTE_LOAD, // This is called from the above function, used to parse the object json
  
  // New trigger events which only modules to react to changes "triggers" from other modules or external sources
  FUNC_TRIGGER_EVENT_BUTTON_PRESSED,
  // FUNC_TRIGGER_
  
  
  FUNC_ON_BOOT_COMPLETE, //also used as boot percentage progress divisor : Reaches end of setup
// END OF BOOT SECTION 
  FUNC_ON_BOOT_SUCCESSFUL, //should be triggered once after device is considered stable

  // Configure sensors and drivers for device
  // Looping trigger times
  FUNC_LOOP, FUNC_EVERY_50_MSECOND, FUNC_EVERY_100_MSECOND, FUNC_EVERY_250_MSECOND, 
  FUNC_EVERY_SECOND, FUNC_EVERY_SECOND_TP0MS_WINDOW, FUNC_EVERY_SECOND_TP250MS_WINDOW, FUNC_EVERY_SECOND_TP500MS_WINDOW, FUNC_EVERY_SECOND_TP750MS_WINDOW, // All run only once a second, but with delays to spread out tasks which occur at that time cycle
  FUNC_EVERY_FIVE_SECOND, //Used mainly as debugging
  FUNC_EVERY_FIVE_MINUTE,
  FUNC_EVERY_MINUTE, FUNC_EVERY_HOUR, FUNC_EVERY_MIDNIGHT, FUNC_EVERY_MIDDAY,
  // Run once from restart/uptime
  FUNC_UPTIME_10_SECONDS, //FUNC_ON_BOOT_SUCCESSFUL same time slot
  FUNC_UPTIME_1_MINUTES,
  FUNC_UPTIME_10_MINUTES,
  FUNC_UPTIME_60_MINUTES,
  // Exact minutes to work aka time cron
  // FUNC_AT_TIME_1_MINUTE,
  // Welcome message to show on boot after X seconds with config
  // FUNC_RESTART_SPLASH_INFORMATION, //have flag that shows level of information AND make this an ifdef as a debug option
  
  // FUNC_PREP_BEFORE_TELEPERIOD, 
  FUNC_JSON_APPEND, 
  
  // Saving/EEPROM related
  FUNC_SAVE_BEFORE_RESTART, //phase out
  
  FUNC_SETTINGS_SAVE_VALUES_FROM_MODULE, // Save internal module values to global settings struct, prior to saving to memory

  // New call functio similar to mqtt method, called from class loop (checked in support)
  FUNC_FUNCTION_LAMBDA_LOOP,

  // System/Status message
  FUNC_BOOT_MESSAGE, //at 10 seconds, show how the function is configured

  //Light commands
  // Commands
  // FUNC_COMMAND, 
  // FUNC_COMMAND_SENSOR, 
  // FUNC_COMMAND_DRIVER, 
  // FUNC_JSON_COMMAND, 
  // FUNC_JSON_COMMAND_OBJECT, 
  // FUNC_JSON_COMMAND_OBJECT_WITH_TOPIC,  //ie check for the topic (in the future use module name are set/<moduclename>)
  FUNC_JSON_COMMAND_CHECK_TOPIC_ID,
  FUNC_JSON_COMMAND_ID,  //ie check for the topic (in the future use module name are set/<moduclename>)
  // FUNC_JSON_COMMAND_START_PARSER_ID,
  // Wifi 
  FUNC_WIFI_CONNECTED, FUNC_WIFI_DISCONNECTED,
  // Mqtt
  FUNC_MQTT_SUBSCRIBE, FUNC_MQTT_CONNECTED, FUNC_MQTT_DISCONNECTED, FUNC_MQTT_COMMAND, FUNC_MQTT_SENDER,
  FUNC_MQTT_HANDLERS_RESET, FUNC_MQTT_HANDLERS_REFRESH_TELEPERIOD,
  FUNC_MQTT_CHECK_REDUNCTION_LEVEL, 
  FUNC_MQTT_DATA_ID,//
  // 

  // Events (new internal triggers, if something happens trigger another... this will become rules)
  // Ie if this event below happens, then have another ID which is called to run the triggered event
  FUNC_EVENT_MOTION_STARTED_ID,
  FUNC_EVENT_MOTION_ENDED_ID,


  // Energy
  FUNC_ENERGY_RESET,
  // Calls to run drivers when sensors change rather than waiting on loop
  FUNC_SENSOR_UPDATED,
  //
  FUNC_STATUS_MESSAGE_APPEND, FUNC_JSON_HARDWARE_APPEND, // Messages
  FUNC_SET_CHANNELS, 
  // Webpage
  FUNC_WEB_ADD_MAIN_BUTTON, 
  FUNC_WEB_ADD_BUTTON, 
  FUNC_WEB_ADD_BUTTON_SYSTEM_SETTINGS, //system settings 
  FUNC_WEB_ADD_HANDLER, //root page

  FUNC_WEB_ROOT_SEND_STYLE, // Send any style for root page
  FUNC_WEB_ROOT_SEND_SCRIPT,  
  FUNC_WEB_ROOT_SCRIPT_JSON_FETCH_MODULEPARSING, 
  FUNC_WEB_ROOT_SEND_BODY,   // send once on load 
  FUNC_WEB_ROOT_SEND_STATUS,     //the tas way
  FUNC_WEB_ADD_ROOT_SHOWS,

  FUNC_WEB_ADD_JSON_FETCH_RESULT, // As part of fetch
  FUNC_WEB_ADD_JSON_DATA_FETCH_URL, // Adding urls that will be requested for as part of jsonparse
  FUNC_WEB_ADD_ROOT_TABLE_ROWS,
  FUNC_WEB_ADD_ROOT_MODULE_TABLE_CONTAINER,

  FUNC_WEB_ADD_ROOT_SCRIPT,
  FUNC_WEB_ADD_ROOT_STYLE,  

  // FUNC_WEB_APPEND_LOADTIME_ROOT_URLS,
  // FUNC_WEB_APPEND_LOADTIME_ROOT_RATES,
  FUNC_WEB_APPEND_RUNTIME_ROOT_URLS,
  // FUNC_WEB_APPEND_RUNTIME_ROOT_RATES,
  
  FUNC_WEB_APPEND_ROOT_STATUS_TABLE_IFCHANGED, //send table data
  FUNC_WEB_APPEND_ROOT_STATUS_TABLE_FORCED,
  FUNC_WEB_APPEND_ROOT_ADD_MAIN_BUTTONS,
  FUNC_WEB_APPEND_ROOT_BUTTONS,

  FUNC_WEB_PAGEINFORMATION_SEND_MODULE, //send parts of page info

  // parital sub functions that need to be address later by special "interface tasker"
  FUNC_WEB_RESPOND_LIGHT_LIVEVIEW_JSON, //reply with liveview json data "WEB_RESPOND"=func group, "LIGHT"=interface, LIVEVIEW_JSON=type


  FUNC_WEB_COMMAND,    
  // FUNC_WEB_SHOW_PARAMETERS,   PHASED OUT
  // FUNC_WEB_SHOW_PARAMETERS2, 
  FUNC_WEB_SYSTEM_INFO,  //WEBSERVER

  // Debuging functions
  FUNC_DEBUG_CONFIGURE,

  /**
   * Group of "Events" functions, which are called when sections of the code execute
   * */
  FUNC_EVENT_INPUT_STATE_CHANGED_ID,
  FUNC_EVENT_SET_POWER_ID,
  FUNC_EVENT_SET_SPEED_ID,

  
  FUNC_SET_POWER, FUNC_SET_DEVICE_POWER, FUNC_SHOW_SENSOR,
  FUNC_RULES_PROCESS, FUNC_SERIAL, FUNC_FREE_MEM, FUNC_BUTTON_PRESSED,
  FUNC_SET_POWER_ON_ID,
  FUNC_SET_POWER_OFF_ID,

  FUNC_LIGHT_POWER_ON,
  FUNC_LIGHT_POWER_OFF,
  FUNC_LIGHT_UPDATE_OUTPUT,


  FUNC_FINALLY_END_OF_LOOP // Ran at the end of each loop, used to reset flags that should have been handled eg motion
};

#ifdef ENABLE_DEBUG_FUNCTION_NAMES

DEFINE_PGM_CTR(PM_FUNC_POINTER_INIT_CTR)                            D_FUNC_POINTER_INIT_CTR;
DEFINE_PGM_CTR(PM_FUNC_TEMPLATE_LOAD_CTR)                           D_FUNC_TEMPLATE_LOAD_CTR;
// DEFINE_PGM_CTR(PM_FUNC_MODULE_INIT_CTR)                             D_FUNC_MODULE_INIT_CTR;
DEFINE_PGM_CTR(PM_FUNC_PRE_INIT_CTR)                                D_FUNC_PRE_INIT_CTR;
DEFINE_PGM_CTR(PM_FUNC_INIT_CTR)                                    D_FUNC_INIT_CTR;
DEFINE_PGM_CTR(PM_FUNC_CONFIGURE_MODULES_FOR_DEVICE_CTR)            D_FUNC_CONFIGURE_MODULES_FOR_DEVICE_CTR;
DEFINE_PGM_CTR(PM_FUNC_LOOP_CTR)                                    D_FUNC_LOOP_CTR;
DEFINE_PGM_CTR(PM_FUNC_EVERY_50_MSECOND_CTR)                        D_FUNC_EVERY_50_MSECOND_CTR;
DEFINE_PGM_CTR(PM_FUNC_EVERY_100_MSECOND_CTR)                       D_FUNC_EVERY_100_MSECOND_CTR;
DEFINE_PGM_CTR(PM_FUNC_EVERY_250_MSECOND_CTR)                       D_FUNC_EVERY_250_MSECOND_CTR;
DEFINE_PGM_CTR(PM_FUNC_EVERY_SECOND_CTR)                            D_FUNC_EVERY_SECOND_CTR;
DEFINE_PGM_CTR(PM_FUNC_EVERY_MINUTE_CTR)                            D_FUNC_EVERY_MINUTE_CTR; 
DEFINE_PGM_CTR(PM_FUNC_EVERY_HOUR_CTR)                              D_FUNC_EVERY_HOUR_CTR; 
DEFINE_PGM_CTR(PM_FUNC_EVERY_MIDNIGHT_CTR)                          D_FUNC_EVERY_MIDNIGHT_CTR;
DEFINE_PGM_CTR(PM_FUNC_EVERY_MIDDAY_CTR)                            D_FUNC_EVERY_MIDDAY_CTR;
DEFINE_PGM_CTR(PM_FUNC_ON_SUCCESSFUL_BOOT_CTR)                      D_FUNC_ON_SUCCESSFUL_BOOT_CTR;
DEFINE_PGM_CTR(PM_FUNC_UPTIME_10_SECONDS_CTR)                       D_FUNC_UPTIME_10_SECONDS_CTR;
DEFINE_PGM_CTR(PM_FUNC_UPTIME_1_MINUTES_CTR)                        D_FUNC_UPTIME_1_MINUTES_CTR;
DEFINE_PGM_CTR(PM_FUNC_UPTIME_10_MINUTES_CTR)                       D_FUNC_UPTIME_10_MINUTES_CTR;
DEFINE_PGM_CTR(PM_FUNC_UPTIME_60_MINUTES_CTR)                       D_FUNC_UPTIME_60_MINUTES_CTR;
DEFINE_PGM_CTR(PM_FUNC_RESTART_SPLASH_INFORMATION_CTR)              D_FUNC_RESTART_SPLASH_INFORMATION_CTR;
DEFINE_PGM_CTR(PM_FUNC_PREP_BEFORE_TELEPERIOD_CTR)                  D_FUNC_PREP_BEFORE_TELEPERIOD_CTR;
DEFINE_PGM_CTR(PM_FUNC_JSON_APPEND_CTR)                             D_FUNC_JSON_APPEND_CTR;
DEFINE_PGM_CTR(PM_FUNC_SAVE_BEFORE_RESTART_CTR)                     D_FUNC_SAVE_BEFORE_RESTART_CTR;
DEFINE_PGM_CTR(PM_FUNC_SETTINGS_DEFAULT_CTR)                        D_FUNC_SETTINGS_DEFAULT_CTR;
DEFINE_PGM_CTR(PM_FUNC_SETTINGS_PRELOAD_DEFAULT_IN_MODULES_CTR)     D_FUNC_SETTINGS_PRELOAD_DEFAULT_IN_MODULES_CTR;
DEFINE_PGM_CTR(PM_FUNC_SETTINGS_OVERWRITE_SAVED_TO_DEFAULT_CTR)     D_FUNC_SETTINGS_OVERWRITE_SAVED_TO_DEFAULT_CTR;
DEFINE_PGM_CTR(PM_FUNC_SETTINGS_LOAD_VALUES_INTO_MODULE_CTR)        D_FUNC_SETTINGS_LOAD_VALUES_INTO_MODULE_CTR;
DEFINE_PGM_CTR(PM_FUNC_SETTINGS_SAVE_VALUES_FROM_MODULE_CTR)        D_FUNC_SETTINGS_SAVE_VALUES_FROM_MODULE_CTR;
DEFINE_PGM_CTR(PM_FUNC_FUNCTION_LAMBDA_INIT_CTR)                    D_FUNC_FUNCTION_LAMBDA_INIT_CTR;
DEFINE_PGM_CTR(PM_FUNC_FUNCTION_LAMBDA_LOOP_CTR)                    D_FUNC_FUNCTION_LAMBDA_LOOP_CTR;
DEFINE_PGM_CTR(PM_FUNC_COMMAND_CTR)                                 D_FUNC_COMMAND_CTR;
DEFINE_PGM_CTR(PM_FUNC_COMMAND_SENSOR_CTR)                          D_FUNC_COMMAND_SENSOR_CTR;
DEFINE_PGM_CTR(PM_FUNC_COMMAND_DRIVER_CTR)                          D_FUNC_COMMAND_DRIVER_CTR;
DEFINE_PGM_CTR(PM_FUNC_JSON_COMMAND_CTR)                            D_FUNC_JSON_COMMAND_CTR;
DEFINE_PGM_CTR(PM_FUNC_JSON_COMMAND_OBJECT_CTR)                     D_FUNC_JSON_COMMAND_OBJECT_CTR;
DEFINE_PGM_CTR(PM_FUNC_WIFI_CONNECTED_CTR)                          D_FUNC_WIFI_CONNECTED_CTR;
DEFINE_PGM_CTR(PM_FUNC_WIFI_DISCONNECTED_CTR)                       D_FUNC_WIFI_DISCONNECTED_CTR;
DEFINE_PGM_CTR(PM_FUNC_MQTT_SUBSCRIBE_CTR)                          D_FUNC_MQTT_SUBSCRIBE_CTR;
DEFINE_PGM_CTR(PM_FUNC_MQTT_INIT_CTR)                               D_FUNC_MQTT_INIT_CTR;
DEFINE_PGM_CTR(PM_FUNC_MQTT_CONNECTED_CTR)                          D_FUNC_MQTT_CONNECTED_CTR;
DEFINE_PGM_CTR(PM_FUNC_MQTT_DISCONNECTED_CTR)                       D_FUNC_MQTT_DISCONNECTED_CTR;
DEFINE_PGM_CTR(PM_FUNC_MQTT_COMMAND_CTR)                            D_FUNC_MQTT_COMMAND_CTR;
DEFINE_PGM_CTR(PM_FUNC_MQTT_SENDER_CTR)                             D_FUNC_MQTT_SENDER_CTR;
DEFINE_PGM_CTR(PM_FUNC_MQTT_HANDLERS_RESET_CTR)                     D_FUNC_MQTT_HANDLERS_RESET_CTR;
DEFINE_PGM_CTR(PM_FUNC_MQTT_HANDLERS_INIT_CTR)                      D_FUNC_MQTT_HANDLERS_INIT_CTR;
DEFINE_PGM_CTR(PM_FUNC_MQTT_HANDLERS_REFRESH_TELEPERIOD_CTR)        D_FUNC_MQTT_HANDLERS_REFRESH_TELEPERIOD_CTR;
DEFINE_PGM_CTR(PM_FUNC_SET_POWER_CTR)                               D_FUNC_SET_POWER_CTR;
DEFINE_PGM_CTR(PM_FUNC_SET_DEVICE_POWER_CTR)                        D_FUNC_SET_DEVICE_POWER_CTR;
DEFINE_PGM_CTR(PM_FUNC_SHOW_SENSOR_CTR)                             D_FUNC_SHOW_SENSOR_CTR;
DEFINE_PGM_CTR(PM_FUNC_RULES_PROCESS_CTR)                           D_FUNC_RULES_PROCESS_CTR;
DEFINE_PGM_CTR(PM_FUNC_SERIAL_CTR)                                  D_FUNC_SERIAL_CTR;
DEFINE_PGM_CTR(PM_FUNC_FREE_MEM_CTR)                                D_FUNC_FREE_MEM_CTR;
DEFINE_PGM_CTR(PM_FUNC_BUTTON_PRESSED_CTR)                          D_FUNC_BUTTON_PRESSED_CTR;
DEFINE_PGM_CTR(PM_FUNC_ENERGY_RESET_CTR)                            D_FUNC_ENERGY_RESET_CTR;
DEFINE_PGM_CTR(PM_FUNC_SENSOR_UPDATED_CTR)                          D_FUNC_SENSOR_UPDATED_CTR;
DEFINE_PGM_CTR(PM_FUNC_STATUS_MESSAGE_APPEND_CTR)                   D_FUNC_STATUS_MESSAGE_APPEND_CTR;
DEFINE_PGM_CTR(PM_FUNC_JSON_HARDWARE_APPEND_CTR)                    D_FUNC_JSON_HARDWARE_APPEND_CTR;
DEFINE_PGM_CTR(PM_FUNC_SET_CHANNELS_CTR)                            D_FUNC_SET_CHANNELS_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ADD_MAIN_BUTTON_CTR)                     D_FUNC_WEB_ADD_MAIN_BUTTON_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ADD_BUTTON_CTR)                          D_FUNC_WEB_ADD_BUTTON_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ADD_BUTTON_SYSTEM_SETTINGS_CTR)          D_FUNC_WEB_ADD_BUTTON_SYSTEM_SETTINGS_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ADD_HANDLER_CTR)                         D_FUNC_WEB_ADD_HANDLER_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ROOT_SEND_STYLE_CTR)                     D_FUNC_WEB_ROOT_SEND_STYLE_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ROOT_SEND_SCRIPT_CTR)                    D_FUNC_WEB_ROOT_SEND_SCRIPT_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ROOT_SCRIPT_JSON_FETCH_MODULEPARSING_CTR) D_FUNC_WEB_ROOT_SCRIPT_JSON_FETCH_MODULEPARSING_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ROOT_SEND_BODY_CTR)                      D_FUNC_WEB_ROOT_SEND_BODY_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ROOT_SEND_STATUS_CTR)                    D_FUNC_WEB_ROOT_SEND_STATUS_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ADD_ROOT_SHOWS_CTR)                      D_FUNC_WEB_ADD_ROOT_SHOWS_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ADD_JSON_FETCH_RESULT_CTR)               D_FUNC_WEB_ADD_JSON_FETCH_RESULT_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ADD_JSON_DATA_FETCH_URL_CTR)             D_FUNC_WEB_ADD_JSON_DATA_FETCH_URL_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ADD_ROOT_TABLE_ROWS_CTR)                 D_FUNC_WEB_ADD_ROOT_TABLE_ROWS_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ADD_ROOT_SCRIPT_CTR)                     D_FUNC_WEB_ADD_ROOT_SCRIPT_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_ADD_ROOT_STYLE_CTR)                      D_FUNC_WEB_ADD_ROOT_STYLE_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_APPEND_LOADTIME_ROOT_URLS_CTR)           D_FUNC_WEB_APPEND_LOADTIME_ROOT_URLS_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_APPEND_LOADTIME_ROOT_RATES_CTR)          D_FUNC_WEB_APPEND_LOADTIME_ROOT_RATES_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_APPEND_RUNTIME_ROOT_URLS_CTR)            D_FUNC_WEB_APPEND_RUNTIME_ROOT_URLS_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_APPEND_RUNTIME_ROOT_RATES_CTR)           D_FUNC_WEB_APPEND_RUNTIME_ROOT_RATES_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_APPEND_ROOT_STATUS_TABLE_IFCHANGED_CTR)  D_FUNC_WEB_APPEND_ROOT_STATUS_TABLE_IFCHANGED_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_APPEND_ROOT_STATUS_TABLE_FORCED_CTR)     D_FUNC_WEB_APPEND_ROOT_STATUS_TABLE_FORCED_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_APPEND_ROOT_ADD_MAIN_BUTTONS_CTR)        D_FUNC_WEB_APPEND_ROOT_ADD_MAIN_BUTTONS_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_APPEND_ROOT_BUTTONS_CTR)                 D_FUNC_WEB_APPEND_ROOT_BUTTONS_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_PAGEINFORMATION_SEND_MODULE_CTR)         D_FUNC_WEB_PAGEINFORMATION_SEND_MODULE_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_COMMAND_CTR)                             D_FUNC_WEB_COMMAND_CTR;
// DEFINE_PGM_CTR(PM_FUNC_CHECK_POINTERS_CTR)                          D_FUNC_CHECK_POINTERS_CTR;
DEFINE_PGM_CTR(PM_FUNC_WEB_SYSTEM_INFO_CTR)                         D_FUNC_WEB_SYSTEM_INFO_CTR;
DEFINE_PGM_CTR(PM_FUNC_DEBUG_CONFIGURE_CTR)                         D_FUNC_DEBUG_CONFIGURE_CTR;

#endif // ENABLE_DEBUG_FUNCTION_NAMES
// Function names exposed to rules, need places here
DEFINE_PGM_CTR(PM_FUNC_EVENT_MOTION_STARTED_CTR)  D_FUNC_EVENT_MOTION_STARTED_CTR;
DEFINE_PGM_CTR(PM_FUNC_EVENT_INPUT_STATE_CHANGED_CTR)   D_FUNC_EVENT_INPUT_STATE_CHANGED_CTR;
DEFINE_PGM_CTR(PM_FUNC_EVENT_SET_POWER_CTR)   D_FUNC_EVENT_SET_POWER_CTR;
DEFINE_PGM_CTR(PM_FUNC_EVENT_SET_SPEED_CTR)   D_FUNC_EVENT_SET_SPEED_CTR;
