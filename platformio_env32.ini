[env:tasmota32_base]
framework               = ${common.framework}
platform                = ${common32.platform}
platform_packages       = ${common32.platform_packages}
board                   = ${common32.board}
board_build.ldscript    = ${common32.board_build.ldscript}
board_build.partitions  = ${common32.board_build.partitions}
board_build.flash_mode  = ${common32.board_build.flash_mode}
board_build.f_flash     = ${common32.board_build.f_flash}
board_build.f_cpu       = ${common32.board_build.f_cpu}
monitor_speed           = ${common32.monitor_speed}
upload_port             = ${common32.upload_port}
upload_resetmethod      = ${common32.upload_resetmethod}
upload_speed            = ${common32.upload_speed}
extra_scripts           = ${common32.extra_scripts}
build_unflags           = ${common32.build_unflags}
build_flags             = ${common32.build_flags}
lib_extra_dirs          = ${common32.lib_extra_dirs}
lib_deps = ${common.lib_deps}
lib_ignore              =
    cc1101
    ESP32 Azure IoT Arduino
    ESP32 Async UDP
    ESP32 BLE Arduino
    SimpleBLE
    NetBIOS
    ESP32
    Preferences
    BluetoothSerial


[env:tasmota32_base-webcam]
extends = env:tasmota32_base
board                   = esp32cam
board_build.f_cpu       = 240000000L
build_flags             = ${common32.build_flags} -DFIRMWARE_WEBCAM
lib_extra_dirs          = lib/libesp32, lib/lib_basic

[env:tasmota32-minimal]
extends = env:tasmota32_base
build_flags             = ${common32.build_flags} -DFIRMWARE_MINIMAL -Wcpp
lib_extra_dirs          = lib/libesp32
monitor_filters = esp32_exception_decoder
build_type = debug

[env:esp32_rgboutsidetree]
extends = env:tasmota32_base
build_flags             = ${common32.build_flags} -DDEVICE_RGBOUTSIDETREE 
 -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -lc-psram-workaround -lm-psram-workaround -DFIRMWARE_WEBCAM
;-Wcpp
lib_extra_dirs          = lib/libesp32, , lib/lib_basic, lib/libesp32/network, lib/lib_network
;, lib/lib_tascompat
; monitor_filters = esp32_exception_decoder
; build_type = debug
upload_port = COM3
; upload_port = 192.168.1.119







[env:wh_clockbed]
extends = env:whitehall_32
build_flags = ${common.build_flags} -D DEVICE_RGBCLOCK_BEDROOM_WALL -w
                    -D USE_USER_MICHAEL            
                    '-DDEVICENAME_CTR="tg_lighting_L10_7segmentclock"'
                    ; -DCORE_DEBUG_LEVEL=5         
lib_extra_dirs  = ${library.lib_extra_dirs}
                lib/libesp32
                lib/lib_basic
                lib/lib_wled32
                lib/lib_custom
                
                ; lib/lib_network
                ; lib/lib_async32
                ; lib/lib_network_web
                ; lib/lib_custom
                ; lib/libesp32/network
upload_protocol = espota
upload_port = 192.168.0.112
; upload_port = testgroup_lighting_L8.local
; monitor_filters = esp32_exception_decoder
; build_type = debug
; upload_port = COM14
; extra_scripts   = ${scripts_defaults.extra_scripts} 
;                   gzip_fw.py
;${common32.lib_extra_dirs} 




[env:wh_clock_tv]
extends = env:whitehall_32
build_unflags               = ${esp32_defaults.build_unflags}
build_flags                 = ${esp32_defaults.build_flags}
                                    -D DEVICE_RGBCLOCK_TVROOM
                                    -w                                     
lib_extra_dirs          = ${common32.lib_extra_dirs}              
                          lib/libesp32
                          lib/lib_basic
                          lib/lib_network
                          lib/lib_display
                          lib/lib_onewire2023 
                          lib/lib_sensor
                          
upload_protocol = espota
; upload_port = rgbclock_tvroom.local
upload_port = 192.168.0.130
; upload_port = COM25
; monitor_filters = esp32_exception_decoder
; build_type = debug



[env:wh_rgbdis_weight]
extends = env:whitehall_32
build_unflags               = ${esp32_defaults.build_unflags}
build_flags                 = ${esp32_defaults.build_flags}
                                    -D DEVICE_RGB_SEVEN_SEGMENT_WEIGHT
                                    -w                                     
lib_extra_dirs          = ${common32.lib_extra_dirs}              
                          lib/libesp32
                          lib/lib_basic
                          lib/lib_network
                          lib/lib_display
                          lib/lib_onewire2023 
                          lib/lib_sensor
                          
upload_protocol = espota
; upload_port = rgbclock_tvroom.local
upload_port = 192.168.0.130
; upload_port = COM25
; monitor_filters = esp32_exception_decoder
; build_type = debug

